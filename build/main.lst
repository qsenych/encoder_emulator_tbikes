ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.global	__aeabi_i2d
  19              		.global	__aeabi_dmul
  20              		.global	__aeabi_i2f
  21              		.global	__aeabi_fmul
  22              		.global	__aeabi_f2d
  23              		.global	__aeabi_dadd
  24              		.global	__aeabi_d2iz
  25              		.section	.text.decayAndMerge,"ax",%progbits
  26              		.align	1
  27              		.global	decayAndMerge
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  32              	decayAndMerge:
  33              	.LVL0:
  34              	.LFB71:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "tim.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 2


  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include "atan_lut.h"
  29:Core/Src/main.c **** #include "math.h"
  30:Core/Src/main.c **** #include "stm32f1xx_hal_gpio.h"
  31:Core/Src/main.c **** #include <stdio.h>
  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** #define SIN_PERIODS_PER_REV 1
  42:Core/Src/main.c **** #define HALL_PERIODS_PER_REV 20
  43:Core/Src/main.c **** #define OFFSET 0
  44:Core/Src/main.c **** #define LUT_SIZE 1024
  45:Core/Src/main.c **** #define ADC_MAX 3479.0
  46:Core/Src/main.c **** #define ADC_MIN 1850.0
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PD */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  51:Core/Src/main.c **** /* USER CODE BEGIN PM */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** // Uncomment the line below to enable debugging 
  54:Core/Src/main.c **** // #define DEBUG
  55:Core/Src/main.c **** #ifdef DEBUG
  56:Core/Src/main.c ****   #define DEBUG_PRINT(...) printf(__VA_ARGS__)
  57:Core/Src/main.c ****   #define DEBUG_DELAY(x) HAL_Delay(x)
  58:Core/Src/main.c **** #else
  59:Core/Src/main.c ****   #define DEBUG_PRINT(...)
  60:Core/Src/main.c ****   #define DEBUG_DELAY(x)
  61:Core/Src/main.c **** #endif
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END PM */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE BEGIN PV */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END PV */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  72:Core/Src/main.c **** void SystemClock_Config(void);
  73:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  74:Core/Src/main.c **** static float fast_atan(uint16_t ADC_C, uint16_t ADC_S);
  75:Core/Src/main.c **** void HallPositionOutput(int theta_deg);
  76:Core/Src/main.c **** void HallPositionOutput_20Pair(int theta_deg);
  77:Core/Src/main.c **** void HallPositionOutput_10Pair(int theta_deg);
  78:Core/Src/main.c **** int decayAndMerge(int historical_value, int new_value);
  79:Core/Src/main.c **** void HallPositionOutput_10Pair_Inverted(theta_deg);
  80:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  81:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 3


  82:Core/Src/main.c **** /* USER CODE END PFP */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  86:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* USER CODE END 0 */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /**
  91:Core/Src/main.c ****   * @brief  The application entry point.
  92:Core/Src/main.c ****   * @retval int
  93:Core/Src/main.c ****   */
  94:Core/Src/main.c **** int main(void)
  95:Core/Src/main.c **** {
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   uint16_t sin_adc = 0;
 100:Core/Src/main.c ****   uint16_t cos_adc = 0;
 101:Core/Src/main.c ****   float theta_rad;
 102:Core/Src/main.c ****   int theta_deg; // only for debugging
 103:Core/Src/main.c ****   int historical_value = 0; // Initialize historical value for decay and merge
 104:Core/Src/main.c ****   int merged_value = 0; // Initialize merged value
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   int sin;
 107:Core/Src/main.c ****   int cos; 
 108:Core/Src/main.c ****   int rad; 
 109:Core/Src/main.c ****   int deg;
 110:Core/Src/main.c ****   /* USER CODE END 1 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 115:Core/Src/main.c ****   HAL_Init();
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE END Init */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* Configure the system clock */
 122:Core/Src/main.c ****   SystemClock_Config();
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END SysInit */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Initialize all configured peripherals */
 129:Core/Src/main.c ****   MX_GPIO_Init();
 130:Core/Src/main.c ****   MX_ADC1_Init();
 131:Core/Src/main.c ****   MX_ADC2_Init();
 132:Core/Src/main.c ****   MX_USART1_UART_Init();
 133:Core/Src/main.c ****   MX_TIM2_Init();
 134:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   // Write each pin initally so that its never all reset. 
 137:Core/Src/main.c ****   HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 138:Core/Src/main.c ****   HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 4


 139:Core/Src/main.c ****   HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* USER CODE END 2 */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* Infinite loop */
 144:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 145:Core/Src/main.c ****   while (1) {
 146:Core/Src/main.c ****     HAL_ADC_Start(&hadc1); // Needs to be called every time
 147:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 148:Core/Src/main.c ****     cos_adc = decayAndMerge(cos_adc, HAL_ADC_GetValue(&hadc1)); // Decay and merge the new value wi
 149:Core/Src/main.c ****     
 150:Core/Src/main.c ****     HAL_ADC_Start(&hadc2); // Needs to be called every time
 151:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc2, HAL_MAX_DELAY);
 152:Core/Src/main.c ****     sin_adc = decayAndMerge(sin_adc, HAL_ADC_GetValue(&hadc2)); // Decay and merge the new value wi
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****     // cos_adc = 1000; 
 155:Core/Src/main.c ****     // sin_adc = 3000; // Test values for debugging
 156:Core/Src/main.c ****   
 157:Core/Src/main.c ****     const float midpoint = (ADC_MAX + ADC_MIN) / 2.0f;
 158:Core/Src/main.c ****     float den = cos_adc - midpoint;
 159:Core/Src/main.c ****     float num = sin_adc - midpoint;
 160:Core/Src/main.c ****     if (den != 0){
 161:Core/Src/main.c ****       theta_rad = atan2f(num, den); // Use atan2 for better handling of quadrants
 162:Core/Src/main.c ****     }
 163:Core/Src/main.c ****     else {
 164:Core/Src/main.c ****       theta_rad = 0; // Handle the case where den is zero to avoid division by zero
 165:Core/Src/main.c ****     }
 166:Core/Src/main.c ****       
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****    
 169:Core/Src/main.c ****     theta_deg = (int)(180.0 / M_PI * theta_rad)+180;
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****     /* USER CODE END WHILE */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 174:Core/Src/main.c ****     rad = (int)(theta_rad * 1000); // Convert to milliradians
 175:Core/Src/main.c ****     DEBUG_PRINT("ADC_C: %d ADC_S: %d theta_deg: %d rad: %d (millirad)\r\n", cos_adc, sin_adc, theta
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****     HallPositionOutput_10Pair_Inverted(theta_deg); // Call the function to output the Hall position
 178:Core/Src/main.c ****     DEBUG_DELAY(10); 
 179:Core/Src/main.c ****     
 180:Core/Src/main.c ****   
 181:Core/Src/main.c ****   } 
 182:Core/Src/main.c ****   /* USER CODE END 3 */
 183:Core/Src/main.c **** }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** /**
 186:Core/Src/main.c ****   * @brief System Clock Configuration
 187:Core/Src/main.c ****   * @retval None
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c **** void SystemClock_Config(void)
 190:Core/Src/main.c **** {
 191:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 192:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 193:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 5


 196:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 199:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 200:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 204:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 205:Core/Src/main.c ****   {
 206:Core/Src/main.c ****     Error_Handler();
 207:Core/Src/main.c ****   }
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 210:Core/Src/main.c ****   */
 211:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 212:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 213:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 214:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 215:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 216:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 219:Core/Src/main.c ****   {
 220:Core/Src/main.c ****     Error_Handler();
 221:Core/Src/main.c ****   }
 222:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 223:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 224:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 225:Core/Src/main.c ****   {
 226:Core/Src/main.c ****     Error_Handler();
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c **** }
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** // Currently this function is not used.
 233:Core/Src/main.c **** static float fast_atan(uint16_t ADC_C, uint16_t ADC_S) {
 234:Core/Src/main.c ****   const float midpoint = (ADC_MAX + ADC_MIN) / 2.0f;
 235:Core/Src/main.c ****   float num = ADC_C - midpoint;
 236:Core/Src/main.c ****   float den = ADC_S - midpoint;
 237:Core/Src/main.c ****   if (den == 0)
 238:Core/Src/main.c ****     return (num >= 0) ? 0 : M_PI;
 239:Core/Src/main.c ****   float r = fabs(num / den);
 240:Core/Src/main.c ****   int index = (int)(r * 1023.0f);
 241:Core/Src/main.c ****   float theta = ATAN_LUT[index];
 242:Core/Src/main.c ****   float next_theta = ATAN_LUT[index + 1];
 243:Core/Src/main.c ****   theta += (r - (index / 1023.0f)) * (next_theta - theta);
 244:Core/Src/main.c ****   if (num > den)
 245:Core/Src/main.c ****     theta = M_PI_2 - theta;
 246:Core/Src/main.c ****   if (num < 0 && den > 0)
 247:Core/Src/main.c ****     return M_PI + theta;
 248:Core/Src/main.c ****   if (den < 0)
 249:Core/Src/main.c ****     return M_PI - theta;
 250:Core/Src/main.c ****   return theta;
 251:Core/Src/main.c **** }
 252:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 6


 253:Core/Src/main.c **** int decayAndMerge(int historical_value, int new_value){
  35              		.loc 1 253 55 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		.loc 1 253 55 is_stmt 0 view .LVU1
  40 0000 D0B5     		push	{r4, r6, r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 16
  43              		.cfi_offset 4, -16
  44              		.cfi_offset 6, -12
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 0C46     		mov	r4, r1
 254:Core/Src/main.c ****   if(historical_value == 0){
  48              		.loc 1 254 3 is_stmt 1 view .LVU2
  49              		.loc 1 254 5 is_stmt 0 view .LVU3
  50 0004 00B9     		cbnz	r0, .L2
 255:Core/Src/main.c ****     historical_value = new_value; // Initialize historical value if it's zero
  51              		.loc 1 255 22 view .LVU4
  52 0006 0846     		mov	r0, r1
  53              	.LVL1:
  54              	.L2:
 256:Core/Src/main.c ****   }
 257:Core/Src/main.c ****   float decay_rate = 0.5; 
  55              		.loc 1 257 3 is_stmt 1 view .LVU5
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   return (int)(historical_value * (1.0-decay_rate) + new_value * decay_rate);
  56              		.loc 1 259 3 view .LVU6
  57              		.loc 1 259 33 is_stmt 0 view .LVU7
  58 0008 FFF7FEFF 		bl	__aeabi_i2d
  59              	.LVL2:
  60              		.loc 1 259 33 view .LVU8
  61 000c 0022     		movs	r2, #0
  62 000e 0B4B     		ldr	r3, .L5
  63 0010 FFF7FEFF 		bl	__aeabi_dmul
  64              	.LVL3:
  65 0014 0646     		mov	r6, r0
  66 0016 0F46     		mov	r7, r1
  67              		.loc 1 259 64 view .LVU9
  68 0018 2046     		mov	r0, r4
  69 001a FFF7FEFF 		bl	__aeabi_i2f
  70              	.LVL4:
  71 001e 4FF07C51 		mov	r1, #1056964608
  72 0022 FFF7FEFF 		bl	__aeabi_fmul
  73              	.LVL5:
  74 0026 FFF7FEFF 		bl	__aeabi_f2d
  75              	.LVL6:
  76 002a 0246     		mov	r2, r0
  77 002c 0B46     		mov	r3, r1
  78              		.loc 1 259 52 view .LVU10
  79 002e 3046     		mov	r0, r6
  80 0030 3946     		mov	r1, r7
  81 0032 FFF7FEFF 		bl	__aeabi_dadd
  82              	.LVL7:
  83              		.loc 1 259 10 view .LVU11
  84 0036 FFF7FEFF 		bl	__aeabi_d2iz
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 7


  85              	.LVL8:
 260:Core/Src/main.c **** }
  86              		.loc 1 260 1 view .LVU12
  87 003a D0BD     		pop	{r4, r6, r7, pc}
  88              	.LVL9:
  89              	.L6:
  90              		.loc 1 260 1 view .LVU13
  91              		.align	2
  92              	.L5:
  93 003c 0000E03F 		.word	1071644672
  94              		.cfi_endproc
  95              	.LFE71:
  97              		.section	.text.HallPositionOutput,"ax",%progbits
  98              		.align	1
  99              		.global	HallPositionOutput
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 104              	HallPositionOutput:
 105              	.LVL10:
 106              	.LFB72:
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** /**
 263:Core/Src/main.c ****  * @brief  This function is used to output the Hall position. For a single pole pair. 
 264:Core/Src/main.c ****  * @param  theta_deg: The angle in degrees.
 265:Core/Src/main.c ****  * @retval None
 266:Core/Src/main.c ****  * @author Alex
 267:Core/Src/main.c ****  */
 268:Core/Src/main.c **** void HallPositionOutput(theta_deg){
 107              		.loc 1 268 35 is_stmt 1 view -0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		.loc 1 268 35 is_stmt 0 view .LVU15
 112 0000 10B5     		push	{r4, lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 269:Core/Src/main.c ****   if(theta_deg >= 0 && theta_deg < 60) {
 117              		.loc 1 269 3 is_stmt 1 view .LVU16
 118              		.loc 1 269 5 is_stmt 0 view .LVU17
 119 0002 3B28     		cmp	r0, #59
 120 0004 24D9     		bls	.L15
 270:Core/Src/main.c ****     //HALL A = 1, HALL_B = 0, HALL_C = 1
 271:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 272:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 273:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 0, HALL C = 1\r\n");
 276:Core/Src/main.c ****   } else if (theta_deg >= 60 && theta_deg < 120){
 121              		.loc 1 276 10 is_stmt 1 view .LVU18
 122              		.loc 1 276 30 is_stmt 0 view .LVU19
 123 0006 A0F13C03 		sub	r3, r0, #60
 124              		.loc 1 276 13 view .LVU20
 125 000a 3B2B     		cmp	r3, #59
 126 000c 31D9     		bls	.L16
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 8


 277:Core/Src/main.c ****     //HALL A = 1, HALL_B = 0, HALL_C = 0
 278:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 279:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 280:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 283:Core/Src/main.c ****   } else if (theta_deg >= 120 && theta_deg < 180){
 127              		.loc 1 283 10 is_stmt 1 view .LVU21
 128              		.loc 1 283 31 is_stmt 0 view .LVU22
 129 000e A0F17803 		sub	r3, r0, #120
 130              		.loc 1 283 13 view .LVU23
 131 0012 3B2B     		cmp	r3, #59
 132 0014 3ED9     		bls	.L17
 284:Core/Src/main.c ****     //HALL A = 1, HALL_B = 1, HALL_C = 0
 285:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 286:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 287:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 290:Core/Src/main.c ****   } else if (theta_deg >= 180 && theta_deg < 240){
 133              		.loc 1 290 10 is_stmt 1 view .LVU24
 134              		.loc 1 290 31 is_stmt 0 view .LVU25
 135 0016 A0F1B403 		sub	r3, r0, #180
 136              		.loc 1 290 13 view .LVU26
 137 001a 3B2B     		cmp	r3, #59
 138 001c 4BD9     		bls	.L18
 291:Core/Src/main.c ****     //HALL A = 0, HALL_B = 1, HALL_C = 0
 292:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 293:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 294:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 297:Core/Src/main.c ****   } else if (theta_deg >= 240 && theta_deg < 300){
 139              		.loc 1 297 10 is_stmt 1 view .LVU27
 140              		.loc 1 297 31 is_stmt 0 view .LVU28
 141 001e A0F1F003 		sub	r3, r0, #240
 142              		.loc 1 297 13 view .LVU29
 143 0022 3B2B     		cmp	r3, #59
 144 0024 58D9     		bls	.L19
 298:Core/Src/main.c ****     //HALL A = 0, HALL_B = 1, HALL_C = 1
 299:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 300:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 301:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 304:Core/Src/main.c ****   } else if (theta_deg >= 300 && theta_deg < 360){
 145              		.loc 1 304 10 is_stmt 1 view .LVU30
 146              		.loc 1 304 31 is_stmt 0 view .LVU31
 147 0026 A0F59670 		sub	r0, r0, #300
 148              	.LVL11:
 149              		.loc 1 304 13 view .LVU32
 150 002a 3B28     		cmp	r0, #59
 151 002c 20D8     		bhi	.L7
 305:Core/Src/main.c ****     //HALL A = 0, HALL_B = 0, HALL_C = 1
 306:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 152              		.loc 1 306 5 is_stmt 1 view .LVU33
 153 002e 334C     		ldr	r4, .L20
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 9


 154 0030 0022     		movs	r2, #0
 155 0032 0821     		movs	r1, #8
 156 0034 2046     		mov	r0, r4
 157              	.LVL12:
 158              		.loc 1 306 5 is_stmt 0 view .LVU34
 159 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 160              	.LVL13:
 307:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 161              		.loc 1 307 5 is_stmt 1 view .LVU35
 162 003a 0022     		movs	r2, #0
 163 003c 2021     		movs	r1, #32
 164 003e 2046     		mov	r0, r4
 165 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 166              	.LVL14:
 308:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 167              		.loc 1 308 5 view .LVU36
 168 0044 0122     		movs	r2, #1
 169 0046 8021     		movs	r1, #128
 170 0048 2046     		mov	r0, r4
 171 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL15:
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 173              		.loc 1 310 58 view .LVU37
 311:Core/Src/main.c ****   } else {
 312:Core/Src/main.c ****     // Invalid angle
 313:Core/Src/main.c ****     DEBUG_PRINT("Invalid angle: %d\r\n", theta_deg);
 174              		.loc 1 313 52 view .LVU38
 314:Core/Src/main.c ****   }
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** }
 175              		.loc 1 316 1 is_stmt 0 view .LVU39
 176 004e 0FE0     		b	.L7
 177              	.LVL16:
 178              	.L15:
 271:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 179              		.loc 1 271 5 is_stmt 1 view .LVU40
 180 0050 2A4C     		ldr	r4, .L20
 181 0052 0122     		movs	r2, #1
 182 0054 0821     		movs	r1, #8
 183 0056 2046     		mov	r0, r4
 184              	.LVL17:
 271:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 185              		.loc 1 271 5 is_stmt 0 view .LVU41
 186 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 187              	.LVL18:
 272:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 188              		.loc 1 272 5 is_stmt 1 view .LVU42
 189 005c 0022     		movs	r2, #0
 190 005e 2021     		movs	r1, #32
 191 0060 2046     		mov	r0, r4
 192 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 193              	.LVL19:
 273:Core/Src/main.c **** 
 194              		.loc 1 273 5 view .LVU43
 195 0066 0122     		movs	r2, #1
 196 0068 8021     		movs	r1, #128
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 10


 197 006a 2046     		mov	r0, r4
 198 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 199              	.LVL20:
 275:Core/Src/main.c ****   } else if (theta_deg >= 60 && theta_deg < 120){
 200              		.loc 1 275 58 view .LVU44
 201              	.L7:
 202              		.loc 1 316 1 is_stmt 0 view .LVU45
 203 0070 10BD     		pop	{r4, pc}
 204              	.LVL21:
 205              	.L16:
 278:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 206              		.loc 1 278 5 is_stmt 1 view .LVU46
 207 0072 224C     		ldr	r4, .L20
 208 0074 0122     		movs	r2, #1
 209 0076 0821     		movs	r1, #8
 210 0078 2046     		mov	r0, r4
 211              	.LVL22:
 278:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 212              		.loc 1 278 5 is_stmt 0 view .LVU47
 213 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 214              	.LVL23:
 279:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 215              		.loc 1 279 5 is_stmt 1 view .LVU48
 216 007e 0022     		movs	r2, #0
 217 0080 2021     		movs	r1, #32
 218 0082 2046     		mov	r0, r4
 219 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 220              	.LVL24:
 280:Core/Src/main.c **** 
 221              		.loc 1 280 5 view .LVU49
 222 0088 0022     		movs	r2, #0
 223 008a 8021     		movs	r1, #128
 224 008c 2046     		mov	r0, r4
 225 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 226              	.LVL25:
 282:Core/Src/main.c ****   } else if (theta_deg >= 120 && theta_deg < 180){
 227              		.loc 1 282 58 view .LVU50
 228 0092 EDE7     		b	.L7
 229              	.LVL26:
 230              	.L17:
 285:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 231              		.loc 1 285 5 view .LVU51
 232 0094 194C     		ldr	r4, .L20
 233 0096 0122     		movs	r2, #1
 234 0098 0821     		movs	r1, #8
 235 009a 2046     		mov	r0, r4
 236              	.LVL27:
 285:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 237              		.loc 1 285 5 is_stmt 0 view .LVU52
 238 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 239              	.LVL28:
 286:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 240              		.loc 1 286 5 is_stmt 1 view .LVU53
 241 00a0 0122     		movs	r2, #1
 242 00a2 2021     		movs	r1, #32
 243 00a4 2046     		mov	r0, r4
 244 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 11


 245              	.LVL29:
 287:Core/Src/main.c **** 
 246              		.loc 1 287 5 view .LVU54
 247 00aa 0022     		movs	r2, #0
 248 00ac 8021     		movs	r1, #128
 249 00ae 2046     		mov	r0, r4
 250 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 251              	.LVL30:
 289:Core/Src/main.c ****   } else if (theta_deg >= 180 && theta_deg < 240){
 252              		.loc 1 289 58 view .LVU55
 253 00b4 DCE7     		b	.L7
 254              	.LVL31:
 255              	.L18:
 292:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 256              		.loc 1 292 5 view .LVU56
 257 00b6 114C     		ldr	r4, .L20
 258 00b8 0022     		movs	r2, #0
 259 00ba 0821     		movs	r1, #8
 260 00bc 2046     		mov	r0, r4
 261              	.LVL32:
 292:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 262              		.loc 1 292 5 is_stmt 0 view .LVU57
 263 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
 264              	.LVL33:
 293:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 265              		.loc 1 293 5 is_stmt 1 view .LVU58
 266 00c2 0122     		movs	r2, #1
 267 00c4 2021     		movs	r1, #32
 268 00c6 2046     		mov	r0, r4
 269 00c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 270              	.LVL34:
 294:Core/Src/main.c **** 
 271              		.loc 1 294 5 view .LVU59
 272 00cc 0022     		movs	r2, #0
 273 00ce 8021     		movs	r1, #128
 274 00d0 2046     		mov	r0, r4
 275 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 276              	.LVL35:
 296:Core/Src/main.c ****   } else if (theta_deg >= 240 && theta_deg < 300){
 277              		.loc 1 296 58 view .LVU60
 278 00d6 CBE7     		b	.L7
 279              	.LVL36:
 280              	.L19:
 299:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 281              		.loc 1 299 5 view .LVU61
 282 00d8 084C     		ldr	r4, .L20
 283 00da 0022     		movs	r2, #0
 284 00dc 0821     		movs	r1, #8
 285 00de 2046     		mov	r0, r4
 286              	.LVL37:
 299:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 287              		.loc 1 299 5 is_stmt 0 view .LVU62
 288 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 289              	.LVL38:
 300:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 290              		.loc 1 300 5 is_stmt 1 view .LVU63
 291 00e4 0122     		movs	r2, #1
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 12


 292 00e6 2021     		movs	r1, #32
 293 00e8 2046     		mov	r0, r4
 294 00ea FFF7FEFF 		bl	HAL_GPIO_WritePin
 295              	.LVL39:
 301:Core/Src/main.c **** 
 296              		.loc 1 301 5 view .LVU64
 297 00ee 0122     		movs	r2, #1
 298 00f0 8021     		movs	r1, #128
 299 00f2 2046     		mov	r0, r4
 300 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 301              	.LVL40:
 303:Core/Src/main.c ****   } else if (theta_deg >= 300 && theta_deg < 360){
 302              		.loc 1 303 58 view .LVU65
 303 00f8 BAE7     		b	.L7
 304              	.L21:
 305 00fa 00BF     		.align	2
 306              	.L20:
 307 00fc 000C0140 		.word	1073810432
 308              		.cfi_endproc
 309              	.LFE72:
 311              		.section	.text.HallPositionOutput_10Pair,"ax",%progbits
 312              		.align	1
 313              		.global	HallPositionOutput_10Pair
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 318              	HallPositionOutput_10Pair:
 319              	.LVL41:
 320              	.LFB73:
 317:Core/Src/main.c **** 
 318:Core/Src/main.c **** /**
 319:Core/Src/main.c ****  * @brief  This function is used to output the Hall position for a 10-pair motor. 
 320:Core/Src/main.c ****  * @param  theta_deg: The angle in degrees.
 321:Core/Src/main.c ****  * @retval None
 322:Core/Src/main.c ****  * @author Alex
 323:Core/Src/main.c ****  */
 324:Core/Src/main.c **** void HallPositionOutput_10Pair(theta_deg){
 321              		.loc 1 324 42 view -0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		.loc 1 324 42 is_stmt 0 view .LVU67
 326 0000 10B5     		push	{r4, lr}
 327              	.LCFI2:
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 4, -8
 330              		.cfi_offset 14, -4
 325:Core/Src/main.c ****   // Normalize the angle to a single electrical cycle (0-36 degrees)
 326:Core/Src/main.c ****   int theta_elec = theta_deg % 36;
 331              		.loc 1 326 3 is_stmt 1 view .LVU68
 332              		.loc 1 326 7 is_stmt 0 view .LVU69
 333 0002 434A     		ldr	r2, .L33
 334 0004 82FB0032 		smull	r3, r2, r2, r0
 335 0008 C317     		asrs	r3, r0, #31
 336 000a C3EBE203 		rsb	r3, r3, r2, asr #3
 337 000e 03EBC303 		add	r3, r3, r3, lsl #3
 338 0012 A0EB8303 		sub	r3, r0, r3, lsl #2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 13


 339              	.LVL42:
 327:Core/Src/main.c **** 
 328:Core/Src/main.c ****   if (theta_elec >= 0 && theta_elec < 6) {
 340              		.loc 1 328 3 is_stmt 1 view .LVU70
 341 0016 232B     		cmp	r3, #35
 342 0018 23D8     		bhi	.L22
 343 001a DFE803F0 		tbb	[pc, r3]
 344              	.L25:
 345 001e 12       		.byte	(.L30-.L25)/2
 346 001f 12       		.byte	(.L30-.L25)/2
 347 0020 12       		.byte	(.L30-.L25)/2
 348 0021 12       		.byte	(.L30-.L25)/2
 349 0022 12       		.byte	(.L30-.L25)/2
 350 0023 12       		.byte	(.L30-.L25)/2
 351 0024 23       		.byte	(.L29-.L25)/2
 352 0025 23       		.byte	(.L29-.L25)/2
 353 0026 23       		.byte	(.L29-.L25)/2
 354 0027 23       		.byte	(.L29-.L25)/2
 355 0028 23       		.byte	(.L29-.L25)/2
 356 0029 23       		.byte	(.L29-.L25)/2
 357 002a 34       		.byte	(.L28-.L25)/2
 358 002b 34       		.byte	(.L28-.L25)/2
 359 002c 34       		.byte	(.L28-.L25)/2
 360 002d 34       		.byte	(.L28-.L25)/2
 361 002e 34       		.byte	(.L28-.L25)/2
 362 002f 34       		.byte	(.L28-.L25)/2
 363 0030 45       		.byte	(.L27-.L25)/2
 364 0031 45       		.byte	(.L27-.L25)/2
 365 0032 45       		.byte	(.L27-.L25)/2
 366 0033 45       		.byte	(.L27-.L25)/2
 367 0034 45       		.byte	(.L27-.L25)/2
 368 0035 45       		.byte	(.L27-.L25)/2
 369 0036 56       		.byte	(.L26-.L25)/2
 370 0037 56       		.byte	(.L26-.L25)/2
 371 0038 56       		.byte	(.L26-.L25)/2
 372 0039 56       		.byte	(.L26-.L25)/2
 373 003a 56       		.byte	(.L26-.L25)/2
 374 003b 56       		.byte	(.L26-.L25)/2
 375 003c 67       		.byte	(.L24-.L25)/2
 376 003d 67       		.byte	(.L24-.L25)/2
 377 003e 67       		.byte	(.L24-.L25)/2
 378 003f 67       		.byte	(.L24-.L25)/2
 379 0040 67       		.byte	(.L24-.L25)/2
 380 0041 67       		.byte	(.L24-.L25)/2
 381              		.p2align 1
 382              	.L30:
 329:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 383              		.loc 1 329 5 view .LVU71
 384 0042 344C     		ldr	r4, .L33+4
 385 0044 0122     		movs	r2, #1
 386 0046 0821     		movs	r1, #8
 387 0048 2046     		mov	r0, r4
 388              	.LVL43:
 389              		.loc 1 329 5 is_stmt 0 view .LVU72
 390 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 391              	.LVL44:
 330:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 14


 392              		.loc 1 330 5 is_stmt 1 view .LVU73
 393 004e 0022     		movs	r2, #0
 394 0050 2021     		movs	r1, #32
 395 0052 2046     		mov	r0, r4
 396 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 397              	.LVL45:
 331:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 398              		.loc 1 331 5 view .LVU74
 399 0058 0122     		movs	r2, #1
 400 005a 8021     		movs	r1, #128
 401 005c 2046     		mov	r0, r4
 402 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 403              	.LVL46:
 332:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 0, HALL C = 1\r\n");
 404              		.loc 1 332 58 view .LVU75
 405              	.L22:
 333:Core/Src/main.c ****   } else if (theta_elec >= 6 && theta_elec < 12) {
 334:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 335:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 336:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 337:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 338:Core/Src/main.c ****   } else if (theta_elec >= 12 && theta_elec < 18) {
 339:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 340:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 341:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 342:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 343:Core/Src/main.c ****   } else if (theta_elec >= 18 && theta_elec < 24) {
 344:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 345:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 346:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 347:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 348:Core/Src/main.c ****   } else if (theta_elec >= 24 && theta_elec < 30) {
 349:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 350:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 351:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 352:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 353:Core/Src/main.c ****   } else if (theta_elec >= 30 && theta_elec < 36) {
 354:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 355:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 356:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 357:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 358:Core/Src/main.c ****   } else {
 359:Core/Src/main.c ****     DEBUG_PRINT("Invalid angle: %d\r\n", theta_deg);
 360:Core/Src/main.c ****   }
 361:Core/Src/main.c **** 
 362:Core/Src/main.c **** }
 406              		.loc 1 362 1 is_stmt 0 view .LVU76
 407 0062 10BD     		pop	{r4, pc}
 408              	.LVL47:
 409              	.L29:
 334:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 410              		.loc 1 334 5 is_stmt 1 view .LVU77
 411 0064 2B4C     		ldr	r4, .L33+4
 412 0066 0122     		movs	r2, #1
 413 0068 0821     		movs	r1, #8
 414 006a 2046     		mov	r0, r4
 415              	.LVL48:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 15


 334:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 416              		.loc 1 334 5 is_stmt 0 view .LVU78
 417 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 418              	.LVL49:
 335:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 419              		.loc 1 335 5 is_stmt 1 view .LVU79
 420 0070 0022     		movs	r2, #0
 421 0072 2021     		movs	r1, #32
 422 0074 2046     		mov	r0, r4
 423 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 424              	.LVL50:
 336:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 425              		.loc 1 336 5 view .LVU80
 426 007a 0022     		movs	r2, #0
 427 007c 8021     		movs	r1, #128
 428 007e 2046     		mov	r0, r4
 429 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 430              	.LVL51:
 337:Core/Src/main.c ****   } else if (theta_elec >= 12 && theta_elec < 18) {
 431              		.loc 1 337 58 view .LVU81
 432 0084 EDE7     		b	.L22
 433              	.LVL52:
 434              	.L28:
 339:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 435              		.loc 1 339 5 view .LVU82
 436 0086 234C     		ldr	r4, .L33+4
 437 0088 0122     		movs	r2, #1
 438 008a 0821     		movs	r1, #8
 439 008c 2046     		mov	r0, r4
 440              	.LVL53:
 339:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 441              		.loc 1 339 5 is_stmt 0 view .LVU83
 442 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 443              	.LVL54:
 340:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 444              		.loc 1 340 5 is_stmt 1 view .LVU84
 445 0092 0122     		movs	r2, #1
 446 0094 2021     		movs	r1, #32
 447 0096 2046     		mov	r0, r4
 448 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 449              	.LVL55:
 341:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 450              		.loc 1 341 5 view .LVU85
 451 009c 0022     		movs	r2, #0
 452 009e 8021     		movs	r1, #128
 453 00a0 2046     		mov	r0, r4
 454 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 455              	.LVL56:
 342:Core/Src/main.c ****   } else if (theta_elec >= 18 && theta_elec < 24) {
 456              		.loc 1 342 58 view .LVU86
 457 00a6 DCE7     		b	.L22
 458              	.LVL57:
 459              	.L27:
 344:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 460              		.loc 1 344 5 view .LVU87
 461 00a8 1A4C     		ldr	r4, .L33+4
 462 00aa 0022     		movs	r2, #0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 16


 463 00ac 0821     		movs	r1, #8
 464 00ae 2046     		mov	r0, r4
 465              	.LVL58:
 344:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 466              		.loc 1 344 5 is_stmt 0 view .LVU88
 467 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 468              	.LVL59:
 345:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 469              		.loc 1 345 5 is_stmt 1 view .LVU89
 470 00b4 0122     		movs	r2, #1
 471 00b6 2021     		movs	r1, #32
 472 00b8 2046     		mov	r0, r4
 473 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 474              	.LVL60:
 346:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 475              		.loc 1 346 5 view .LVU90
 476 00be 0022     		movs	r2, #0
 477 00c0 8021     		movs	r1, #128
 478 00c2 2046     		mov	r0, r4
 479 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 480              	.LVL61:
 347:Core/Src/main.c ****   } else if (theta_elec >= 24 && theta_elec < 30) {
 481              		.loc 1 347 58 view .LVU91
 482 00c8 CBE7     		b	.L22
 483              	.LVL62:
 484              	.L26:
 349:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 485              		.loc 1 349 5 view .LVU92
 486 00ca 124C     		ldr	r4, .L33+4
 487 00cc 0022     		movs	r2, #0
 488 00ce 0821     		movs	r1, #8
 489 00d0 2046     		mov	r0, r4
 490              	.LVL63:
 349:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 491              		.loc 1 349 5 is_stmt 0 view .LVU93
 492 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 493              	.LVL64:
 350:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 494              		.loc 1 350 5 is_stmt 1 view .LVU94
 495 00d6 0122     		movs	r2, #1
 496 00d8 2021     		movs	r1, #32
 497 00da 2046     		mov	r0, r4
 498 00dc FFF7FEFF 		bl	HAL_GPIO_WritePin
 499              	.LVL65:
 351:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 500              		.loc 1 351 5 view .LVU95
 501 00e0 0122     		movs	r2, #1
 502 00e2 8021     		movs	r1, #128
 503 00e4 2046     		mov	r0, r4
 504 00e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 505              	.LVL66:
 352:Core/Src/main.c ****   } else if (theta_elec >= 30 && theta_elec < 36) {
 506              		.loc 1 352 58 view .LVU96
 507 00ea BAE7     		b	.L22
 508              	.LVL67:
 509              	.L24:
 354:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 17


 510              		.loc 1 354 5 view .LVU97
 511 00ec 094C     		ldr	r4, .L33+4
 512 00ee 0022     		movs	r2, #0
 513 00f0 0821     		movs	r1, #8
 514 00f2 2046     		mov	r0, r4
 515              	.LVL68:
 354:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 516              		.loc 1 354 5 is_stmt 0 view .LVU98
 517 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 518              	.LVL69:
 355:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 519              		.loc 1 355 5 is_stmt 1 view .LVU99
 520 00f8 0022     		movs	r2, #0
 521 00fa 2021     		movs	r1, #32
 522 00fc 2046     		mov	r0, r4
 523 00fe FFF7FEFF 		bl	HAL_GPIO_WritePin
 524              	.LVL70:
 356:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 525              		.loc 1 356 5 view .LVU100
 526 0102 0122     		movs	r2, #1
 527 0104 8021     		movs	r1, #128
 528 0106 2046     		mov	r0, r4
 529 0108 FFF7FEFF 		bl	HAL_GPIO_WritePin
 530              	.LVL71:
 357:Core/Src/main.c ****   } else {
 531              		.loc 1 357 58 view .LVU101
 359:Core/Src/main.c ****   }
 532              		.loc 1 359 52 view .LVU102
 533              		.loc 1 362 1 is_stmt 0 view .LVU103
 534 010c A9E7     		b	.L22
 535              	.L34:
 536 010e 00BF     		.align	2
 537              	.L33:
 538 0110 398EE338 		.word	954437177
 539 0114 000C0140 		.word	1073810432
 540              		.cfi_endproc
 541              	.LFE73:
 543              		.section	.text.HallPositionOutput_10Pair_Inverted,"ax",%progbits
 544              		.align	1
 545              		.global	HallPositionOutput_10Pair_Inverted
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 550              	HallPositionOutput_10Pair_Inverted:
 551              	.LVL72:
 552              	.LFB74:
 363:Core/Src/main.c **** 
 364:Core/Src/main.c **** /**
 365:Core/Src/main.c ****  * @brief  This function is used to output the Hall position for a 10-pair motor with inverted GPIO
 366:Core/Src/main.c ****  * @param  theta_deg: The angle in degrees.
 367:Core/Src/main.c ****  * @retval None
 368:Core/Src/main.c ****  */
 369:Core/Src/main.c **** void HallPositionOutput_10Pair_Inverted(theta_deg){
 553              		.loc 1 369 51 is_stmt 1 view -0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 18


 557              		.loc 1 369 51 is_stmt 0 view .LVU105
 558 0000 10B5     		push	{r4, lr}
 559              	.LCFI3:
 560              		.cfi_def_cfa_offset 8
 561              		.cfi_offset 4, -8
 562              		.cfi_offset 14, -4
 370:Core/Src/main.c ****   // Normalize the angle to a single electrical cycle (0-36 degrees)
 371:Core/Src/main.c ****   int theta_elec = theta_deg % 36;
 563              		.loc 1 371 3 is_stmt 1 view .LVU106
 564              		.loc 1 371 7 is_stmt 0 view .LVU107
 565 0002 434A     		ldr	r2, .L46
 566 0004 82FB0032 		smull	r3, r2, r2, r0
 567 0008 C317     		asrs	r3, r0, #31
 568 000a C3EBE203 		rsb	r3, r3, r2, asr #3
 569 000e 03EBC303 		add	r3, r3, r3, lsl #3
 570 0012 A0EB8303 		sub	r3, r0, r3, lsl #2
 571              	.LVL73:
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   if (theta_elec >= 0 && theta_elec < 6) {
 572              		.loc 1 373 3 is_stmt 1 view .LVU108
 573 0016 232B     		cmp	r3, #35
 574 0018 23D8     		bhi	.L35
 575 001a DFE803F0 		tbb	[pc, r3]
 576              	.L38:
 577 001e 12       		.byte	(.L43-.L38)/2
 578 001f 12       		.byte	(.L43-.L38)/2
 579 0020 12       		.byte	(.L43-.L38)/2
 580 0021 12       		.byte	(.L43-.L38)/2
 581 0022 12       		.byte	(.L43-.L38)/2
 582 0023 12       		.byte	(.L43-.L38)/2
 583 0024 23       		.byte	(.L42-.L38)/2
 584 0025 23       		.byte	(.L42-.L38)/2
 585 0026 23       		.byte	(.L42-.L38)/2
 586 0027 23       		.byte	(.L42-.L38)/2
 587 0028 23       		.byte	(.L42-.L38)/2
 588 0029 23       		.byte	(.L42-.L38)/2
 589 002a 34       		.byte	(.L41-.L38)/2
 590 002b 34       		.byte	(.L41-.L38)/2
 591 002c 34       		.byte	(.L41-.L38)/2
 592 002d 34       		.byte	(.L41-.L38)/2
 593 002e 34       		.byte	(.L41-.L38)/2
 594 002f 34       		.byte	(.L41-.L38)/2
 595 0030 45       		.byte	(.L40-.L38)/2
 596 0031 45       		.byte	(.L40-.L38)/2
 597 0032 45       		.byte	(.L40-.L38)/2
 598 0033 45       		.byte	(.L40-.L38)/2
 599 0034 45       		.byte	(.L40-.L38)/2
 600 0035 45       		.byte	(.L40-.L38)/2
 601 0036 56       		.byte	(.L39-.L38)/2
 602 0037 56       		.byte	(.L39-.L38)/2
 603 0038 56       		.byte	(.L39-.L38)/2
 604 0039 56       		.byte	(.L39-.L38)/2
 605 003a 56       		.byte	(.L39-.L38)/2
 606 003b 56       		.byte	(.L39-.L38)/2
 607 003c 67       		.byte	(.L37-.L38)/2
 608 003d 67       		.byte	(.L37-.L38)/2
 609 003e 67       		.byte	(.L37-.L38)/2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 19


 610 003f 67       		.byte	(.L37-.L38)/2
 611 0040 67       		.byte	(.L37-.L38)/2
 612 0041 67       		.byte	(.L37-.L38)/2
 613              		.p2align 1
 614              	.L43:
 374:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 615              		.loc 1 374 5 view .LVU109
 616 0042 344C     		ldr	r4, .L46+4
 617 0044 0022     		movs	r2, #0
 618 0046 0821     		movs	r1, #8
 619 0048 2046     		mov	r0, r4
 620              	.LVL74:
 621              		.loc 1 374 5 is_stmt 0 view .LVU110
 622 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 623              	.LVL75:
 375:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 624              		.loc 1 375 5 is_stmt 1 view .LVU111
 625 004e 0122     		movs	r2, #1
 626 0050 2021     		movs	r1, #32
 627 0052 2046     		mov	r0, r4
 628 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 629              	.LVL76:
 376:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 630              		.loc 1 376 5 view .LVU112
 631 0058 0022     		movs	r2, #0
 632 005a 8021     		movs	r1, #128
 633 005c 2046     		mov	r0, r4
 634 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 635              	.LVL77:
 377:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 636              		.loc 1 377 58 view .LVU113
 637              	.L35:
 378:Core/Src/main.c ****   } else if (theta_elec >= 6 && theta_elec < 12) {
 379:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 380:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 381:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 382:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 383:Core/Src/main.c ****   } else if (theta_elec >= 12 && theta_elec < 18) {
 384:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 385:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 386:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 387:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 388:Core/Src/main.c ****   } else if (theta_elec >= 18 && theta_elec < 24) {
 389:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 390:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 391:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 392:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 0, HALL C = 1\r\n");
 393:Core/Src/main.c ****   } else if (theta_elec >= 24 && theta_elec < 30) {
 394:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 395:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 396:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 397:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 398:Core/Src/main.c ****   } else if (theta_elec >= 30 && theta_elec < 36) {
 399:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 400:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 401:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 402:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 20


 403:Core/Src/main.c ****   } else {
 404:Core/Src/main.c ****     DEBUG_PRINT("Invalid angle: %d\r\n", theta_deg);
 405:Core/Src/main.c ****   }
 406:Core/Src/main.c **** }
 638              		.loc 1 406 1 is_stmt 0 view .LVU114
 639 0062 10BD     		pop	{r4, pc}
 640              	.LVL78:
 641              	.L42:
 379:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 642              		.loc 1 379 5 is_stmt 1 view .LVU115
 643 0064 2B4C     		ldr	r4, .L46+4
 644 0066 0022     		movs	r2, #0
 645 0068 0821     		movs	r1, #8
 646 006a 2046     		mov	r0, r4
 647              	.LVL79:
 379:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 648              		.loc 1 379 5 is_stmt 0 view .LVU116
 649 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 650              	.LVL80:
 380:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 651              		.loc 1 380 5 is_stmt 1 view .LVU117
 652 0070 0122     		movs	r2, #1
 653 0072 2021     		movs	r1, #32
 654 0074 2046     		mov	r0, r4
 655 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 656              	.LVL81:
 381:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 657              		.loc 1 381 5 view .LVU118
 658 007a 0122     		movs	r2, #1
 659 007c 8021     		movs	r1, #128
 660 007e 2046     		mov	r0, r4
 661 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 662              	.LVL82:
 382:Core/Src/main.c ****   } else if (theta_elec >= 12 && theta_elec < 18) {
 663              		.loc 1 382 58 view .LVU119
 664 0084 EDE7     		b	.L35
 665              	.LVL83:
 666              	.L41:
 384:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 667              		.loc 1 384 5 view .LVU120
 668 0086 234C     		ldr	r4, .L46+4
 669 0088 0022     		movs	r2, #0
 670 008a 0821     		movs	r1, #8
 671 008c 2046     		mov	r0, r4
 672              	.LVL84:
 384:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 673              		.loc 1 384 5 is_stmt 0 view .LVU121
 674 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 675              	.LVL85:
 385:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 676              		.loc 1 385 5 is_stmt 1 view .LVU122
 677 0092 0022     		movs	r2, #0
 678 0094 2021     		movs	r1, #32
 679 0096 2046     		mov	r0, r4
 680 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 681              	.LVL86:
 386:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 21


 682              		.loc 1 386 5 view .LVU123
 683 009c 0122     		movs	r2, #1
 684 009e 8021     		movs	r1, #128
 685 00a0 2046     		mov	r0, r4
 686 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 687              	.LVL87:
 387:Core/Src/main.c ****   } else if (theta_elec >= 18 && theta_elec < 24) {
 688              		.loc 1 387 58 view .LVU124
 689 00a6 DCE7     		b	.L35
 690              	.LVL88:
 691              	.L40:
 389:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 692              		.loc 1 389 5 view .LVU125
 693 00a8 1A4C     		ldr	r4, .L46+4
 694 00aa 0122     		movs	r2, #1
 695 00ac 0821     		movs	r1, #8
 696 00ae 2046     		mov	r0, r4
 697              	.LVL89:
 389:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 698              		.loc 1 389 5 is_stmt 0 view .LVU126
 699 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 700              	.LVL90:
 390:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 701              		.loc 1 390 5 is_stmt 1 view .LVU127
 702 00b4 0022     		movs	r2, #0
 703 00b6 2021     		movs	r1, #32
 704 00b8 2046     		mov	r0, r4
 705 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 706              	.LVL91:
 391:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 0, HALL C = 1\r\n");
 707              		.loc 1 391 5 view .LVU128
 708 00be 0122     		movs	r2, #1
 709 00c0 8021     		movs	r1, #128
 710 00c2 2046     		mov	r0, r4
 711 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 712              	.LVL92:
 392:Core/Src/main.c ****   } else if (theta_elec >= 24 && theta_elec < 30) {
 713              		.loc 1 392 58 view .LVU129
 714 00c8 CBE7     		b	.L35
 715              	.LVL93:
 716              	.L39:
 394:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 717              		.loc 1 394 5 view .LVU130
 718 00ca 124C     		ldr	r4, .L46+4
 719 00cc 0122     		movs	r2, #1
 720 00ce 0821     		movs	r1, #8
 721 00d0 2046     		mov	r0, r4
 722              	.LVL94:
 394:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 723              		.loc 1 394 5 is_stmt 0 view .LVU131
 724 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 725              	.LVL95:
 395:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 726              		.loc 1 395 5 is_stmt 1 view .LVU132
 727 00d6 0022     		movs	r2, #0
 728 00d8 2021     		movs	r1, #32
 729 00da 2046     		mov	r0, r4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 22


 730 00dc FFF7FEFF 		bl	HAL_GPIO_WritePin
 731              	.LVL96:
 396:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 732              		.loc 1 396 5 view .LVU133
 733 00e0 0022     		movs	r2, #0
 734 00e2 8021     		movs	r1, #128
 735 00e4 2046     		mov	r0, r4
 736 00e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 737              	.LVL97:
 397:Core/Src/main.c ****   } else if (theta_elec >= 30 && theta_elec < 36) {
 738              		.loc 1 397 58 view .LVU134
 739 00ea BAE7     		b	.L35
 740              	.LVL98:
 741              	.L37:
 399:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 742              		.loc 1 399 5 view .LVU135
 743 00ec 094C     		ldr	r4, .L46+4
 744 00ee 0122     		movs	r2, #1
 745 00f0 0821     		movs	r1, #8
 746 00f2 2046     		mov	r0, r4
 747              	.LVL99:
 399:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 748              		.loc 1 399 5 is_stmt 0 view .LVU136
 749 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 750              	.LVL100:
 400:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 751              		.loc 1 400 5 is_stmt 1 view .LVU137
 752 00f8 0122     		movs	r2, #1
 753 00fa 2021     		movs	r1, #32
 754 00fc 2046     		mov	r0, r4
 755 00fe FFF7FEFF 		bl	HAL_GPIO_WritePin
 756              	.LVL101:
 401:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 757              		.loc 1 401 5 view .LVU138
 758 0102 0022     		movs	r2, #0
 759 0104 8021     		movs	r1, #128
 760 0106 2046     		mov	r0, r4
 761 0108 FFF7FEFF 		bl	HAL_GPIO_WritePin
 762              	.LVL102:
 402:Core/Src/main.c ****   } else {
 763              		.loc 1 402 58 view .LVU139
 404:Core/Src/main.c ****   }
 764              		.loc 1 404 52 view .LVU140
 765              		.loc 1 406 1 is_stmt 0 view .LVU141
 766 010c A9E7     		b	.L35
 767              	.L47:
 768 010e 00BF     		.align	2
 769              	.L46:
 770 0110 398EE338 		.word	954437177
 771 0114 000C0140 		.word	1073810432
 772              		.cfi_endproc
 773              	.LFE74:
 775              		.section	.text.HallPositionOutput_20Pair,"ax",%progbits
 776              		.align	1
 777              		.global	HallPositionOutput_20Pair
 778              		.syntax unified
 779              		.thumb
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 23


 780              		.thumb_func
 782              	HallPositionOutput_20Pair:
 783              	.LVL103:
 784              	.LFB75:
 407:Core/Src/main.c **** 
 408:Core/Src/main.c **** /**
 409:Core/Src/main.c ****  * @brief  This function is used to output the Hall position for a 20-pair motor. 
 410:Core/Src/main.c ****  * @param  theta_deg: The angle in degrees.
 411:Core/Src/main.c ****  * @retval None
 412:Core/Src/main.c ****  * @author Alex
 413:Core/Src/main.c ****  */
 414:Core/Src/main.c **** void HallPositionOutput_20Pair(theta_deg){
 785              		.loc 1 414 42 is_stmt 1 view -0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789              		.loc 1 414 42 is_stmt 0 view .LVU143
 790 0000 10B5     		push	{r4, lr}
 791              	.LCFI4:
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 4, -8
 794              		.cfi_offset 14, -4
 415:Core/Src/main.c ****   // Normalize the angle to a single electrical cycle (0-18 degrees)
 416:Core/Src/main.c ****   int theta_elec = theta_deg % 18;
 795              		.loc 1 416 3 is_stmt 1 view .LVU144
 796              		.loc 1 416 7 is_stmt 0 view .LVU145
 797 0002 3E4A     		ldr	r2, .L59
 798 0004 82FB0032 		smull	r3, r2, r2, r0
 799 0008 C317     		asrs	r3, r0, #31
 800 000a C3EBA203 		rsb	r3, r3, r2, asr #2
 801 000e 03EBC303 		add	r3, r3, r3, lsl #3
 802 0012 A0EB4303 		sub	r3, r0, r3, lsl #1
 803              	.LVL104:
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   if (theta_elec >= 0 && theta_elec < 3) {
 804              		.loc 1 418 3 is_stmt 1 view .LVU146
 805 0016 112B     		cmp	r3, #17
 806 0018 1AD8     		bhi	.L48
 807 001a DFE803F0 		tbb	[pc, r3]
 808              	.L51:
 809 001e 09       		.byte	(.L56-.L51)/2
 810 001f 09       		.byte	(.L56-.L51)/2
 811 0020 09       		.byte	(.L56-.L51)/2
 812 0021 1A       		.byte	(.L55-.L51)/2
 813 0022 1A       		.byte	(.L55-.L51)/2
 814 0023 1A       		.byte	(.L55-.L51)/2
 815 0024 2B       		.byte	(.L54-.L51)/2
 816 0025 2B       		.byte	(.L54-.L51)/2
 817 0026 2B       		.byte	(.L54-.L51)/2
 818 0027 3C       		.byte	(.L53-.L51)/2
 819 0028 3C       		.byte	(.L53-.L51)/2
 820 0029 3C       		.byte	(.L53-.L51)/2
 821 002a 4D       		.byte	(.L52-.L51)/2
 822 002b 4D       		.byte	(.L52-.L51)/2
 823 002c 4D       		.byte	(.L52-.L51)/2
 824 002d 5E       		.byte	(.L50-.L51)/2
 825 002e 5E       		.byte	(.L50-.L51)/2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 24


 826 002f 5E       		.byte	(.L50-.L51)/2
 827              		.p2align 1
 828              	.L56:
 419:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 829              		.loc 1 419 5 view .LVU147
 830 0030 334C     		ldr	r4, .L59+4
 831 0032 0122     		movs	r2, #1
 832 0034 0821     		movs	r1, #8
 833 0036 2046     		mov	r0, r4
 834              	.LVL105:
 835              		.loc 1 419 5 is_stmt 0 view .LVU148
 836 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 837              	.LVL106:
 420:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 838              		.loc 1 420 5 is_stmt 1 view .LVU149
 839 003c 0022     		movs	r2, #0
 840 003e 2021     		movs	r1, #32
 841 0040 2046     		mov	r0, r4
 842 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
 843              	.LVL107:
 421:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 844              		.loc 1 421 5 view .LVU150
 845 0046 0122     		movs	r2, #1
 846 0048 8021     		movs	r1, #128
 847 004a 2046     		mov	r0, r4
 848 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 849              	.LVL108:
 422:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 0, HALL C = 1\r\n");
 850              		.loc 1 422 58 view .LVU151
 851              	.L48:
 423:Core/Src/main.c ****   } else if (theta_elec >= 3 && theta_elec < 6) {
 424:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 425:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 426:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 427:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 428:Core/Src/main.c ****   } else if (theta_elec >= 6 && theta_elec < 9) {
 429:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 430:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 431:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 432:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 433:Core/Src/main.c ****   } else if (theta_elec >= 9 && theta_elec < 12) {
 434:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 435:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 436:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 437:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 438:Core/Src/main.c ****   } else if (theta_elec >= 12 && theta_elec < 15) {
 439:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 440:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 441:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 442:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 443:Core/Src/main.c ****   } else if (theta_elec >= 15 && theta_elec < 18) {
 444:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 445:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 446:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 447:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 448:Core/Src/main.c ****   } else {
 449:Core/Src/main.c ****     DEBUG_PRINT("Invalid angle: %d\r\n", theta_deg);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 25


 450:Core/Src/main.c ****   }
 451:Core/Src/main.c **** 
 452:Core/Src/main.c **** }
 852              		.loc 1 452 1 is_stmt 0 view .LVU152
 853 0050 10BD     		pop	{r4, pc}
 854              	.LVL109:
 855              	.L55:
 424:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 856              		.loc 1 424 5 is_stmt 1 view .LVU153
 857 0052 2B4C     		ldr	r4, .L59+4
 858 0054 0122     		movs	r2, #1
 859 0056 0821     		movs	r1, #8
 860 0058 2046     		mov	r0, r4
 861              	.LVL110:
 424:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 862              		.loc 1 424 5 is_stmt 0 view .LVU154
 863 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 864              	.LVL111:
 425:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 865              		.loc 1 425 5 is_stmt 1 view .LVU155
 866 005e 0022     		movs	r2, #0
 867 0060 2021     		movs	r1, #32
 868 0062 2046     		mov	r0, r4
 869 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 870              	.LVL112:
 426:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 871              		.loc 1 426 5 view .LVU156
 872 0068 0022     		movs	r2, #0
 873 006a 8021     		movs	r1, #128
 874 006c 2046     		mov	r0, r4
 875 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 876              	.LVL113:
 427:Core/Src/main.c ****   } else if (theta_elec >= 6 && theta_elec < 9) {
 877              		.loc 1 427 58 view .LVU157
 878 0072 EDE7     		b	.L48
 879              	.LVL114:
 880              	.L54:
 429:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 881              		.loc 1 429 5 view .LVU158
 882 0074 224C     		ldr	r4, .L59+4
 883 0076 0122     		movs	r2, #1
 884 0078 0821     		movs	r1, #8
 885 007a 2046     		mov	r0, r4
 886              	.LVL115:
 429:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 887              		.loc 1 429 5 is_stmt 0 view .LVU159
 888 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 889              	.LVL116:
 430:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 890              		.loc 1 430 5 is_stmt 1 view .LVU160
 891 0080 0122     		movs	r2, #1
 892 0082 2021     		movs	r1, #32
 893 0084 2046     		mov	r0, r4
 894 0086 FFF7FEFF 		bl	HAL_GPIO_WritePin
 895              	.LVL117:
 431:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 896              		.loc 1 431 5 view .LVU161
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 26


 897 008a 0022     		movs	r2, #0
 898 008c 8021     		movs	r1, #128
 899 008e 2046     		mov	r0, r4
 900 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 901              	.LVL118:
 432:Core/Src/main.c ****   } else if (theta_elec >= 9 && theta_elec < 12) {
 902              		.loc 1 432 58 view .LVU162
 903 0094 DCE7     		b	.L48
 904              	.LVL119:
 905              	.L53:
 434:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 906              		.loc 1 434 5 view .LVU163
 907 0096 1A4C     		ldr	r4, .L59+4
 908 0098 0022     		movs	r2, #0
 909 009a 0821     		movs	r1, #8
 910 009c 2046     		mov	r0, r4
 911              	.LVL120:
 434:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 912              		.loc 1 434 5 is_stmt 0 view .LVU164
 913 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 914              	.LVL121:
 435:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 915              		.loc 1 435 5 is_stmt 1 view .LVU165
 916 00a2 0122     		movs	r2, #1
 917 00a4 2021     		movs	r1, #32
 918 00a6 2046     		mov	r0, r4
 919 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 920              	.LVL122:
 436:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 921              		.loc 1 436 5 view .LVU166
 922 00ac 0022     		movs	r2, #0
 923 00ae 8021     		movs	r1, #128
 924 00b0 2046     		mov	r0, r4
 925 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 926              	.LVL123:
 437:Core/Src/main.c ****   } else if (theta_elec >= 12 && theta_elec < 15) {
 927              		.loc 1 437 58 view .LVU167
 928 00b6 CBE7     		b	.L48
 929              	.LVL124:
 930              	.L52:
 439:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 931              		.loc 1 439 5 view .LVU168
 932 00b8 114C     		ldr	r4, .L59+4
 933 00ba 0022     		movs	r2, #0
 934 00bc 0821     		movs	r1, #8
 935 00be 2046     		mov	r0, r4
 936              	.LVL125:
 439:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 937              		.loc 1 439 5 is_stmt 0 view .LVU169
 938 00c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 939              	.LVL126:
 440:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 940              		.loc 1 440 5 is_stmt 1 view .LVU170
 941 00c4 0122     		movs	r2, #1
 942 00c6 2021     		movs	r1, #32
 943 00c8 2046     		mov	r0, r4
 944 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 27


 945              	.LVL127:
 441:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 946              		.loc 1 441 5 view .LVU171
 947 00ce 0122     		movs	r2, #1
 948 00d0 8021     		movs	r1, #128
 949 00d2 2046     		mov	r0, r4
 950 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 951              	.LVL128:
 442:Core/Src/main.c ****   } else if (theta_elec >= 15 && theta_elec < 18) {
 952              		.loc 1 442 58 view .LVU172
 953 00d8 BAE7     		b	.L48
 954              	.LVL129:
 955              	.L50:
 444:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 956              		.loc 1 444 5 view .LVU173
 957 00da 094C     		ldr	r4, .L59+4
 958 00dc 0022     		movs	r2, #0
 959 00de 0821     		movs	r1, #8
 960 00e0 2046     		mov	r0, r4
 961              	.LVL130:
 444:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 962              		.loc 1 444 5 is_stmt 0 view .LVU174
 963 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 964              	.LVL131:
 445:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 965              		.loc 1 445 5 is_stmt 1 view .LVU175
 966 00e6 0022     		movs	r2, #0
 967 00e8 2021     		movs	r1, #32
 968 00ea 2046     		mov	r0, r4
 969 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 970              	.LVL132:
 446:Core/Src/main.c ****     DEBUG_PRINT("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 971              		.loc 1 446 5 view .LVU176
 972 00f0 0122     		movs	r2, #1
 973 00f2 8021     		movs	r1, #128
 974 00f4 2046     		mov	r0, r4
 975 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 976              	.LVL133:
 447:Core/Src/main.c ****   } else {
 977              		.loc 1 447 58 view .LVU177
 449:Core/Src/main.c ****   }
 978              		.loc 1 449 52 view .LVU178
 979              		.loc 1 452 1 is_stmt 0 view .LVU179
 980 00fa A9E7     		b	.L48
 981              	.L60:
 982              		.align	2
 983              	.L59:
 984 00fc 398EE338 		.word	954437177
 985 0100 000C0140 		.word	1073810432
 986              		.cfi_endproc
 987              	.LFE75:
 989              		.section	.text.__io_putchar,"ax",%progbits
 990              		.align	1
 991              		.global	__io_putchar
 992              		.syntax unified
 993              		.thumb
 994              		.thumb_func
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 28


 996              	__io_putchar:
 997              	.LVL134:
 998              	.LFB76:
 453:Core/Src/main.c **** 
 454:Core/Src/main.c **** /**
 455:Core/Src/main.c ****  * @brief  Retargets the C library printf function to the USART.
 456:Core/Src/main.c ****  * @retval None
 457:Core/Src/main.c ****  */
 458:Core/Src/main.c **** PUTCHAR_PROTOTYPE {
 999              		.loc 1 458 19 is_stmt 1 view -0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 8
 1002              		@ frame_needed = 0, uses_anonymous_args = 0
 1003              		.loc 1 458 19 is_stmt 0 view .LVU181
 1004 0000 00B5     		push	{lr}
 1005              	.LCFI5:
 1006              		.cfi_def_cfa_offset 4
 1007              		.cfi_offset 14, -4
 1008 0002 83B0     		sub	sp, sp, #12
 1009              	.LCFI6:
 1010              		.cfi_def_cfa_offset 16
 1011 0004 0190     		str	r0, [sp, #4]
 459:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xFFFF);
 1012              		.loc 1 459 3 is_stmt 1 view .LVU182
 1013 0006 4FF6FF73 		movw	r3, #65535
 1014 000a 0122     		movs	r2, #1
 1015 000c 01A9     		add	r1, sp, #4
 1016 000e 0348     		ldr	r0, .L63
 1017              	.LVL135:
 1018              		.loc 1 459 3 is_stmt 0 view .LVU183
 1019 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 1020              	.LVL136:
 460:Core/Src/main.c ****   return ch;
 1021              		.loc 1 460 3 is_stmt 1 view .LVU184
 461:Core/Src/main.c **** }
 1022              		.loc 1 461 1 is_stmt 0 view .LVU185
 1023 0014 0198     		ldr	r0, [sp, #4]
 1024 0016 03B0     		add	sp, sp, #12
 1025              	.LCFI7:
 1026              		.cfi_def_cfa_offset 4
 1027              		@ sp needed
 1028 0018 5DF804FB 		ldr	pc, [sp], #4
 1029              	.L64:
 1030              		.align	2
 1031              	.L63:
 1032 001c 00000000 		.word	huart1
 1033              		.cfi_endproc
 1034              	.LFE76:
 1036              		.section	.rodata.Error_Handler.str1.4,"aMS",%progbits,1
 1037              		.align	2
 1038              	.LC0:
 1039 0000 4572726F 		.ascii	"Error\015\000"
 1039      720D00
 1040              		.section	.text.Error_Handler,"ax",%progbits
 1041              		.align	1
 1042              		.global	Error_Handler
 1043              		.syntax unified
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 29


 1044              		.thumb
 1045              		.thumb_func
 1047              	Error_Handler:
 1048              	.LFB77:
 462:Core/Src/main.c **** /* USER CODE END 4 */
 463:Core/Src/main.c **** 
 464:Core/Src/main.c **** /**
 465:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 466:Core/Src/main.c ****   * @retval None
 467:Core/Src/main.c ****   */
 468:Core/Src/main.c **** void Error_Handler(void)
 469:Core/Src/main.c **** {
 1049              		.loc 1 469 1 is_stmt 1 view -0
 1050              		.cfi_startproc
 1051              		@ Volatile: function does not return.
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 1054 0000 08B5     		push	{r3, lr}
 1055              	.LCFI8:
 1056              		.cfi_def_cfa_offset 8
 1057              		.cfi_offset 3, -8
 1058              		.cfi_offset 14, -4
 470:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 471:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 472:Core/Src/main.c ****   __disable_irq();
 1059              		.loc 1 472 3 view .LVU187
 1060              	.LBB4:
 1061              	.LBI4:
 1062              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 30


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 31


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1063              		.loc 2 140 27 view .LVU188
 1064              	.LBB5:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 32


 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1065              		.loc 2 142 3 view .LVU189
 1066              		.syntax unified
 1067              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1068 0002 72B6     		cpsid i
 1069              	@ 0 "" 2
 1070              		.thumb
 1071              		.syntax unified
 1072              	.L66:
 1073              	.LBE5:
 1074              	.LBE4:
 473:Core/Src/main.c ****   while (1) {
 1075              		.loc 1 473 3 view .LVU190
 474:Core/Src/main.c ****     printf("Error\r\n");
 1076              		.loc 1 474 5 view .LVU191
 1077 0004 0348     		ldr	r0, .L68
 1078 0006 FFF7FEFF 		bl	puts
 1079              	.LVL137:
 475:Core/Src/main.c ****     HAL_Delay(100);
 1080              		.loc 1 475 5 discriminator 1 view .LVU192
 1081 000a 6420     		movs	r0, #100
 1082 000c FFF7FEFF 		bl	HAL_Delay
 1083              	.LVL138:
 473:Core/Src/main.c ****   while (1) {
 1084              		.loc 1 473 9 view .LVU193
 1085 0010 F8E7     		b	.L66
 1086              	.L69:
 1087 0012 00BF     		.align	2
 1088              	.L68:
 1089 0014 00000000 		.word	.LC0
 1090              		.cfi_endproc
 1091              	.LFE77:
 1093              		.section	.text.SystemClock_Config,"ax",%progbits
 1094              		.align	1
 1095              		.global	SystemClock_Config
 1096              		.syntax unified
 1097              		.thumb
 1098              		.thumb_func
 1100              	SystemClock_Config:
 1101              	.LFB69:
 190:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1102              		.loc 1 190 1 view -0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 80
 1105              		@ frame_needed = 0, uses_anonymous_args = 0
 1106 0000 00B5     		push	{lr}
 1107              	.LCFI9:
 1108              		.cfi_def_cfa_offset 4
 1109              		.cfi_offset 14, -4
 1110 0002 95B0     		sub	sp, sp, #84
 1111              	.LCFI10:
 1112              		.cfi_def_cfa_offset 88
 191:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1113              		.loc 1 191 3 view .LVU195
 191:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1114              		.loc 1 191 22 is_stmt 0 view .LVU196
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 33


 1115 0004 2822     		movs	r2, #40
 1116 0006 0021     		movs	r1, #0
 1117 0008 0DEB0200 		add	r0, sp, r2
 1118 000c FFF7FEFF 		bl	memset
 1119              	.LVL139:
 192:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1120              		.loc 1 192 3 is_stmt 1 view .LVU197
 192:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1121              		.loc 1 192 22 is_stmt 0 view .LVU198
 1122 0010 0023     		movs	r3, #0
 1123 0012 0593     		str	r3, [sp, #20]
 1124 0014 0693     		str	r3, [sp, #24]
 1125 0016 0793     		str	r3, [sp, #28]
 1126 0018 0893     		str	r3, [sp, #32]
 1127 001a 0993     		str	r3, [sp, #36]
 193:Core/Src/main.c **** 
 1128              		.loc 1 193 3 is_stmt 1 view .LVU199
 193:Core/Src/main.c **** 
 1129              		.loc 1 193 28 is_stmt 0 view .LVU200
 1130 001c 0193     		str	r3, [sp, #4]
 1131 001e 0293     		str	r3, [sp, #8]
 1132 0020 0393     		str	r3, [sp, #12]
 1133 0022 0493     		str	r3, [sp, #16]
 198:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1134              		.loc 1 198 3 is_stmt 1 view .LVU201
 198:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1135              		.loc 1 198 36 is_stmt 0 view .LVU202
 1136 0024 0223     		movs	r3, #2
 1137 0026 0A93     		str	r3, [sp, #40]
 199:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1138              		.loc 1 199 3 is_stmt 1 view .LVU203
 199:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1139              		.loc 1 199 30 is_stmt 0 view .LVU204
 1140 0028 0122     		movs	r2, #1
 1141 002a 0E92     		str	r2, [sp, #56]
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1142              		.loc 1 200 3 is_stmt 1 view .LVU205
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1143              		.loc 1 200 41 is_stmt 0 view .LVU206
 1144 002c 1022     		movs	r2, #16
 1145 002e 0F92     		str	r2, [sp, #60]
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 1146              		.loc 1 201 3 is_stmt 1 view .LVU207
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 1147              		.loc 1 201 34 is_stmt 0 view .LVU208
 1148 0030 1193     		str	r3, [sp, #68]
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 1149              		.loc 1 202 3 is_stmt 1 view .LVU209
 203:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1150              		.loc 1 203 3 view .LVU210
 203:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1151              		.loc 1 203 32 is_stmt 0 view .LVU211
 1152 0032 4FF46013 		mov	r3, #3670016
 1153 0036 1393     		str	r3, [sp, #76]
 204:Core/Src/main.c ****   {
 1154              		.loc 1 204 3 is_stmt 1 view .LVU212
 204:Core/Src/main.c ****   {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 34


 1155              		.loc 1 204 7 is_stmt 0 view .LVU213
 1156 0038 0AA8     		add	r0, sp, #40
 1157 003a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1158              	.LVL140:
 204:Core/Src/main.c ****   {
 1159              		.loc 1 204 6 discriminator 1 view .LVU214
 1160 003e C8B9     		cbnz	r0, .L75
 211:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1161              		.loc 1 211 3 is_stmt 1 view .LVU215
 211:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1162              		.loc 1 211 31 is_stmt 0 view .LVU216
 1163 0040 0F23     		movs	r3, #15
 1164 0042 0593     		str	r3, [sp, #20]
 213:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1165              		.loc 1 213 3 is_stmt 1 view .LVU217
 213:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1166              		.loc 1 213 34 is_stmt 0 view .LVU218
 1167 0044 0221     		movs	r1, #2
 1168 0046 0691     		str	r1, [sp, #24]
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1169              		.loc 1 214 3 is_stmt 1 view .LVU219
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1170              		.loc 1 214 35 is_stmt 0 view .LVU220
 1171 0048 0023     		movs	r3, #0
 1172 004a 0793     		str	r3, [sp, #28]
 215:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1173              		.loc 1 215 3 is_stmt 1 view .LVU221
 215:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1174              		.loc 1 215 36 is_stmt 0 view .LVU222
 1175 004c 4FF48062 		mov	r2, #1024
 1176 0050 0892     		str	r2, [sp, #32]
 216:Core/Src/main.c **** 
 1177              		.loc 1 216 3 is_stmt 1 view .LVU223
 216:Core/Src/main.c **** 
 1178              		.loc 1 216 36 is_stmt 0 view .LVU224
 1179 0052 0993     		str	r3, [sp, #36]
 218:Core/Src/main.c ****   {
 1180              		.loc 1 218 3 is_stmt 1 view .LVU225
 218:Core/Src/main.c ****   {
 1181              		.loc 1 218 7 is_stmt 0 view .LVU226
 1182 0054 05A8     		add	r0, sp, #20
 1183 0056 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1184              	.LVL141:
 218:Core/Src/main.c ****   {
 1185              		.loc 1 218 6 discriminator 1 view .LVU227
 1186 005a 68B9     		cbnz	r0, .L76
 222:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 1187              		.loc 1 222 3 is_stmt 1 view .LVU228
 222:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 1188              		.loc 1 222 38 is_stmt 0 view .LVU229
 1189 005c 0223     		movs	r3, #2
 1190 005e 0193     		str	r3, [sp, #4]
 223:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1191              		.loc 1 223 3 is_stmt 1 view .LVU230
 223:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1192              		.loc 1 223 35 is_stmt 0 view .LVU231
 1193 0060 4FF40043 		mov	r3, #32768
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 35


 1194 0064 0393     		str	r3, [sp, #12]
 224:Core/Src/main.c ****   {
 1195              		.loc 1 224 3 is_stmt 1 view .LVU232
 224:Core/Src/main.c ****   {
 1196              		.loc 1 224 7 is_stmt 0 view .LVU233
 1197 0066 01A8     		add	r0, sp, #4
 1198 0068 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1199              	.LVL142:
 224:Core/Src/main.c ****   {
 1200              		.loc 1 224 6 discriminator 1 view .LVU234
 1201 006c 30B9     		cbnz	r0, .L77
 228:Core/Src/main.c **** 
 1202              		.loc 1 228 1 view .LVU235
 1203 006e 15B0     		add	sp, sp, #84
 1204              	.LCFI11:
 1205              		.cfi_remember_state
 1206              		.cfi_def_cfa_offset 4
 1207              		@ sp needed
 1208 0070 5DF804FB 		ldr	pc, [sp], #4
 1209              	.L75:
 1210              	.LCFI12:
 1211              		.cfi_restore_state
 206:Core/Src/main.c ****   }
 1212              		.loc 1 206 5 is_stmt 1 view .LVU236
 1213 0074 FFF7FEFF 		bl	Error_Handler
 1214              	.LVL143:
 1215              	.L76:
 220:Core/Src/main.c ****   }
 1216              		.loc 1 220 5 view .LVU237
 1217 0078 FFF7FEFF 		bl	Error_Handler
 1218              	.LVL144:
 1219              	.L77:
 226:Core/Src/main.c ****   }
 1220              		.loc 1 226 5 view .LVU238
 1221 007c FFF7FEFF 		bl	Error_Handler
 1222              	.LVL145:
 1223              		.cfi_endproc
 1224              	.LFE69:
 1226              		.global	__aeabi_fsub
 1227              		.global	__aeabi_fcmpeq
 1228              		.section	.text.main,"ax",%progbits
 1229              		.align	1
 1230              		.global	main
 1231              		.syntax unified
 1232              		.thumb
 1233              		.thumb_func
 1235              	main:
 1236              	.LFB68:
  95:Core/Src/main.c **** 
 1237              		.loc 1 95 1 view -0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 0
 1240              		@ frame_needed = 0, uses_anonymous_args = 0
 1241 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1242              	.LCFI13:
 1243              		.cfi_def_cfa_offset 24
 1244              		.cfi_offset 3, -24
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 36


 1245              		.cfi_offset 4, -20
 1246              		.cfi_offset 5, -16
 1247              		.cfi_offset 6, -12
 1248              		.cfi_offset 7, -8
 1249              		.cfi_offset 14, -4
  99:Core/Src/main.c ****   uint16_t cos_adc = 0;
 1250              		.loc 1 99 3 view .LVU240
 1251              	.LVL146:
 100:Core/Src/main.c ****   float theta_rad;
 1252              		.loc 1 100 3 view .LVU241
 101:Core/Src/main.c ****   int theta_deg; // only for debugging
 1253              		.loc 1 101 3 view .LVU242
 102:Core/Src/main.c ****   int historical_value = 0; // Initialize historical value for decay and merge
 1254              		.loc 1 102 3 view .LVU243
 103:Core/Src/main.c ****   int merged_value = 0; // Initialize merged value
 1255              		.loc 1 103 3 view .LVU244
 104:Core/Src/main.c **** 
 1256              		.loc 1 104 3 view .LVU245
 106:Core/Src/main.c ****   int cos; 
 1257              		.loc 1 106 3 view .LVU246
 107:Core/Src/main.c ****   int rad; 
 1258              		.loc 1 107 3 view .LVU247
 108:Core/Src/main.c ****   int deg;
 1259              		.loc 1 108 3 view .LVU248
 109:Core/Src/main.c ****   /* USER CODE END 1 */
 1260              		.loc 1 109 3 view .LVU249
 115:Core/Src/main.c **** 
 1261              		.loc 1 115 3 view .LVU250
 1262 0002 FFF7FEFF 		bl	HAL_Init
 1263              	.LVL147:
 122:Core/Src/main.c **** 
 1264              		.loc 1 122 3 view .LVU251
 1265 0006 FFF7FEFF 		bl	SystemClock_Config
 1266              	.LVL148:
 129:Core/Src/main.c ****   MX_ADC1_Init();
 1267              		.loc 1 129 3 view .LVU252
 1268 000a FFF7FEFF 		bl	MX_GPIO_Init
 1269              	.LVL149:
 130:Core/Src/main.c ****   MX_ADC2_Init();
 1270              		.loc 1 130 3 view .LVU253
 1271 000e FFF7FEFF 		bl	MX_ADC1_Init
 1272              	.LVL150:
 131:Core/Src/main.c ****   MX_USART1_UART_Init();
 1273              		.loc 1 131 3 view .LVU254
 1274 0012 FFF7FEFF 		bl	MX_ADC2_Init
 1275              	.LVL151:
 132:Core/Src/main.c ****   MX_TIM2_Init();
 1276              		.loc 1 132 3 view .LVU255
 1277 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 1278              	.LVL152:
 133:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1279              		.loc 1 133 3 view .LVU256
 1280 001a FFF7FEFF 		bl	MX_TIM2_Init
 1281              	.LVL153:
 137:Core/Src/main.c ****   HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 1282              		.loc 1 137 3 view .LVU257
 1283 001e 304C     		ldr	r4, .L87+8
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 37


 1284 0020 0122     		movs	r2, #1
 1285 0022 0821     		movs	r1, #8
 1286 0024 2046     		mov	r0, r4
 1287 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1288              	.LVL154:
 138:Core/Src/main.c ****   HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 1289              		.loc 1 138 3 view .LVU258
 1290 002a 0022     		movs	r2, #0
 1291 002c 2021     		movs	r1, #32
 1292 002e 2046     		mov	r0, r4
 1293 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1294              	.LVL155:
 139:Core/Src/main.c **** 
 1295              		.loc 1 139 3 view .LVU259
 1296 0034 0022     		movs	r2, #0
 1297 0036 8021     		movs	r1, #128
 1298 0038 2046     		mov	r0, r4
 1299 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1300              	.LVL156:
 100:Core/Src/main.c ****   float theta_rad;
 1301              		.loc 1 100 12 is_stmt 0 view .LVU260
 1302 003e 0024     		movs	r4, #0
  99:Core/Src/main.c ****   uint16_t cos_adc = 0;
 1303              		.loc 1 99 12 view .LVU261
 1304 0040 2546     		mov	r5, r4
 1305 0042 0FE0     		b	.L81
 1306              	.LVL157:
 1307              	.L86:
 1308              	.LBB6:
 161:Core/Src/main.c ****     }
 1309              		.loc 1 161 7 is_stmt 1 view .LVU262
 161:Core/Src/main.c ****     }
 1310              		.loc 1 161 19 is_stmt 0 view .LVU263
 1311 0044 3146     		mov	r1, r6
 1312 0046 3846     		mov	r0, r7
 1313 0048 FFF7FEFF 		bl	atan2f
 1314              	.LVL158:
 1315              	.L79:
 169:Core/Src/main.c **** 
 1316              		.loc 1 169 5 is_stmt 1 view .LVU264
 169:Core/Src/main.c **** 
 1317              		.loc 1 169 36 is_stmt 0 view .LVU265
 1318 004c FFF7FEFF 		bl	__aeabi_f2d
 1319              	.LVL159:
 1320 0050 21A3     		adr	r3, .L87
 1321 0052 D3E90023 		ldrd	r2, [r3]
 1322 0056 FFF7FEFF 		bl	__aeabi_dmul
 1323              	.LVL160:
 169:Core/Src/main.c **** 
 1324              		.loc 1 169 17 view .LVU266
 1325 005a FFF7FEFF 		bl	__aeabi_d2iz
 1326              	.LVL161:
 174:Core/Src/main.c ****     DEBUG_PRINT("ADC_C: %d ADC_S: %d theta_deg: %d rad: %d (millirad)\r\n", cos_adc, sin_adc, theta
 1327              		.loc 1 174 5 is_stmt 1 view .LVU267
 175:Core/Src/main.c **** 
 1328              		.loc 1 175 110 view .LVU268
 177:Core/Src/main.c ****     DEBUG_DELAY(10); 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 38


 1329              		.loc 1 177 5 view .LVU269
 1330 005e B430     		adds	r0, r0, #180
 1331              	.LVL162:
 177:Core/Src/main.c ****     DEBUG_DELAY(10); 
 1332              		.loc 1 177 5 is_stmt 0 view .LVU270
 1333 0060 FFF7FEFF 		bl	HallPositionOutput_10Pair_Inverted
 1334              	.LVL163:
 178:Core/Src/main.c ****     
 1335              		.loc 1 178 20 is_stmt 1 view .LVU271
 1336              	.LBE6:
 145:Core/Src/main.c ****     HAL_ADC_Start(&hadc1); // Needs to be called every time
 1337              		.loc 1 145 9 view .LVU272
 1338              	.L81:
 145:Core/Src/main.c ****     HAL_ADC_Start(&hadc1); // Needs to be called every time
 1339              		.loc 1 145 3 view .LVU273
 1340              	.LBB7:
 146:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 1341              		.loc 1 146 5 view .LVU274
 1342 0064 1F4E     		ldr	r6, .L87+12
 1343 0066 3046     		mov	r0, r6
 1344 0068 FFF7FEFF 		bl	HAL_ADC_Start
 1345              	.LVL164:
 147:Core/Src/main.c ****     cos_adc = decayAndMerge(cos_adc, HAL_ADC_GetValue(&hadc1)); // Decay and merge the new value wi
 1346              		.loc 1 147 5 view .LVU275
 1347 006c 4FF0FF31 		mov	r1, #-1
 1348 0070 3046     		mov	r0, r6
 1349 0072 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1350              	.LVL165:
 148:Core/Src/main.c ****     
 1351              		.loc 1 148 5 view .LVU276
 148:Core/Src/main.c ****     
 1352              		.loc 1 148 38 is_stmt 0 view .LVU277
 1353 0076 3046     		mov	r0, r6
 1354 0078 FFF7FEFF 		bl	HAL_ADC_GetValue
 1355              	.LVL166:
 1356 007c 0146     		mov	r1, r0
 148:Core/Src/main.c ****     
 1357              		.loc 1 148 15 discriminator 1 view .LVU278
 1358 007e 2046     		mov	r0, r4
 1359 0080 FFF7FEFF 		bl	decayAndMerge
 1360              	.LVL167:
 148:Core/Src/main.c ****     
 1361              		.loc 1 148 13 discriminator 2 view .LVU279
 1362 0084 84B2     		uxth	r4, r0
 1363              	.LVL168:
 150:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc2, HAL_MAX_DELAY);
 1364              		.loc 1 150 5 is_stmt 1 view .LVU280
 1365 0086 184E     		ldr	r6, .L87+16
 1366 0088 3046     		mov	r0, r6
 1367 008a FFF7FEFF 		bl	HAL_ADC_Start
 1368              	.LVL169:
 151:Core/Src/main.c ****     sin_adc = decayAndMerge(sin_adc, HAL_ADC_GetValue(&hadc2)); // Decay and merge the new value wi
 1369              		.loc 1 151 5 view .LVU281
 1370 008e 4FF0FF31 		mov	r1, #-1
 1371 0092 3046     		mov	r0, r6
 1372 0094 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1373              	.LVL170:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 39


 152:Core/Src/main.c **** 
 1374              		.loc 1 152 5 view .LVU282
 152:Core/Src/main.c **** 
 1375              		.loc 1 152 38 is_stmt 0 view .LVU283
 1376 0098 3046     		mov	r0, r6
 1377 009a FFF7FEFF 		bl	HAL_ADC_GetValue
 1378              	.LVL171:
 1379 009e 0146     		mov	r1, r0
 152:Core/Src/main.c **** 
 1380              		.loc 1 152 15 discriminator 1 view .LVU284
 1381 00a0 2846     		mov	r0, r5
 1382 00a2 FFF7FEFF 		bl	decayAndMerge
 1383              	.LVL172:
 152:Core/Src/main.c **** 
 1384              		.loc 1 152 13 discriminator 2 view .LVU285
 1385 00a6 85B2     		uxth	r5, r0
 1386              	.LVL173:
 157:Core/Src/main.c ****     float den = cos_adc - midpoint;
 1387              		.loc 1 157 5 is_stmt 1 view .LVU286
 158:Core/Src/main.c ****     float num = sin_adc - midpoint;
 1388              		.loc 1 158 5 view .LVU287
 158:Core/Src/main.c ****     float num = sin_adc - midpoint;
 1389              		.loc 1 158 25 is_stmt 0 view .LVU288
 1390 00a8 2046     		mov	r0, r4
 1391 00aa FFF7FEFF 		bl	__aeabi_i2f
 1392              	.LVL174:
 158:Core/Src/main.c ****     float num = sin_adc - midpoint;
 1393              		.loc 1 158 11 view .LVU289
 1394 00ae 0F49     		ldr	r1, .L87+20
 1395 00b0 FFF7FEFF 		bl	__aeabi_fsub
 1396              	.LVL175:
 1397 00b4 0646     		mov	r6, r0
 1398              	.LVL176:
 159:Core/Src/main.c ****     if (den != 0){
 1399              		.loc 1 159 5 is_stmt 1 view .LVU290
 159:Core/Src/main.c ****     if (den != 0){
 1400              		.loc 1 159 25 is_stmt 0 view .LVU291
 1401 00b6 2846     		mov	r0, r5
 1402              	.LVL177:
 159:Core/Src/main.c ****     if (den != 0){
 1403              		.loc 1 159 25 view .LVU292
 1404 00b8 FFF7FEFF 		bl	__aeabi_i2f
 1405              	.LVL178:
 159:Core/Src/main.c ****     if (den != 0){
 1406              		.loc 1 159 11 view .LVU293
 1407 00bc 0B49     		ldr	r1, .L87+20
 1408 00be FFF7FEFF 		bl	__aeabi_fsub
 1409              	.LVL179:
 1410 00c2 0746     		mov	r7, r0
 1411              	.LVL180:
 160:Core/Src/main.c ****       theta_rad = atan2f(num, den); // Use atan2 for better handling of quadrants
 1412              		.loc 1 160 5 is_stmt 1 view .LVU294
 160:Core/Src/main.c ****       theta_rad = atan2f(num, den); // Use atan2 for better handling of quadrants
 1413              		.loc 1 160 8 is_stmt 0 view .LVU295
 1414 00c4 0021     		movs	r1, #0
 1415 00c6 3046     		mov	r0, r6
 1416              	.LVL181:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 40


 160:Core/Src/main.c ****       theta_rad = atan2f(num, den); // Use atan2 for better handling of quadrants
 1417              		.loc 1 160 8 view .LVU296
 1418 00c8 FFF7FEFF 		bl	__aeabi_fcmpeq
 1419              	.LVL182:
 1420 00cc 0028     		cmp	r0, #0
 1421 00ce B9D0     		beq	.L86
 164:Core/Src/main.c ****     }
 1422              		.loc 1 164 17 view .LVU297
 1423 00d0 0020     		movs	r0, #0
 1424 00d2 BBE7     		b	.L79
 1425              	.L88:
 1426 00d4 AFF30080 		.align	3
 1427              	.L87:
 1428 00d8 F8C1631A 		.word	442745336
 1429 00dc DCA54C40 		.word	1078765020
 1430 00e0 000C0140 		.word	1073810432
 1431 00e4 00000000 		.word	hadc1
 1432 00e8 00000000 		.word	hadc2
 1433 00ec 00882645 		.word	1160153088
 1434              	.LBE7:
 1435              		.cfi_endproc
 1436              	.LFE68:
 1438              		.global	ATAN_LUT
 1439              		.section	.rodata.ATAN_LUT,"a"
 1440              		.align	2
 1443              	ATAN_LUT:
 1444 0000 00000000 		.word	0
 1445 0004 2120803A 		.word	981475361
 1446 0008 F61F003B 		.word	989863926
 1447 000c DB2F403B 		.word	994062299
 1448 0010 E01F803B 		.word	998252512
 1449 0014 BE27A03B 		.word	1000351678
 1450 0018 852FC03B 		.word	1002450821
 1451 001c 2237E03B 		.word	1004549922
 1452 0020 601F003C 		.word	1006640992
 1453 0024 1923103C 		.word	1007690521
 1454 0028 BC26203C 		.word	1008740028
 1455 002c 4A2A303C 		.word	1009789514
 1456 0030 CD2D403C 		.word	1010838989
 1457 0034 3031503C 		.word	1011888432
 1458 0038 7E34603C 		.word	1012937854
 1459 003c AB37703C 		.word	1013987243
 1460 0040 5C1D803C 		.word	1015029084
 1461 0044 D31E883C 		.word	1015553747
 1462 0048 3920903C 		.word	1016078393
 1463 004c 8F21983C 		.word	1016603023
 1464 0050 D022A03C 		.word	1017127632
 1465 0054 0124A83C 		.word	1017652225
 1466 0058 1725B03C 		.word	1018176791
 1467 005c 1C26B83C 		.word	1018701340
 1468 0060 0727C03C 		.word	1019225863
 1469 0064 D727C83C 		.word	1019750359
 1470 0068 9228D03C 		.word	1020274834
 1471 006c 3729D83C 		.word	1020799287
 1472 0070 BC29E03C 		.word	1021323708
 1473 0074 262AE83C 		.word	1021848102
 1474 0078 702AF03C 		.word	1022372464
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 41


 1475 007c 9F2AF83C 		.word	1022896799
 1476 0080 5715003D 		.word	1023415639
 1477 0084 4E15043D 		.word	1023677774
 1478 0088 3515083D 		.word	1023939893
 1479 008c 0C150C3D 		.word	1024201996
 1480 0090 D014103D 		.word	1024464080
 1481 0094 8214143D 		.word	1024726146
 1482 0098 2314183D 		.word	1024988195
 1483 009c AF131C3D 		.word	1025250223
 1484 00a0 2B13203D 		.word	1025512235
 1485 00a4 8F12243D 		.word	1025774223
 1486 00a8 DF11283D 		.word	1026036191
 1487 00ac 1E112C3D 		.word	1026298142
 1488 00b0 4310303D 		.word	1026560067
 1489 00b4 540F343D 		.word	1026821972
 1490 00b8 4F0E383D 		.word	1027083855
 1491 00bc 320D3C3D 		.word	1027345714
 1492 00c0 FC0B403D 		.word	1027607548
 1493 00c4 B10A443D 		.word	1027869361
 1494 00c8 4C09483D 		.word	1028131148
 1495 00cc CE074C3D 		.word	1028392910
 1496 00d0 3806503D 		.word	1028654648
 1497 00d4 8704543D 		.word	1028916359
 1498 00d8 BB02583D 		.word	1029178043
 1499 00dc D5005C3D 		.word	1029439701
 1500 00e0 D3FE5F3D 		.word	1029701331
 1501 00e4 B4FC633D 		.word	1029962932
 1502 00e8 7BFA673D 		.word	1030224507
 1503 00ec 23F86B3D 		.word	1030486051
 1504 00f0 AFF56F3D 		.word	1030747567
 1505 00f4 1CF3733D 		.word	1031009052
 1506 00f8 6CF0773D 		.word	1031270508
 1507 00fc 9CED7B3D 		.word	1031531932
 1508 0100 AFEA7F3D 		.word	1031793327
 1509 0104 CFF3813D 		.word	1031926735
 1510 0108 38F2833D 		.word	1032057400
 1511 010c 90F0853D 		.word	1032188048
 1512 0110 D7EE873D 		.word	1032318679
 1513 0114 0EED893D 		.word	1032449294
 1514 0118 33EB8B3D 		.word	1032579891
 1515 011c 47E98D3D 		.word	1032710471
 1516 0120 49E78F3D 		.word	1032841033
 1517 0124 3BE5913D 		.word	1032971579
 1518 0128 18E3933D 		.word	1033102104
 1519 012c E4E0953D 		.word	1033232612
 1520 0130 9DDE973D 		.word	1033363101
 1521 0134 45DC993D 		.word	1033493573
 1522 0138 D7D99B3D 		.word	1033624023
 1523 013c 58D79D3D 		.word	1033754456
 1524 0140 C4D49F3D 		.word	1033884868
 1525 0144 1DD2A13D 		.word	1034015261
 1526 0148 61CFA33D 		.word	1034145633
 1527 014c 92CCA53D 		.word	1034275986
 1528 0150 AEC9A73D 		.word	1034406318
 1529 0154 B4C6A93D 		.word	1034536628
 1530 0158 A7C3AB3D 		.word	1034666919
 1531 015c 84C0AD3D 		.word	1034797188
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 42


 1532 0160 4ABDAF3D 		.word	1034927434
 1533 0164 FCB9B13D 		.word	1035057660
 1534 0168 98B6B33D 		.word	1035187864
 1535 016c 1DB3B53D 		.word	1035318045
 1536 0170 8CAFB73D 		.word	1035448204
 1537 0174 E4ABB93D 		.word	1035578340
 1538 0178 26A8BB3D 		.word	1035708454
 1539 017c 4FA4BD3D 		.word	1035838543
 1540 0180 61A0BF3D 		.word	1035968609
 1541 0184 5D9CC13D 		.word	1036098653
 1542 0188 4098C33D 		.word	1036228672
 1543 018c 0C94C53D 		.word	1036358668
 1544 0190 BD8FC73D 		.word	1036488637
 1545 0194 578BC93D 		.word	1036618583
 1546 0198 D886CB3D 		.word	1036748504
 1547 019c 4082CD3D 		.word	1036878400
 1548 01a0 907DCF3D 		.word	1037008272
 1549 01a4 C578D13D 		.word	1037138117
 1550 01a8 E073D33D 		.word	1037267936
 1551 01ac E16ED53D 		.word	1037397729
 1552 01b0 C969D73D 		.word	1037527497
 1553 01b4 9664D93D 		.word	1037657238
 1554 01b8 475FDB3D 		.word	1037786951
 1555 01bc DF59DD3D 		.word	1037916639
 1556 01c0 5A54DF3D 		.word	1038046298
 1557 01c4 BA4EE13D 		.word	1038175930
 1558 01c8 0049E33D 		.word	1038305536
 1559 01cc 2843E53D 		.word	1038435112
 1560 01d0 353DE73D 		.word	1038564661
 1561 01d4 2537E93D 		.word	1038694181
 1562 01d8 F930EB3D 		.word	1038823673
 1563 01dc B12AED3D 		.word	1038953137
 1564 01e0 4924EF3D 		.word	1039082569
 1565 01e4 C61DF13D 		.word	1039211974
 1566 01e8 2517F33D 		.word	1039341349
 1567 01ec 6710F53D 		.word	1039470695
 1568 01f0 8B09F73D 		.word	1039600011
 1569 01f4 9002F93D 		.word	1039729296
 1570 01f8 77FBFA3D 		.word	1039858551
 1571 01fc 3FF4FC3D 		.word	1039987775
 1572 0200 E8ECFE3D 		.word	1040116968
 1573 0204 BA72003E 		.word	1040216762
 1574 0208 EF6E013E 		.word	1040281327
 1575 020c 146B023E 		.word	1040345876
 1576 0210 2A67033E 		.word	1040410410
 1577 0214 3063043E 		.word	1040474928
 1578 0218 265F053E 		.word	1040539430
 1579 021c 0B5B063E 		.word	1040603915
 1580 0220 E056073E 		.word	1040668384
 1581 0224 A452083E 		.word	1040732836
 1582 0228 584E093E 		.word	1040797272
 1583 022c FC490A3E 		.word	1040861692
 1584 0230 8E450B3E 		.word	1040926094
 1585 0234 10410C3E 		.word	1040990480
 1586 0238 803C0D3E 		.word	1041054848
 1587 023c E0370E3E 		.word	1041119200
 1588 0240 2E330F3E 		.word	1041183534
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 43


 1589 0244 6A2E103E 		.word	1041247850
 1590 0248 9629113E 		.word	1041312150
 1591 024c B024123E 		.word	1041376432
 1592 0250 B81F133E 		.word	1041440696
 1593 0254 AE1A143E 		.word	1041504942
 1594 0258 9215153E 		.word	1041569170
 1595 025c 6510163E 		.word	1041633381
 1596 0260 250B173E 		.word	1041697573
 1597 0264 D305183E 		.word	1041761747
 1598 0268 6F00193E 		.word	1041825903
 1599 026c F8FA193E 		.word	1041890040
 1600 0270 6EF51A3E 		.word	1041954158
 1601 0274 D2EF1B3E 		.word	1042018258
 1602 0278 24EA1C3E 		.word	1042082340
 1603 027c 62E41D3E 		.word	1042146402
 1604 0280 8DDE1E3E 		.word	1042210445
 1605 0284 A5D81F3E 		.word	1042274469
 1606 0288 AAD2203E 		.word	1042338474
 1607 028c 9CCC213E 		.word	1042402460
 1608 0290 79C6223E 		.word	1042466425
 1609 0294 44C0233E 		.word	1042530372
 1610 0298 FBB9243E 		.word	1042594299
 1611 029c 9EB3253E 		.word	1042658206
 1612 02a0 2DAD263E 		.word	1042722093
 1613 02a4 A9A6273E 		.word	1042785961
 1614 02a8 10A0283E 		.word	1042849808
 1615 02ac 6399293E 		.word	1042913635
 1616 02b0 A2922A3E 		.word	1042977442
 1617 02b4 CD8B2B3E 		.word	1043041229
 1618 02b8 E2842C3E 		.word	1043104994
 1619 02bc E47D2D3E 		.word	1043168740
 1620 02c0 D0762E3E 		.word	1043232464
 1621 02c4 A86F2F3E 		.word	1043296168
 1622 02c8 6B68303E 		.word	1043359851
 1623 02cc 1861313E 		.word	1043423512
 1624 02d0 B259323E 		.word	1043487154
 1625 02d4 3552333E 		.word	1043550773
 1626 02d8 A34A343E 		.word	1043614371
 1627 02dc FB42353E 		.word	1043677947
 1628 02e0 3F3B363E 		.word	1043741503
 1629 02e4 6C33373E 		.word	1043805036
 1630 02e8 842B383E 		.word	1043868548
 1631 02ec 8623393E 		.word	1043932038
 1632 02f0 721B3A3E 		.word	1043995506
 1633 02f4 48133B3E 		.word	1044058952
 1634 02f8 080B3C3E 		.word	1044122376
 1635 02fc B1023D3E 		.word	1044185777
 1636 0300 44FA3D3E 		.word	1044249156
 1637 0304 C1F13E3E 		.word	1044312513
 1638 0308 27E93F3E 		.word	1044375847
 1639 030c 77E0403E 		.word	1044439159
 1640 0310 AFD7413E 		.word	1044502447
 1641 0314 D1CE423E 		.word	1044565713
 1642 0318 DCC5433E 		.word	1044628956
 1643 031c D0BC443E 		.word	1044692176
 1644 0320 ACB3453E 		.word	1044755372
 1645 0324 72AA463E 		.word	1044818546
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 44


 1646 0328 20A1473E 		.word	1044881696
 1647 032c B797483E 		.word	1044944823
 1648 0330 358E493E 		.word	1045007925
 1649 0334 9D844A3E 		.word	1045071005
 1650 0338 EC7A4B3E 		.word	1045134060
 1651 033c 24714C3E 		.word	1045197092
 1652 0340 44674D3E 		.word	1045260100
 1653 0344 4C5D4E3E 		.word	1045323084
 1654 0348 3B534F3E 		.word	1045386043
 1655 034c 1349503E 		.word	1045448979
 1656 0350 D23E513E 		.word	1045511890
 1657 0354 7834523E 		.word	1045574776
 1658 0358 062A533E 		.word	1045637638
 1659 035c 7C1F543E 		.word	1045700476
 1660 0360 D814553E 		.word	1045763288
 1661 0364 1C0A563E 		.word	1045826076
 1662 0368 47FF563E 		.word	1045888839
 1663 036c 59F4573E 		.word	1045951577
 1664 0370 52E9583E 		.word	1046014290
 1665 0374 32DE593E 		.word	1046076978
 1666 0378 F8D25A3E 		.word	1046139640
 1667 037c A5C75B3E 		.word	1046202277
 1668 0380 39BC5C3E 		.word	1046264889
 1669 0384 B3B05D3E 		.word	1046327475
 1670 0388 13A55E3E 		.word	1046390035
 1671 038c 5A995F3E 		.word	1046452570
 1672 0390 868D603E 		.word	1046515078
 1673 0394 9981613E 		.word	1046577561
 1674 0398 9175623E 		.word	1046640017
 1675 039c 7069633E 		.word	1046702448
 1676 03a0 355D643E 		.word	1046764853
 1677 03a4 DE50653E 		.word	1046827230
 1678 03a8 6E44663E 		.word	1046889582
 1679 03ac E337673E 		.word	1046951907
 1680 03b0 3E2B683E 		.word	1047014206
 1681 03b4 7E1E693E 		.word	1047076478
 1682 03b8 A3116A3E 		.word	1047138723
 1683 03bc AD046B3E 		.word	1047200941
 1684 03c0 9DF76B3E 		.word	1047263133
 1685 03c4 71EA6C3E 		.word	1047325297
 1686 03c8 2ADD6D3E 		.word	1047387434
 1687 03cc C8CF6E3E 		.word	1047449544
 1688 03d0 4BC26F3E 		.word	1047511627
 1689 03d4 B2B4703E 		.word	1047573682
 1690 03d8 FEA6713E 		.word	1047635710
 1691 03dc 2E99723E 		.word	1047697710
 1692 03e0 438B733E 		.word	1047759683
 1693 03e4 3C7D743E 		.word	1047821628
 1694 03e8 196F753E 		.word	1047883545
 1695 03ec DA60763E 		.word	1047945434
 1696 03f0 7F52773E 		.word	1048007295
 1697 03f4 0844783E 		.word	1048069128
 1698 03f8 7535793E 		.word	1048130933
 1699 03fc C6267A3E 		.word	1048192710
 1700 0400 FA177B3E 		.word	1048254458
 1701 0404 12097C3E 		.word	1048316178
 1702 0408 0EFA7C3E 		.word	1048377870
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 45


 1703 040c ECEA7D3E 		.word	1048439532
 1704 0410 AEDB7E3E 		.word	1048501166
 1705 0414 54CC7F3E 		.word	1048562772
 1706 0418 6E5E803E 		.word	1048600174
 1707 041c A4D6803E 		.word	1048630948
 1708 0420 CB4E813E 		.word	1048661707
 1709 0424 E4C6813E 		.word	1048692452
 1710 0428 EE3E823E 		.word	1048723182
 1711 042c EAB6823E 		.word	1048753898
 1712 0430 D72E833E 		.word	1048784599
 1713 0434 B5A6833E 		.word	1048815285
 1714 0438 841E843E 		.word	1048845956
 1715 043c 4596843E 		.word	1048876613
 1716 0440 F60D853E 		.word	1048907254
 1717 0444 9A85853E 		.word	1048937882
 1718 0448 2EFD853E 		.word	1048968494
 1719 044c B374863E 		.word	1048999091
 1720 0450 28EC863E 		.word	1049029672
 1721 0454 8F63873E 		.word	1049060239
 1722 0458 E7DA873E 		.word	1049090791
 1723 045c 3052883E 		.word	1049121328
 1724 0460 6AC9883E 		.word	1049151850
 1725 0464 9440893E 		.word	1049182356
 1726 0468 B0B7893E 		.word	1049212848
 1727 046c BC2E8A3E 		.word	1049243324
 1728 0470 B8A58A3E 		.word	1049273784
 1729 0474 A61C8B3E 		.word	1049304230
 1730 0478 84938B3E 		.word	1049334660
 1731 047c 520A8C3E 		.word	1049365074
 1732 0480 11818C3E 		.word	1049395473
 1733 0484 C1F78C3E 		.word	1049425857
 1734 0488 616E8D3E 		.word	1049456225
 1735 048c F1E48D3E 		.word	1049486577
 1736 0490 725B8E3E 		.word	1049516914
 1737 0494 E3D18E3E 		.word	1049547235
 1738 0498 45488F3E 		.word	1049577541
 1739 049c 97BE8F3E 		.word	1049607831
 1740 04a0 D934903E 		.word	1049638105
 1741 04a4 0BAB903E 		.word	1049668363
 1742 04a8 2D21913E 		.word	1049698605
 1743 04ac 4097913E 		.word	1049728832
 1744 04b0 420D923E 		.word	1049759042
 1745 04b4 3583923E 		.word	1049789237
 1746 04b8 18F9923E 		.word	1049819416
 1747 04bc EB6E933E 		.word	1049849579
 1748 04c0 ADE4933E 		.word	1049879725
 1749 04c4 605A943E 		.word	1049909856
 1750 04c8 02D0943E 		.word	1049939970
 1751 04cc 9445953E 		.word	1049970068
 1752 04d0 16BB953E 		.word	1050000150
 1753 04d4 8830963E 		.word	1050030216
 1754 04d8 EAA5963E 		.word	1050060266
 1755 04dc 3B1B973E 		.word	1050090299
 1756 04e0 7C90973E 		.word	1050120316
 1757 04e4 AD05983E 		.word	1050150317
 1758 04e8 CC7A983E 		.word	1050180300
 1759 04ec DCEF983E 		.word	1050210268
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 46


 1760 04f0 DC64993E 		.word	1050240220
 1761 04f4 CAD9993E 		.word	1050270154
 1762 04f8 A84E9A3E 		.word	1050300072
 1763 04fc 76C39A3E 		.word	1050329974
 1764 0500 33389B3E 		.word	1050359859
 1765 0504 DFAC9B3E 		.word	1050389727
 1766 0508 7B219C3E 		.word	1050419579
 1767 050c 06969C3E 		.word	1050449414
 1768 0510 800A9D3E 		.word	1050479232
 1769 0514 EA7E9D3E 		.word	1050509034
 1770 0518 42F39D3E 		.word	1050538818
 1771 051c 8A679E3E 		.word	1050568586
 1772 0520 C1DB9E3E 		.word	1050598337
 1773 0524 E74F9F3E 		.word	1050628071
 1774 0528 FCC39F3E 		.word	1050657788
 1775 052c 0038A03E 		.word	1050687488
 1776 0530 F3ABA03E 		.word	1050717171
 1777 0534 D61FA13E 		.word	1050746838
 1778 0538 A793A13E 		.word	1050776487
 1779 053c 6607A23E 		.word	1050806118
 1780 0540 157BA23E 		.word	1050835733
 1781 0544 B3EEA23E 		.word	1050865331
 1782 0548 3F62A33E 		.word	1050894911
 1783 054c BAD5A33E 		.word	1050924474
 1784 0550 2449A43E 		.word	1050954020
 1785 0554 7DBCA43E 		.word	1050983549
 1786 0558 C42FA53E 		.word	1051013060
 1787 055c FAA2A53E 		.word	1051042554
 1788 0560 1F16A63E 		.word	1051072031
 1789 0564 3289A63E 		.word	1051101490
 1790 0568 34FCA63E 		.word	1051130932
 1791 056c 256FA73E 		.word	1051160357
 1792 0570 03E2A73E 		.word	1051189763
 1793 0574 D154A83E 		.word	1051219153
 1794 0578 8DC7A83E 		.word	1051248525
 1795 057c 373AA93E 		.word	1051277879
 1796 0580 CFACA93E 		.word	1051307215
 1797 0584 561FAA3E 		.word	1051336534
 1798 0588 CC91AA3E 		.word	1051365836
 1799 058c 2F04AB3E 		.word	1051395119
 1800 0590 8176AB3E 		.word	1051424385
 1801 0594 C1E8AB3E 		.word	1051453633
 1802 0598 EF5AAC3E 		.word	1051482863
 1803 059c 0CCDAC3E 		.word	1051512076
 1804 05a0 173FAD3E 		.word	1051541271
 1805 05a4 0FB1AD3E 		.word	1051570447
 1806 05a8 F622AE3E 		.word	1051599606
 1807 05ac CB94AE3E 		.word	1051628747
 1808 05b0 8E06AF3E 		.word	1051657870
 1809 05b4 3F78AF3E 		.word	1051686975
 1810 05b8 DEE9AF3E 		.word	1051716062
 1811 05bc 6B5BB03E 		.word	1051745131
 1812 05c0 E6CCB03E 		.word	1051774182
 1813 05c4 4F3EB13E 		.word	1051803215
 1814 05c8 A6AFB13E 		.word	1051832230
 1815 05cc EB20B23E 		.word	1051861227
 1816 05d0 1D92B23E 		.word	1051890205
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 47


 1817 05d4 3D03B33E 		.word	1051919165
 1818 05d8 4B74B33E 		.word	1051948107
 1819 05dc 47E5B33E 		.word	1051977031
 1820 05e0 3156B43E 		.word	1052005937
 1821 05e4 08C7B43E 		.word	1052034824
 1822 05e8 CD37B53E 		.word	1052063693
 1823 05ec 7FA8B53E 		.word	1052092543
 1824 05f0 2019B63E 		.word	1052121376
 1825 05f4 AE89B63E 		.word	1052150190
 1826 05f8 29FAB63E 		.word	1052178985
 1827 05fc 926AB73E 		.word	1052207762
 1828 0600 E8DAB73E 		.word	1052236520
 1829 0604 2C4BB83E 		.word	1052265260
 1830 0608 5EBBB83E 		.word	1052293982
 1831 060c 7D2BB93E 		.word	1052322685
 1832 0610 899BB93E 		.word	1052351369
 1833 0614 830BBA3E 		.word	1052380035
 1834 0618 6A7BBA3E 		.word	1052408682
 1835 061c 3FEBBA3E 		.word	1052437311
 1836 0620 015BBB3E 		.word	1052465921
 1837 0624 B0CABB3E 		.word	1052494512
 1838 0628 4C3ABC3E 		.word	1052523084
 1839 062c D6A9BC3E 		.word	1052551638
 1840 0630 4D19BD3E 		.word	1052580173
 1841 0634 B188BD3E 		.word	1052608689
 1842 0638 03F8BD3E 		.word	1052637187
 1843 063c 4267BE3E 		.word	1052665666
 1844 0640 6DD6BE3E 		.word	1052694125
 1845 0644 8645BF3E 		.word	1052722566
 1846 0648 8CB4BF3E 		.word	1052750988
 1847 064c 7F23C03E 		.word	1052779391
 1848 0650 6092C03E 		.word	1052807776
 1849 0654 2D01C13E 		.word	1052836141
 1850 0658 E76FC13E 		.word	1052864487
 1851 065c 8EDEC13E 		.word	1052892814
 1852 0660 224DC23E 		.word	1052921122
 1853 0664 A4BBC23E 		.word	1052949412
 1854 0668 122AC33E 		.word	1052977682
 1855 066c 6D98C33E 		.word	1053005933
 1856 0670 B506C43E 		.word	1053034165
 1857 0674 EA74C43E 		.word	1053062378
 1858 0678 0CE3C43E 		.word	1053090572
 1859 067c 1A51C53E 		.word	1053118746
 1860 0680 15BFC53E 		.word	1053146901
 1861 0684 FE2CC63E 		.word	1053175038
 1862 0688 D39AC63E 		.word	1053203155
 1863 068c 9508C73E 		.word	1053231253
 1864 0690 4376C73E 		.word	1053259331
 1865 0694 DEE3C73E 		.word	1053287390
 1866 0698 6651C83E 		.word	1053315430
 1867 069c DBBEC83E 		.word	1053343451
 1868 06a0 3C2CC93E 		.word	1053371452
 1869 06a4 8A99C93E 		.word	1053399434
 1870 06a8 C406CA3E 		.word	1053427396
 1871 06ac EB73CA3E 		.word	1053455339
 1872 06b0 FFE0CA3E 		.word	1053483263
 1873 06b4 FF4DCB3E 		.word	1053511167
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 48


 1874 06b8 ECBACB3E 		.word	1053539052
 1875 06bc C527CC3E 		.word	1053566917
 1876 06c0 8B94CC3E 		.word	1053594763
 1877 06c4 3E01CD3E 		.word	1053622590
 1878 06c8 DC6DCD3E 		.word	1053650396
 1879 06cc 68DACD3E 		.word	1053678184
 1880 06d0 E046CE3E 		.word	1053705952
 1881 06d4 44B3CE3E 		.word	1053733700
 1882 06d8 941FCF3E 		.word	1053761428
 1883 06dc D18BCF3E 		.word	1053789137
 1884 06e0 FAF7CF3E 		.word	1053816826
 1885 06e4 1064D03E 		.word	1053844496
 1886 06e8 12D0D03E 		.word	1053872146
 1887 06ec 013CD13E 		.word	1053899777
 1888 06f0 DBA7D13E 		.word	1053927387
 1889 06f4 A213D23E 		.word	1053954978
 1890 06f8 557FD23E 		.word	1053982549
 1891 06fc F5EAD23E 		.word	1054010101
 1892 0700 8156D33E 		.word	1054037633
 1893 0704 F9C1D33E 		.word	1054065145
 1894 0708 5D2DD43E 		.word	1054092637
 1895 070c AE98D43E 		.word	1054120110
 1896 0710 EA03D53E 		.word	1054147562
 1897 0714 136FD53E 		.word	1054174995
 1898 0718 27DAD53E 		.word	1054202407
 1899 071c 2945D63E 		.word	1054229801
 1900 0720 16B0D63E 		.word	1054257174
 1901 0724 EF1AD73E 		.word	1054284527
 1902 0728 B485D73E 		.word	1054311860
 1903 072c 66F0D73E 		.word	1054339174
 1904 0730 035BD83E 		.word	1054366467
 1905 0734 8DC5D83E 		.word	1054393741
 1906 0738 0230D93E 		.word	1054420994
 1907 073c 649AD93E 		.word	1054448228
 1908 0740 B204DA3E 		.word	1054475442
 1909 0744 EB6EDA3E 		.word	1054502635
 1910 0748 11D9DA3E 		.word	1054529809
 1911 074c 2243DB3E 		.word	1054556962
 1912 0750 20ADDB3E 		.word	1054584096
 1913 0754 0917DC3E 		.word	1054611209
 1914 0758 DF80DC3E 		.word	1054638303
 1915 075c A0EADC3E 		.word	1054665376
 1916 0760 4D54DD3E 		.word	1054692429
 1917 0764 E6BDDD3E 		.word	1054719462
 1918 0768 6B27DE3E 		.word	1054746475
 1919 076c DC90DE3E 		.word	1054773468
 1920 0770 38FADE3E 		.word	1054800440
 1921 0774 8163DF3E 		.word	1054827393
 1922 0778 B5CCDF3E 		.word	1054854325
 1923 077c D535E03E 		.word	1054881237
 1924 0780 E19EE03E 		.word	1054908129
 1925 0784 D907E13E 		.word	1054935001
 1926 0788 BD70E13E 		.word	1054961853
 1927 078c 8CD9E13E 		.word	1054988684
 1928 0790 4742E23E 		.word	1055015495
 1929 0794 EEAAE23E 		.word	1055042286
 1930 0798 8013E33E 		.word	1055069056
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 49


 1931 079c FE7BE33E 		.word	1055095806
 1932 07a0 68E4E33E 		.word	1055122536
 1933 07a4 BE4CE43E 		.word	1055149246
 1934 07a8 FFB4E43E 		.word	1055175935
 1935 07ac 2C1DE53E 		.word	1055202604
 1936 07b0 4585E53E 		.word	1055229253
 1937 07b4 49EDE53E 		.word	1055255881
 1938 07b8 3955E63E 		.word	1055282489
 1939 07bc 15BDE63E 		.word	1055309077
 1940 07c0 DC24E73E 		.word	1055335644
 1941 07c4 8F8CE73E 		.word	1055362191
 1942 07c8 2DF4E73E 		.word	1055388717
 1943 07cc B75BE83E 		.word	1055415223
 1944 07d0 2DC3E83E 		.word	1055441709
 1945 07d4 8E2AE93E 		.word	1055468174
 1946 07d8 DB91E93E 		.word	1055494619
 1947 07dc 14F9E93E 		.word	1055521044
 1948 07e0 3760EA3E 		.word	1055547447
 1949 07e4 47C7EA3E 		.word	1055573831
 1950 07e8 422EEB3E 		.word	1055600194
 1951 07ec 2895EB3E 		.word	1055626536
 1952 07f0 FBFBEB3E 		.word	1055652859
 1953 07f4 B862EC3E 		.word	1055679160
 1954 07f8 61C9EC3E 		.word	1055705441
 1955 07fc F62FED3E 		.word	1055731702
 1956 0800 7696ED3E 		.word	1055757942
 1957 0804 E1FCED3E 		.word	1055784161
 1958 0808 3863EE3E 		.word	1055810360
 1959 080c 7BC9EE3E 		.word	1055836539
 1960 0810 A92FEF3E 		.word	1055862697
 1961 0814 C295EF3E 		.word	1055888834
 1962 0818 C7FBEF3E 		.word	1055914951
 1963 081c B761F03E 		.word	1055941047
 1964 0820 92C7F03E 		.word	1055967122
 1965 0824 592DF13E 		.word	1055993177
 1966 0828 0C93F13E 		.word	1056019212
 1967 082c AAF8F13E 		.word	1056045226
 1968 0830 335EF23E 		.word	1056071219
 1969 0834 A7C3F23E 		.word	1056097191
 1970 0838 0729F33E 		.word	1056123143
 1971 083c 538EF33E 		.word	1056149075
 1972 0840 8AF3F33E 		.word	1056174986
 1973 0844 AC58F43E 		.word	1056200876
 1974 0848 B9BDF43E 		.word	1056226745
 1975 084c B222F53E 		.word	1056252594
 1976 0850 9687F53E 		.word	1056278422
 1977 0854 66ECF53E 		.word	1056304230
 1978 0858 2151F63E 		.word	1056330017
 1979 085c C7B5F63E 		.word	1056355783
 1980 0860 581AF73E 		.word	1056381528
 1981 0864 D57EF73E 		.word	1056407253
 1982 0868 3DE3F73E 		.word	1056432957
 1983 086c 9147F83E 		.word	1056458641
 1984 0870 CFABF83E 		.word	1056484303
 1985 0874 F90FF93E 		.word	1056509945
 1986 0878 0F74F93E 		.word	1056535567
 1987 087c 0FD8F93E 		.word	1056561167
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 50


 1988 0880 FB3BFA3E 		.word	1056586747
 1989 0884 D29FFA3E 		.word	1056612306
 1990 0888 9503FB3E 		.word	1056637845
 1991 088c 4267FB3E 		.word	1056663362
 1992 0890 DBCAFB3E 		.word	1056688859
 1993 0894 602EFC3E 		.word	1056714336
 1994 0898 CF91FC3E 		.word	1056739791
 1995 089c 2AF5FC3E 		.word	1056765226
 1996 08a0 7058FD3E 		.word	1056790640
 1997 08a4 A1BBFD3E 		.word	1056816033
 1998 08a8 BE1EFE3E 		.word	1056841406
 1999 08ac C581FE3E 		.word	1056866757
 2000 08b0 B8E4FE3E 		.word	1056892088
 2001 08b4 9647FF3E 		.word	1056917398
 2002 08b8 60AAFF3E 		.word	1056942688
 2003 08bc 8A06003F 		.word	1056966282
 2004 08c0 DA37003F 		.word	1056978906
 2005 08c4 1F69003F 		.word	1056991519
 2006 08c8 5B9A003F 		.word	1057004123
 2007 08cc 8CCB003F 		.word	1057016716
 2008 08d0 B2FC003F 		.word	1057029298
 2009 08d4 CE2D013F 		.word	1057041870
 2010 08d8 DF5E013F 		.word	1057054431
 2011 08dc E68F013F 		.word	1057066982
 2012 08e0 E3C0013F 		.word	1057079523
 2013 08e4 D6F1013F 		.word	1057092054
 2014 08e8 BD22023F 		.word	1057104573
 2015 08ec 9B53023F 		.word	1057117083
 2016 08f0 6E84023F 		.word	1057129582
 2017 08f4 37B5023F 		.word	1057142071
 2018 08f8 F5E5023F 		.word	1057154549
 2019 08fc A916033F 		.word	1057167017
 2020 0900 5347033F 		.word	1057179475
 2021 0904 F277033F 		.word	1057191922
 2022 0908 87A8033F 		.word	1057204359
 2023 090c 11D9033F 		.word	1057216785
 2024 0910 9109043F 		.word	1057229201
 2025 0914 063A043F 		.word	1057241606
 2026 0918 716A043F 		.word	1057254001
 2027 091c D29A043F 		.word	1057266386
 2028 0920 28CB043F 		.word	1057278760
 2029 0924 74FB043F 		.word	1057291124
 2030 0928 B52B053F 		.word	1057303477
 2031 092c EC5B053F 		.word	1057315820
 2032 0930 198C053F 		.word	1057328153
 2033 0934 3BBC053F 		.word	1057340475
 2034 0938 53EC053F 		.word	1057352787
 2035 093c 601C063F 		.word	1057365088
 2036 0940 634C063F 		.word	1057377379
 2037 0944 5C7C063F 		.word	1057389660
 2038 0948 4AAC063F 		.word	1057401930
 2039 094c 2EDC063F 		.word	1057414190
 2040 0950 070C073F 		.word	1057426439
 2041 0954 D63B073F 		.word	1057438678
 2042 0958 9A6B073F 		.word	1057450906
 2043 095c 549B073F 		.word	1057463124
 2044 0960 04CB073F 		.word	1057475332
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 51


 2045 0964 A9FA073F 		.word	1057487529
 2046 0968 442A083F 		.word	1057499716
 2047 096c D559083F 		.word	1057511893
 2048 0970 5B89083F 		.word	1057524059
 2049 0974 D6B8083F 		.word	1057536214
 2050 0978 47E8083F 		.word	1057548359
 2051 097c AE17093F 		.word	1057560494
 2052 0980 0B47093F 		.word	1057572619
 2053 0984 5C76093F 		.word	1057584732
 2054 0988 A4A5093F 		.word	1057596836
 2055 098c E1D4093F 		.word	1057608929
 2056 0990 14040A3F 		.word	1057621012
 2057 0994 3C330A3F 		.word	1057633084
 2058 0998 5A620A3F 		.word	1057645146
 2059 099c 6E910A3F 		.word	1057657198
 2060 09a0 77C00A3F 		.word	1057669239
 2061 09a4 76EF0A3F 		.word	1057681270
 2062 09a8 6A1E0B3F 		.word	1057693290
 2063 09ac 544D0B3F 		.word	1057705300
 2064 09b0 347C0B3F 		.word	1057717300
 2065 09b4 09AB0B3F 		.word	1057729289
 2066 09b8 D4D90B3F 		.word	1057741268
 2067 09bc 94080C3F 		.word	1057753236
 2068 09c0 4A370C3F 		.word	1057765194
 2069 09c4 F5650C3F 		.word	1057777141
 2070 09c8 97940C3F 		.word	1057789079
 2071 09cc 2EC30C3F 		.word	1057801006
 2072 09d0 BAF10C3F 		.word	1057812922
 2073 09d4 3C200D3F 		.word	1057824828
 2074 09d8 B44E0D3F 		.word	1057836724
 2075 09dc 217D0D3F 		.word	1057848609
 2076 09e0 84AB0D3F 		.word	1057860484
 2077 09e4 DDD90D3F 		.word	1057872349
 2078 09e8 2B080E3F 		.word	1057884203
 2079 09ec 6F360E3F 		.word	1057896047
 2080 09f0 A8640E3F 		.word	1057907880
 2081 09f4 D7920E3F 		.word	1057919703
 2082 09f8 FCC00E3F 		.word	1057931516
 2083 09fc 16EF0E3F 		.word	1057943318
 2084 0a00 261D0F3F 		.word	1057955110
 2085 0a04 2C4B0F3F 		.word	1057966892
 2086 0a08 27790F3F 		.word	1057978663
 2087 0a0c 18A70F3F 		.word	1057990424
 2088 0a10 FED40F3F 		.word	1058002174
 2089 0a14 DB02103F 		.word	1058013915
 2090 0a18 AC30103F 		.word	1058025644
 2091 0a1c 745E103F 		.word	1058037364
 2092 0a20 318C103F 		.word	1058049073
 2093 0a24 E4B9103F 		.word	1058060772
 2094 0a28 8CE7103F 		.word	1058072460
 2095 0a2c 2B15113F 		.word	1058084139
 2096 0a30 BE42113F 		.word	1058095806
 2097 0a34 4870113F 		.word	1058107464
 2098 0a38 C79D113F 		.word	1058119111
 2099 0a3c 3CCB113F 		.word	1058130748
 2100 0a40 A6F8113F 		.word	1058142374
 2101 0a44 0626123F 		.word	1058153990
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 52


 2102 0a48 5C53123F 		.word	1058165596
 2103 0a4c A880123F 		.word	1058177192
 2104 0a50 E9AD123F 		.word	1058188777
 2105 0a54 20DB123F 		.word	1058200352
 2106 0a58 4C08133F 		.word	1058211916
 2107 0a5c 6E35133F 		.word	1058223470
 2108 0a60 8662133F 		.word	1058235014
 2109 0a64 948F133F 		.word	1058246548
 2110 0a68 97BC133F 		.word	1058258071
 2111 0a6c 90E9133F 		.word	1058269584
 2112 0a70 7F16143F 		.word	1058281087
 2113 0a74 6443143F 		.word	1058292580
 2114 0a78 3E70143F 		.word	1058304062
 2115 0a7c 0E9D143F 		.word	1058315534
 2116 0a80 D3C9143F 		.word	1058326995
 2117 0a84 8FF6143F 		.word	1058338447
 2118 0a88 4023153F 		.word	1058349888
 2119 0a8c E64F153F 		.word	1058361318
 2120 0a90 837C153F 		.word	1058372739
 2121 0a94 15A9153F 		.word	1058384149
 2122 0a98 9DD5153F 		.word	1058395549
 2123 0a9c 1B02163F 		.word	1058406939
 2124 0aa0 8F2E163F 		.word	1058418319
 2125 0aa4 F85A163F 		.word	1058429688
 2126 0aa8 5787163F 		.word	1058441047
 2127 0aac ABB3163F 		.word	1058452395
 2128 0ab0 F6DF163F 		.word	1058463734
 2129 0ab4 360C173F 		.word	1058475062
 2130 0ab8 6C38173F 		.word	1058486380
 2131 0abc 9864173F 		.word	1058497688
 2132 0ac0 BA90173F 		.word	1058508986
 2133 0ac4 D1BC173F 		.word	1058520273
 2134 0ac8 DEE8173F 		.word	1058531550
 2135 0acc E114183F 		.word	1058542817
 2136 0ad0 DA40183F 		.word	1058554074
 2137 0ad4 C86C183F 		.word	1058565320
 2138 0ad8 AC98183F 		.word	1058576556
 2139 0adc 87C4183F 		.word	1058587783
 2140 0ae0 56F0183F 		.word	1058598998
 2141 0ae4 1C1C193F 		.word	1058610204
 2142 0ae8 D847193F 		.word	1058621400
 2143 0aec 8973193F 		.word	1058632585
 2144 0af0 309F193F 		.word	1058643760
 2145 0af4 CDCA193F 		.word	1058654925
 2146 0af8 60F6193F 		.word	1058666080
 2147 0afc E8211A3F 		.word	1058677224
 2148 0b00 674D1A3F 		.word	1058688359
 2149 0b04 DB781A3F 		.word	1058699483
 2150 0b08 45A41A3F 		.word	1058710597
 2151 0b0c A5CF1A3F 		.word	1058721701
 2152 0b10 FBFA1A3F 		.word	1058732795
 2153 0b14 47261B3F 		.word	1058743879
 2154 0b18 88511B3F 		.word	1058754952
 2155 0b1c C07C1B3F 		.word	1058766016
 2156 0b20 EDA71B3F 		.word	1058777069
 2157 0b24 10D31B3F 		.word	1058788112
 2158 0b28 29FE1B3F 		.word	1058799145
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 53


 2159 0b2c 38291C3F 		.word	1058810168
 2160 0b30 3D541C3F 		.word	1058821181
 2161 0b34 377F1C3F 		.word	1058832183
 2162 0b38 28AA1C3F 		.word	1058843176
 2163 0b3c 0ED51C3F 		.word	1058854158
 2164 0b40 EBFF1C3F 		.word	1058865131
 2165 0b44 BD2A1D3F 		.word	1058876093
 2166 0b48 85551D3F 		.word	1058887045
 2167 0b4c 43801D3F 		.word	1058897987
 2168 0b50 F7AA1D3F 		.word	1058908919
 2169 0b54 A1D51D3F 		.word	1058919841
 2170 0b58 41001E3F 		.word	1058930753
 2171 0b5c D72A1E3F 		.word	1058941655
 2172 0b60 63551E3F 		.word	1058952547
 2173 0b64 E57F1E3F 		.word	1058963429
 2174 0b68 5CAA1E3F 		.word	1058974300
 2175 0b6c CAD41E3F 		.word	1058985162
 2176 0b70 2DFF1E3F 		.word	1058996013
 2177 0b74 87291F3F 		.word	1059006855
 2178 0b78 D7531F3F 		.word	1059017687
 2179 0b7c 1C7E1F3F 		.word	1059028508
 2180 0b80 57A81F3F 		.word	1059039319
 2181 0b84 89D21F3F 		.word	1059050121
 2182 0b88 B0FC1F3F 		.word	1059060912
 2183 0b8c CE26203F 		.word	1059071694
 2184 0b90 E150203F 		.word	1059082465
 2185 0b94 EB7A203F 		.word	1059093227
 2186 0b98 EAA4203F 		.word	1059103978
 2187 0b9c E0CE203F 		.word	1059114720
 2188 0ba0 CBF8203F 		.word	1059125451
 2189 0ba4 AD22213F 		.word	1059136173
 2190 0ba8 844C213F 		.word	1059146884
 2191 0bac 5276213F 		.word	1059157586
 2192 0bb0 15A0213F 		.word	1059168277
 2193 0bb4 CFC9213F 		.word	1059178959
 2194 0bb8 7FF3213F 		.word	1059189631
 2195 0bbc 241D223F 		.word	1059200292
 2196 0bc0 C046223F 		.word	1059210944
 2197 0bc4 5270223F 		.word	1059221586
 2198 0bc8 DA99223F 		.word	1059232218
 2199 0bcc 58C3223F 		.word	1059242840
 2200 0bd0 CCEC223F 		.word	1059253452
 2201 0bd4 3716233F 		.word	1059264055
 2202 0bd8 973F233F 		.word	1059274647
 2203 0bdc ED68233F 		.word	1059285229
 2204 0be0 3A92233F 		.word	1059295802
 2205 0be4 7CBB233F 		.word	1059306364
 2206 0be8 B5E4233F 		.word	1059316917
 2207 0bec E40D243F 		.word	1059327460
 2208 0bf0 0937243F 		.word	1059337993
 2209 0bf4 2460243F 		.word	1059348516
 2210 0bf8 3589243F 		.word	1059359029
 2211 0bfc 3DB2243F 		.word	1059369533
 2212 0c00 3ADB243F 		.word	1059380026
 2213 0c04 2E04253F 		.word	1059390510
 2214 0c08 182D253F 		.word	1059400984
 2215 0c0c F855253F 		.word	1059411448
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 54


 2216 0c10 CE7E253F 		.word	1059421902
 2217 0c14 9BA7253F 		.word	1059432347
 2218 0c18 5DD0253F 		.word	1059442781
 2219 0c1c 16F9253F 		.word	1059453206
 2220 0c20 C521263F 		.word	1059463621
 2221 0c24 6A4A263F 		.word	1059474026
 2222 0c28 0573263F 		.word	1059484421
 2223 0c2c 979B263F 		.word	1059494807
 2224 0c30 1FC4263F 		.word	1059505183
 2225 0c34 9DEC263F 		.word	1059515549
 2226 0c38 1115273F 		.word	1059525905
 2227 0c3c 7B3D273F 		.word	1059536251
 2228 0c40 DC65273F 		.word	1059546588
 2229 0c44 338E273F 		.word	1059556915
 2230 0c48 80B6273F 		.word	1059567232
 2231 0c4c C4DE273F 		.word	1059577540
 2232 0c50 FD06283F 		.word	1059587837
 2233 0c54 2D2F283F 		.word	1059598125
 2234 0c58 5457283F 		.word	1059608404
 2235 0c5c 707F283F 		.word	1059618672
 2236 0c60 83A7283F 		.word	1059628931
 2237 0c64 8CCF283F 		.word	1059639180
 2238 0c68 8CF7283F 		.word	1059649420
 2239 0c6c 821F293F 		.word	1059659650
 2240 0c70 6E47293F 		.word	1059669870
 2241 0c74 506F293F 		.word	1059680080
 2242 0c78 2997293F 		.word	1059690281
 2243 0c7c F8BE293F 		.word	1059700472
 2244 0c80 BDE6293F 		.word	1059710653
 2245 0c84 790E2A3F 		.word	1059720825
 2246 0c88 2B362A3F 		.word	1059730987
 2247 0c8c D45D2A3F 		.word	1059741140
 2248 0c90 72852A3F 		.word	1059751282
 2249 0c94 08AD2A3F 		.word	1059761416
 2250 0c98 93D42A3F 		.word	1059771539
 2251 0c9c 15FC2A3F 		.word	1059781653
 2252 0ca0 8D232B3F 		.word	1059791757
 2253 0ca4 FC4A2B3F 		.word	1059801852
 2254 0ca8 61722B3F 		.word	1059811937
 2255 0cac BD992B3F 		.word	1059822013
 2256 0cb0 0FC12B3F 		.word	1059832079
 2257 0cb4 57E82B3F 		.word	1059842135
 2258 0cb8 960F2C3F 		.word	1059852182
 2259 0cbc CB362C3F 		.word	1059862219
 2260 0cc0 F75D2C3F 		.word	1059872247
 2261 0cc4 19852C3F 		.word	1059882265
 2262 0cc8 32AC2C3F 		.word	1059892274
 2263 0ccc 41D32C3F 		.word	1059902273
 2264 0cd0 46FA2C3F 		.word	1059912262
 2265 0cd4 42212D3F 		.word	1059922242
 2266 0cd8 35482D3F 		.word	1059932213
 2267 0cdc 1E6F2D3F 		.word	1059942174
 2268 0ce0 FD952D3F 		.word	1059952125
 2269 0ce4 D3BC2D3F 		.word	1059962067
 2270 0ce8 A0E32D3F 		.word	1059972000
 2271 0cec 630A2E3F 		.word	1059981923
 2272 0cf0 1C312E3F 		.word	1059991836
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 55


 2273 0cf4 CC572E3F 		.word	1060001740
 2274 0cf8 737E2E3F 		.word	1060011635
 2275 0cfc 10A52E3F 		.word	1060021520
 2276 0d00 A4CB2E3F 		.word	1060031396
 2277 0d04 2EF22E3F 		.word	1060041262
 2278 0d08 AE182F3F 		.word	1060051118
 2279 0d0c 263F2F3F 		.word	1060060966
 2280 0d10 94652F3F 		.word	1060070804
 2281 0d14 F88B2F3F 		.word	1060080632
 2282 0d18 53B22F3F 		.word	1060090451
 2283 0d1c A5D82F3F 		.word	1060100261
 2284 0d20 EDFE2F3F 		.word	1060110061
 2285 0d24 2C25303F 		.word	1060119852
 2286 0d28 614B303F 		.word	1060129633
 2287 0d2c 8E71303F 		.word	1060139406
 2288 0d30 B097303F 		.word	1060149168
 2289 0d34 CABD303F 		.word	1060158922
 2290 0d38 DAE3303F 		.word	1060168666
 2291 0d3c E009313F 		.word	1060178400
 2292 0d40 DE2F313F 		.word	1060188126
 2293 0d44 D255313F 		.word	1060197842
 2294 0d48 BC7B313F 		.word	1060207548
 2295 0d4c 9EA1313F 		.word	1060217246
 2296 0d50 76C7313F 		.word	1060226934
 2297 0d54 44ED313F 		.word	1060236612
 2298 0d58 0A13323F 		.word	1060246282
 2299 0d5c C638323F 		.word	1060255942
 2300 0d60 795E323F 		.word	1060265593
 2301 0d64 2284323F 		.word	1060275234
 2302 0d68 C2A9323F 		.word	1060284866
 2303 0d6c 59CF323F 		.word	1060294489
 2304 0d70 E7F4323F 		.word	1060304103
 2305 0d74 6C1A333F 		.word	1060313708
 2306 0d78 E73F333F 		.word	1060323303
 2307 0d7c 5965333F 		.word	1060332889
 2308 0d80 C28A333F 		.word	1060342466
 2309 0d84 21B0333F 		.word	1060352033
 2310 0d88 77D5333F 		.word	1060361591
 2311 0d8c C5FA333F 		.word	1060371141
 2312 0d90 0820343F 		.word	1060380680
 2313 0d94 4345343F 		.word	1060390211
 2314 0d98 756A343F 		.word	1060399733
 2315 0d9c 9D8F343F 		.word	1060409245
 2316 0da0 BCB4343F 		.word	1060418748
 2317 0da4 D2D9343F 		.word	1060428242
 2318 0da8 DFFE343F 		.word	1060437727
 2319 0dac E323353F 		.word	1060447203
 2320 0db0 DD48353F 		.word	1060456669
 2321 0db4 CF6D353F 		.word	1060466127
 2322 0db8 B792353F 		.word	1060475575
 2323 0dbc 96B7353F 		.word	1060485014
 2324 0dc0 6CDC353F 		.word	1060494444
 2325 0dc4 3901363F 		.word	1060503865
 2326 0dc8 FD25363F 		.word	1060513277
 2327 0dcc B74A363F 		.word	1060522679
 2328 0dd0 696F363F 		.word	1060532073
 2329 0dd4 1194363F 		.word	1060541457
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 56


 2330 0dd8 B1B8363F 		.word	1060550833
 2331 0ddc 47DD363F 		.word	1060560199
 2332 0de0 D501373F 		.word	1060569557
 2333 0de4 5926373F 		.word	1060578905
 2334 0de8 D44A373F 		.word	1060588244
 2335 0dec 466F373F 		.word	1060597574
 2336 0df0 B093373F 		.word	1060606896
 2337 0df4 10B8373F 		.word	1060616208
 2338 0df8 67DC373F 		.word	1060625511
 2339 0dfc B500383F 		.word	1060634805
 2340 0e00 FA24383F 		.word	1060644090
 2341 0e04 3649383F 		.word	1060653366
 2342 0e08 696D383F 		.word	1060662633
 2343 0e0c 9491383F 		.word	1060671892
 2344 0e10 B5B5383F 		.word	1060681141
 2345 0e14 CDD9383F 		.word	1060690381
 2346 0e18 DCFD383F 		.word	1060699612
 2347 0e1c E321393F 		.word	1060708835
 2348 0e20 E045393F 		.word	1060718048
 2349 0e24 D569393F 		.word	1060727253
 2350 0e28 C08D393F 		.word	1060736448
 2351 0e2c A3B1393F 		.word	1060745635
 2352 0e30 7CD5393F 		.word	1060754812
 2353 0e34 4DF9393F 		.word	1060763981
 2354 0e38 151D3A3F 		.word	1060773141
 2355 0e3c D4403A3F 		.word	1060782292
 2356 0e40 8A643A3F 		.word	1060791434
 2357 0e44 38883A3F 		.word	1060800568
 2358 0e48 DCAB3A3F 		.word	1060809692
 2359 0e4c 77CF3A3F 		.word	1060818807
 2360 0e50 0AF33A3F 		.word	1060827914
 2361 0e54 94163B3F 		.word	1060837012
 2362 0e58 153A3B3F 		.word	1060846101
 2363 0e5c 8D5D3B3F 		.word	1060855181
 2364 0e60 FD803B3F 		.word	1060864253
 2365 0e64 63A43B3F 		.word	1060873315
 2366 0e68 C1C73B3F 		.word	1060882369
 2367 0e6c 16EB3B3F 		.word	1060891414
 2368 0e70 620E3C3F 		.word	1060900450
 2369 0e74 A5313C3F 		.word	1060909477
 2370 0e78 E0543C3F 		.word	1060918496
 2371 0e7c 12783C3F 		.word	1060927506
 2372 0e80 3B9B3C3F 		.word	1060936507
 2373 0e84 5BBE3C3F 		.word	1060945499
 2374 0e88 73E13C3F 		.word	1060954483
 2375 0e8c 81043D3F 		.word	1060963457
 2376 0e90 88273D3F 		.word	1060972424
 2377 0e94 854A3D3F 		.word	1060981381
 2378 0e98 7A6D3D3F 		.word	1060990330
 2379 0e9c 66903D3F 		.word	1060999270
 2380 0ea0 49B33D3F 		.word	1061008201
 2381 0ea4 23D63D3F 		.word	1061017123
 2382 0ea8 F5F83D3F 		.word	1061026037
 2383 0eac BE1B3E3F 		.word	1061034942
 2384 0eb0 7F3E3E3F 		.word	1061043839
 2385 0eb4 37613E3F 		.word	1061052727
 2386 0eb8 E6833E3F 		.word	1061061606
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 57


 2387 0ebc 8DA63E3F 		.word	1061070477
 2388 0ec0 2BC93E3F 		.word	1061079339
 2389 0ec4 C0EB3E3F 		.word	1061088192
 2390 0ec8 4C0E3F3F 		.word	1061097036
 2391 0ecc D1303F3F 		.word	1061105873
 2392 0ed0 4C533F3F 		.word	1061114700
 2393 0ed4 BF753F3F 		.word	1061123519
 2394 0ed8 29983F3F 		.word	1061132329
 2395 0edc 8BBA3F3F 		.word	1061141131
 2396 0ee0 E4DC3F3F 		.word	1061149924
 2397 0ee4 34FF3F3F 		.word	1061158708
 2398 0ee8 7C21403F 		.word	1061167484
 2399 0eec BC43403F 		.word	1061176252
 2400 0ef0 F365403F 		.word	1061185011
 2401 0ef4 2188403F 		.word	1061193761
 2402 0ef8 47AA403F 		.word	1061202503
 2403 0efc 64CC403F 		.word	1061211236
 2404 0f00 79EE403F 		.word	1061219961
 2405 0f04 8510413F 		.word	1061228677
 2406 0f08 8932413F 		.word	1061237385
 2407 0f0c 8454413F 		.word	1061246084
 2408 0f10 7776413F 		.word	1061254775
 2409 0f14 6198413F 		.word	1061263457
 2410 0f18 43BA413F 		.word	1061272131
 2411 0f1c 1CDC413F 		.word	1061280796
 2412 0f20 EEFD413F 		.word	1061289454
 2413 0f24 B61F423F 		.word	1061298102
 2414 0f28 7641423F 		.word	1061306742
 2415 0f2c 2E63423F 		.word	1061315374
 2416 0f30 DD84423F 		.word	1061323997
 2417 0f34 84A6423F 		.word	1061332612
 2418 0f38 22C8423F 		.word	1061341218
 2419 0f3c B8E9423F 		.word	1061349816
 2420 0f40 460B433F 		.word	1061358406
 2421 0f44 CB2C433F 		.word	1061366987
 2422 0f48 484E433F 		.word	1061375560
 2423 0f4c BC6F433F 		.word	1061384124
 2424 0f50 2891433F 		.word	1061392680
 2425 0f54 8CB2433F 		.word	1061401228
 2426 0f58 E7D3433F 		.word	1061409767
 2427 0f5c 3AF5433F 		.word	1061418298
 2428 0f60 8516443F 		.word	1061426821
 2429 0f64 C737443F 		.word	1061435335
 2430 0f68 0159443F 		.word	1061443841
 2431 0f6c 337A443F 		.word	1061452339
 2432 0f70 5D9B443F 		.word	1061460829
 2433 0f74 7EBC443F 		.word	1061469310
 2434 0f78 97DD443F 		.word	1061477783
 2435 0f7c A8FE443F 		.word	1061486248
 2436 0f80 B01F453F 		.word	1061494704
 2437 0f84 B040453F 		.word	1061503152
 2438 0f88 A861453F 		.word	1061511592
 2439 0f8c 9882453F 		.word	1061520024
 2440 0f90 7FA3453F 		.word	1061528447
 2441 0f94 5EC4453F 		.word	1061536862
 2442 0f98 35E5453F 		.word	1061545269
 2443 0f9c 0406463F 		.word	1061553668
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 58


 2444 0fa0 CA26463F 		.word	1061562058
 2445 0fa4 8947463F 		.word	1061570441
 2446 0fa8 3F68463F 		.word	1061578815
 2447 0fac ED88463F 		.word	1061587181
 2448 0fb0 93A9463F 		.word	1061595539
 2449 0fb4 30CA463F 		.word	1061603888
 2450 0fb8 C6EA463F 		.word	1061612230
 2451 0fbc 530B473F 		.word	1061620563
 2452 0fc0 D82B473F 		.word	1061628888
 2453 0fc4 554C473F 		.word	1061637205
 2454 0fc8 CA6C473F 		.word	1061645514
 2455 0fcc 378D473F 		.word	1061653815
 2456 0fd0 9CAD473F 		.word	1061662108
 2457 0fd4 F8CD473F 		.word	1061670392
 2458 0fd8 4DEE473F 		.word	1061678669
 2459 0fdc 990E483F 		.word	1061686937
 2460 0fe0 DE2E483F 		.word	1061695198
 2461 0fe4 1A4F483F 		.word	1061703450
 2462 0fe8 4E6F483F 		.word	1061711694
 2463 0fec 7A8F483F 		.word	1061719930
 2464 0ff0 9FAF483F 		.word	1061728159
 2465 0ff4 BBCF483F 		.word	1061736379
 2466 0ff8 CFEF483F 		.word	1061744591
 2467 0ffc DB0F493F 		.word	1061752795
 2468              		.text
 2469              	.Letext0:
 2470              		.file 3 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 2471              		.file 4 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 2472              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 2473              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2474              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2475              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2476              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2477              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2478              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2479              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2480              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 2481              		.file 14 "Core/Inc/adc.h"
 2482              		.file 15 "Core/Inc/usart.h"
 2483              		.file 16 "Core/Inc/atan_lut.h"
 2484              		.file 17 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/math.h"
 2485              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2486              		.file 19 "Core/Inc/tim.h"
 2487              		.file 20 "Core/Inc/gpio.h"
 2488              		.file 21 "<built-in>"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 59


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:26     .text.decayAndMerge:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:32     .text.decayAndMerge:00000000 decayAndMerge
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:93     .text.decayAndMerge:0000003c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:98     .text.HallPositionOutput:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:104    .text.HallPositionOutput:00000000 HallPositionOutput
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:307    .text.HallPositionOutput:000000fc $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:312    .text.HallPositionOutput_10Pair:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:318    .text.HallPositionOutput_10Pair:00000000 HallPositionOutput_10Pair
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:345    .text.HallPositionOutput_10Pair:0000001e $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:381    .text.HallPositionOutput_10Pair:00000042 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:538    .text.HallPositionOutput_10Pair:00000110 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:544    .text.HallPositionOutput_10Pair_Inverted:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:550    .text.HallPositionOutput_10Pair_Inverted:00000000 HallPositionOutput_10Pair_Inverted
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:577    .text.HallPositionOutput_10Pair_Inverted:0000001e $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:613    .text.HallPositionOutput_10Pair_Inverted:00000042 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:770    .text.HallPositionOutput_10Pair_Inverted:00000110 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:776    .text.HallPositionOutput_20Pair:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:782    .text.HallPositionOutput_20Pair:00000000 HallPositionOutput_20Pair
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:809    .text.HallPositionOutput_20Pair:0000001e $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:827    .text.HallPositionOutput_20Pair:00000030 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:984    .text.HallPositionOutput_20Pair:000000fc $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:990    .text.__io_putchar:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:996    .text.__io_putchar:00000000 __io_putchar
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:1032   .text.__io_putchar:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:1037   .rodata.Error_Handler.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:1041   .text.Error_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:1047   .text.Error_Handler:00000000 Error_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:1089   .text.Error_Handler:00000014 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:1094   .text.SystemClock_Config:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:1100   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:1229   .text.main:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:1235   .text.main:00000000 main
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:1428   .text.main:000000d8 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:1443   .rodata.ATAN_LUT:00000000 ATAN_LUT
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s:1440   .rodata.ATAN_LUT:00000000 $d

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_dmul
__aeabi_i2f
__aeabi_fmul
__aeabi_f2d
__aeabi_dadd
__aeabi_d2iz
HAL_GPIO_WritePin
HAL_UART_Transmit
huart1
puts
HAL_Delay
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_fsub
__aeabi_fcmpeq
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccLwPDKL.s 			page 60


HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_ADC2_Init
MX_USART1_UART_Init
MX_TIM2_Init
atan2f
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
hadc1
hadc2
