ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.global	__aeabi_i2d
  19              		.global	__aeabi_dmul
  20              		.global	__aeabi_i2f
  21              		.global	__aeabi_fmul
  22              		.global	__aeabi_f2d
  23              		.global	__aeabi_dadd
  24              		.global	__aeabi_d2iz
  25              		.section	.text.decayAndMerge,"ax",%progbits
  26              		.align	1
  27              		.global	decayAndMerge
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  32              	decayAndMerge:
  33              	.LVL0:
  34              	.LFB71:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "tim.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 2


  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include "atan_lut.h"
  29:Core/Src/main.c **** #include "math.h"
  30:Core/Src/main.c **** #include "stm32f1xx_hal_gpio.h"
  31:Core/Src/main.c **** #include <stdio.h>
  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** #define SIN_PERIODS_PER_REV 1
  42:Core/Src/main.c **** #define HALL_PERIODS_PER_REV 20
  43:Core/Src/main.c **** #define OFFSET 0
  44:Core/Src/main.c **** #define LUT_SIZE 1024
  45:Core/Src/main.c **** #define ADC_MAX 3479.0
  46:Core/Src/main.c **** #define ADC_MIN 1850.0
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PD */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  51:Core/Src/main.c **** /* USER CODE BEGIN PM */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PM */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE BEGIN PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PV */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  62:Core/Src/main.c **** void SystemClock_Config(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** static float fast_atan(uint16_t ADC_C, uint16_t ADC_S);
  65:Core/Src/main.c **** void HallPositionOutput(int theta_deg);
  66:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****   * @brief  The application entry point.
  76:Core/Src/main.c ****   * @retval int
  77:Core/Src/main.c ****   */
  78:Core/Src/main.c **** int main(void)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 3


  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   uint16_t sin_adc = 0;
  84:Core/Src/main.c ****   uint16_t cos_adc = 0;
  85:Core/Src/main.c ****   float theta_rad;
  86:Core/Src/main.c ****   int theta_deg; // only for debugging
  87:Core/Src/main.c ****   int historical_value = 0; // Initialize historical value for decay and merge
  88:Core/Src/main.c ****   int merged_value = 0; // Initialize merged value
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   int sin;
  93:Core/Src/main.c ****   int cos; 
  94:Core/Src/main.c ****   int rad; 
  95:Core/Src/main.c ****   int deg;
  96:Core/Src/main.c ****   /* USER CODE END 1 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 101:Core/Src/main.c ****   HAL_Init();
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END Init */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Configure the system clock */
 108:Core/Src/main.c ****   SystemClock_Config();
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE END SysInit */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Initialize all configured peripherals */
 115:Core/Src/main.c ****   MX_GPIO_Init();
 116:Core/Src/main.c ****   MX_ADC1_Init();
 117:Core/Src/main.c ****   MX_ADC2_Init();
 118:Core/Src/main.c ****   MX_USART1_UART_Init();
 119:Core/Src/main.c ****   MX_TIM2_Init();
 120:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END 2 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Infinite loop */
 125:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 126:Core/Src/main.c ****   while (1) {
 127:Core/Src/main.c ****     HAL_ADC_Start(&hadc1); // Needs to be called every time
 128:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 129:Core/Src/main.c ****     cos_adc = decayAndMerge(cos_adc, HAL_ADC_GetValue(&hadc1)); // Decay and merge the new value wi
 130:Core/Src/main.c ****     
 131:Core/Src/main.c ****     HAL_ADC_Start(&hadc2); // Needs to be called every time
 132:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc2, HAL_MAX_DELAY);
 133:Core/Src/main.c ****     sin_adc = decayAndMerge(sin_adc, HAL_ADC_GetValue(&hadc2)); // Decay and merge the new value wi
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****     // cos_adc = 1000; 
 136:Core/Src/main.c ****     // sin_adc = 3000; // Test values for debugging
 137:Core/Src/main.c ****     
 138:Core/Src/main.c ****     // theta_rad = fast_atan(cos_adc, sin_adc);
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 4


 139:Core/Src/main.c ****     const float midpoint = (ADC_MAX + ADC_MIN) / 2.0f;
 140:Core/Src/main.c ****     float num = cos_adc - midpoint;
 141:Core/Src/main.c ****     float den = sin_adc - midpoint;
 142:Core/Src/main.c ****     if (den != 0){
 143:Core/Src/main.c ****       theta_rad = atan2f(num, den); // Use atan2 for better handling of quadrants
 144:Core/Src/main.c ****     }
 145:Core/Src/main.c ****     else {
 146:Core/Src/main.c ****       theta_rad = 0; // Handle the case where den is zero to avoid division by zero
 147:Core/Src/main.c ****     }
 148:Core/Src/main.c ****       
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****    
 151:Core/Src/main.c ****     theta_deg = (int)(180.0 / M_PI * theta_rad)+180;
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     // if (cos_adc > 180) {
 154:Core/Src/main.c ****     //   HAL_GPIO_WritePin(DEBUG_LED_GPIO_Port, DEBUG_LED_Pin, GPIO_PIN_SET);
 155:Core/Src/main.c ****     // } else {
 156:Core/Src/main.c ****     //   HAL_GPIO_WritePin(DEBUG_LED_GPIO_Port, DEBUG_LED_Pin, GPIO_PIN_RESET);
 157:Core/Src/main.c ****     // }
 158:Core/Src/main.c ****     /* USER CODE END WHILE */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 161:Core/Src/main.c ****     rad = (int)(theta_rad * 1000); // Convert to milliradians
 162:Core/Src/main.c ****     printf("ADC_C: %d ADC_S: %d theta_deg: %d rad: %d (millirad)\r\n", cos_adc, sin_adc, theta_deg,
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****     HallPositionOutput_10Pair(theta_deg); // Call the function to output the Hall position
 165:Core/Src/main.c ****     HAL_Delay(10); 
 166:Core/Src/main.c ****     
 167:Core/Src/main.c ****   
 168:Core/Src/main.c ****   } 
 169:Core/Src/main.c ****   /* USER CODE END 3 */
 170:Core/Src/main.c **** }
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** /**
 173:Core/Src/main.c ****   * @brief System Clock Configuration
 174:Core/Src/main.c ****   * @retval None
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c **** void SystemClock_Config(void)
 177:Core/Src/main.c **** {
 178:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 179:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 180:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 183:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 184:Core/Src/main.c ****   */
 185:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 187:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 191:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c **** 
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 5


 196:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 199:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 200:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 201:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 210:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 211:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     Error_Handler();
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c **** }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** static float fast_atan(uint16_t ADC_C, uint16_t ADC_S) {
 220:Core/Src/main.c ****   const float midpoint = (ADC_MAX + ADC_MIN) / 2.0f;
 221:Core/Src/main.c ****   float num = ADC_C - midpoint;
 222:Core/Src/main.c ****   float den = ADC_S - midpoint;
 223:Core/Src/main.c ****   if (den == 0)
 224:Core/Src/main.c ****     return (num >= 0) ? 0 : M_PI;
 225:Core/Src/main.c ****   float r = fabs(num / den);
 226:Core/Src/main.c ****   int index = (int)(r * 1023.0f);
 227:Core/Src/main.c ****   float theta = ATAN_LUT[index];
 228:Core/Src/main.c ****   float next_theta = ATAN_LUT[index + 1];
 229:Core/Src/main.c ****   theta += (r - (index / 1023.0f)) * (next_theta - theta);
 230:Core/Src/main.c ****   if (num > den)
 231:Core/Src/main.c ****     theta = M_PI_2 - theta;
 232:Core/Src/main.c ****   if (num < 0 && den > 0)
 233:Core/Src/main.c ****     return M_PI + theta;
 234:Core/Src/main.c ****   if (den < 0)
 235:Core/Src/main.c ****     return M_PI - theta;
 236:Core/Src/main.c ****   return theta;
 237:Core/Src/main.c **** }
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** int decayAndMerge(int historical_value, int new_value){
  35              		.loc 1 239 55 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		.loc 1 239 55 is_stmt 0 view .LVU1
  40 0000 D0B5     		push	{r4, r6, r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 16
  43              		.cfi_offset 4, -16
  44              		.cfi_offset 6, -12
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 0C46     		mov	r4, r1
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 6


 240:Core/Src/main.c ****   if(historical_value == 0){
  48              		.loc 1 240 3 is_stmt 1 view .LVU2
  49              		.loc 1 240 5 is_stmt 0 view .LVU3
  50 0004 00B9     		cbnz	r0, .L2
 241:Core/Src/main.c ****     historical_value = new_value; // Initialize historical value if it's zero
  51              		.loc 1 241 22 view .LVU4
  52 0006 0846     		mov	r0, r1
  53              	.LVL1:
  54              	.L2:
 242:Core/Src/main.c ****   }
 243:Core/Src/main.c ****   float decay_rate = 0.9; 
  55              		.loc 1 243 3 is_stmt 1 view .LVU5
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   return (int)(historical_value * (1.0-decay_rate) + new_value * decay_rate);
  56              		.loc 1 245 3 view .LVU6
  57              		.loc 1 245 33 is_stmt 0 view .LVU7
  58 0008 FFF7FEFF 		bl	__aeabi_i2d
  59              	.LVL2:
  60              		.loc 1 245 33 view .LVU8
  61 000c 0CA3     		adr	r3, .L5
  62 000e D3E90023 		ldrd	r2, [r3]
  63 0012 FFF7FEFF 		bl	__aeabi_dmul
  64              	.LVL3:
  65 0016 0646     		mov	r6, r0
  66 0018 0F46     		mov	r7, r1
  67              		.loc 1 245 64 view .LVU9
  68 001a 2046     		mov	r0, r4
  69 001c FFF7FEFF 		bl	__aeabi_i2f
  70              	.LVL4:
  71 0020 0949     		ldr	r1, .L5+8
  72 0022 FFF7FEFF 		bl	__aeabi_fmul
  73              	.LVL5:
  74 0026 FFF7FEFF 		bl	__aeabi_f2d
  75              	.LVL6:
  76 002a 0246     		mov	r2, r0
  77 002c 0B46     		mov	r3, r1
  78              		.loc 1 245 52 view .LVU10
  79 002e 3046     		mov	r0, r6
  80 0030 3946     		mov	r1, r7
  81 0032 FFF7FEFF 		bl	__aeabi_dadd
  82              	.LVL7:
  83              		.loc 1 245 10 view .LVU11
  84 0036 FFF7FEFF 		bl	__aeabi_d2iz
  85              	.LVL8:
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   // // Decay the historical value by a factor of 0.9
 248:Core/Src/main.c ****   // historical_value = (int)(historical_value * 0.9 + new_value * 0.1);
 249:Core/Src/main.c ****   // // Merge the new value with the decayed historical value
 250:Core/Src/main.c ****   // int merged_value = (int)(historical_value * 0.5 + new_value * 0.5);
 251:Core/Src/main.c ****   // return merged_value;
 252:Core/Src/main.c **** }
  86              		.loc 1 252 1 view .LVU12
  87 003a D0BD     		pop	{r4, r6, r7, pc}
  88              	.LVL9:
  89              	.L6:
  90              		.loc 1 252 1 view .LVU13
  91 003c AFF30080 		.align	3
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 7


  92              	.L5:
  93 0040 00000000 		.word	0
  94 0044 9A99B93F 		.word	1069128090
  95 0048 6666663F 		.word	1063675494
  96              		.cfi_endproc
  97              	.LFE71:
  99              		.section	.rodata.HallPositionOutput.str1.4,"aMS",%progbits,1
 100              		.align	2
 101              	.LC0:
 102 0000 48414C4C 		.ascii	"HALL A = 1, HALL B = 0, HALL C = 1\015\000"
 102      2041203D 
 102      20312C20 
 102      48414C4C 
 102      2042203D 
 103              		.align	2
 104              	.LC1:
 105 0024 48414C4C 		.ascii	"HALL A = 1, HALL B = 0, HALL C = 0\015\000"
 105      2041203D 
 105      20312C20 
 105      48414C4C 
 105      2042203D 
 106              		.align	2
 107              	.LC2:
 108 0048 48414C4C 		.ascii	"HALL A = 1, HALL B = 1, HALL C = 0\015\000"
 108      2041203D 
 108      20312C20 
 108      48414C4C 
 108      2042203D 
 109              		.align	2
 110              	.LC3:
 111 006c 48414C4C 		.ascii	"HALL A = 0, HALL B = 1, HALL C = 0\015\000"
 111      2041203D 
 111      20302C20 
 111      48414C4C 
 111      2042203D 
 112              		.align	2
 113              	.LC4:
 114 0090 48414C4C 		.ascii	"HALL A = 0, HALL B = 1, HALL C = 1\015\000"
 114      2041203D 
 114      20302C20 
 114      48414C4C 
 114      2042203D 
 115              		.align	2
 116              	.LC5:
 117 00b4 48414C4C 		.ascii	"HALL A = 0, HALL B = 0, HALL C = 1\015\000"
 117      2041203D 
 117      20302C20 
 117      48414C4C 
 117      2042203D 
 118              		.align	2
 119              	.LC6:
 120 00d8 496E7661 		.ascii	"Invalid angle: %d\015\012\000"
 120      6C696420 
 120      616E676C 
 120      653A2025 
 120      640D0A00 
 121              		.section	.text.HallPositionOutput,"ax",%progbits
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 8


 122              		.align	1
 123              		.global	HallPositionOutput
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 128              	HallPositionOutput:
 129              	.LVL10:
 130              	.LFB72:
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** /**
 255:Core/Src/main.c ****  * @brief  This function is used to output the Hall position. For a single pole pair? 
 256:Core/Src/main.c ****  * @param  theta_deg: The angle in degrees.
 257:Core/Src/main.c ****  * @retval None
 258:Core/Src/main.c ****  * @author Alex
 259:Core/Src/main.c ****  */
 260:Core/Src/main.c **** void HallPositionOutput(theta_deg){
 131              		.loc 1 260 35 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		.loc 1 260 35 is_stmt 0 view .LVU15
 136 0000 10B5     		push	{r4, lr}
 137              	.LCFI1:
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 4, -8
 140              		.cfi_offset 14, -4
 261:Core/Src/main.c ****   if(theta_deg >= 0 && theta_deg < 60) {
 141              		.loc 1 261 3 is_stmt 1 view .LVU16
 142              		.loc 1 261 5 is_stmt 0 view .LVU17
 143 0002 3B28     		cmp	r0, #59
 144 0004 27D9     		bls	.L16
 262:Core/Src/main.c ****     //HALL A = 1, HALL_B = 0, HALL_C = 1
 263:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 264:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 265:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****     printf("HALL A = 1, HALL B = 0, HALL C = 1\r\n");
 268:Core/Src/main.c ****   } else if (theta_deg >= 60 && theta_deg < 120){
 145              		.loc 1 268 10 is_stmt 1 view .LVU18
 146              		.loc 1 268 30 is_stmt 0 view .LVU19
 147 0006 A0F13C03 		sub	r3, r0, #60
 148              		.loc 1 268 13 view .LVU20
 149 000a 3B2B     		cmp	r3, #59
 150 000c 37D9     		bls	.L17
 269:Core/Src/main.c ****     //HALL A = 1, HALL_B = 0, HALL_C = 0
 270:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 271:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 272:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****     printf("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 275:Core/Src/main.c ****   } else if (theta_deg >= 120 && theta_deg < 180){
 151              		.loc 1 275 10 is_stmt 1 view .LVU21
 152              		.loc 1 275 31 is_stmt 0 view .LVU22
 153 000e A0F17803 		sub	r3, r0, #120
 154              		.loc 1 275 13 view .LVU23
 155 0012 3B2B     		cmp	r3, #59
 156 0014 47D9     		bls	.L18
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 9


 276:Core/Src/main.c ****     //HALL A = 1, HALL_B = 1, HALL_C = 0
 277:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 278:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 279:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****     printf("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 282:Core/Src/main.c ****   } else if (theta_deg >= 180 && theta_deg < 240){
 157              		.loc 1 282 10 is_stmt 1 view .LVU24
 158              		.loc 1 282 31 is_stmt 0 view .LVU25
 159 0016 A0F1B403 		sub	r3, r0, #180
 160              		.loc 1 282 13 view .LVU26
 161 001a 3B2B     		cmp	r3, #59
 162 001c 57D9     		bls	.L19
 283:Core/Src/main.c ****     //HALL A = 0, HALL_B = 1, HALL_C = 0
 284:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 285:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 286:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****     printf("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 289:Core/Src/main.c ****   } else if (theta_deg >= 240 && theta_deg < 300){
 163              		.loc 1 289 10 is_stmt 1 view .LVU27
 164              		.loc 1 289 31 is_stmt 0 view .LVU28
 165 001e A0F1F003 		sub	r3, r0, #240
 166              		.loc 1 289 13 view .LVU29
 167 0022 3B2B     		cmp	r3, #59
 168 0024 67D9     		bls	.L20
 290:Core/Src/main.c ****     //HALL A = 0, HALL_B = 1, HALL_C = 1
 291:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 292:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 293:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****     printf("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 296:Core/Src/main.c ****   } else if (theta_deg >= 300 && theta_deg < 360){
 169              		.loc 1 296 10 is_stmt 1 view .LVU30
 170              		.loc 1 296 31 is_stmt 0 view .LVU31
 171 0026 A0F59673 		sub	r3, r0, #300
 172              		.loc 1 296 13 view .LVU32
 173 002a 3B2B     		cmp	r3, #59
 174 002c 77D8     		bhi	.L14
 297:Core/Src/main.c ****     //HALL A = 0, HALL_B = 0, HALL_C = 1
 298:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 175              		.loc 1 298 5 is_stmt 1 view .LVU33
 176 002e 3E4C     		ldr	r4, .L21
 177 0030 0022     		movs	r2, #0
 178 0032 0821     		movs	r1, #8
 179 0034 2046     		mov	r0, r4
 180              	.LVL11:
 181              		.loc 1 298 5 is_stmt 0 view .LVU34
 182 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 183              	.LVL12:
 299:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 184              		.loc 1 299 5 is_stmt 1 view .LVU35
 185 003a 0022     		movs	r2, #0
 186 003c 2021     		movs	r1, #32
 187 003e 2046     		mov	r0, r4
 188 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 189              	.LVL13:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 10


 300:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 190              		.loc 1 300 5 view .LVU36
 191 0044 0122     		movs	r2, #1
 192 0046 8021     		movs	r1, #128
 193 0048 2046     		mov	r0, r4
 194 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 195              	.LVL14:
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****     printf("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 196              		.loc 1 302 5 view .LVU37
 197 004e 3748     		ldr	r0, .L21+4
 198 0050 FFF7FEFF 		bl	puts
 199              	.LVL15:
 200 0054 12E0     		b	.L7
 201              	.LVL16:
 202              	.L16:
 263:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 203              		.loc 1 263 5 view .LVU38
 204 0056 344C     		ldr	r4, .L21
 205 0058 0122     		movs	r2, #1
 206 005a 0821     		movs	r1, #8
 207 005c 2046     		mov	r0, r4
 208              	.LVL17:
 263:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 209              		.loc 1 263 5 is_stmt 0 view .LVU39
 210 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 211              	.LVL18:
 264:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 212              		.loc 1 264 5 is_stmt 1 view .LVU40
 213 0062 0022     		movs	r2, #0
 214 0064 2021     		movs	r1, #32
 215 0066 2046     		mov	r0, r4
 216 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 217              	.LVL19:
 265:Core/Src/main.c **** 
 218              		.loc 1 265 5 view .LVU41
 219 006c 0122     		movs	r2, #1
 220 006e 8021     		movs	r1, #128
 221 0070 2046     		mov	r0, r4
 222 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 223              	.LVL20:
 267:Core/Src/main.c ****   } else if (theta_deg >= 60 && theta_deg < 120){
 224              		.loc 1 267 5 view .LVU42
 225 0076 2E48     		ldr	r0, .L21+8
 226 0078 FFF7FEFF 		bl	puts
 227              	.LVL21:
 228              	.L7:
 303:Core/Src/main.c ****   } else {
 304:Core/Src/main.c ****     // Invalid angle
 305:Core/Src/main.c ****     printf("Invalid angle: %d\r\n", theta_deg);
 306:Core/Src/main.c ****   }
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** }
 229              		.loc 1 308 1 is_stmt 0 view .LVU43
 230 007c 10BD     		pop	{r4, pc}
 231              	.LVL22:
 232              	.L17:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 11


 270:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 233              		.loc 1 270 5 is_stmt 1 view .LVU44
 234 007e 2A4C     		ldr	r4, .L21
 235 0080 0122     		movs	r2, #1
 236 0082 0821     		movs	r1, #8
 237 0084 2046     		mov	r0, r4
 238              	.LVL23:
 270:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 239              		.loc 1 270 5 is_stmt 0 view .LVU45
 240 0086 FFF7FEFF 		bl	HAL_GPIO_WritePin
 241              	.LVL24:
 271:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 242              		.loc 1 271 5 is_stmt 1 view .LVU46
 243 008a 0022     		movs	r2, #0
 244 008c 2021     		movs	r1, #32
 245 008e 2046     		mov	r0, r4
 246 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 247              	.LVL25:
 272:Core/Src/main.c **** 
 248              		.loc 1 272 5 view .LVU47
 249 0094 0022     		movs	r2, #0
 250 0096 8021     		movs	r1, #128
 251 0098 2046     		mov	r0, r4
 252 009a FFF7FEFF 		bl	HAL_GPIO_WritePin
 253              	.LVL26:
 274:Core/Src/main.c ****   } else if (theta_deg >= 120 && theta_deg < 180){
 254              		.loc 1 274 5 view .LVU48
 255 009e 2548     		ldr	r0, .L21+12
 256 00a0 FFF7FEFF 		bl	puts
 257              	.LVL27:
 258 00a4 EAE7     		b	.L7
 259              	.LVL28:
 260              	.L18:
 277:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 261              		.loc 1 277 5 view .LVU49
 262 00a6 204C     		ldr	r4, .L21
 263 00a8 0122     		movs	r2, #1
 264 00aa 0821     		movs	r1, #8
 265 00ac 2046     		mov	r0, r4
 266              	.LVL29:
 277:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 267              		.loc 1 277 5 is_stmt 0 view .LVU50
 268 00ae FFF7FEFF 		bl	HAL_GPIO_WritePin
 269              	.LVL30:
 278:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 270              		.loc 1 278 5 is_stmt 1 view .LVU51
 271 00b2 0122     		movs	r2, #1
 272 00b4 2021     		movs	r1, #32
 273 00b6 2046     		mov	r0, r4
 274 00b8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 275              	.LVL31:
 279:Core/Src/main.c **** 
 276              		.loc 1 279 5 view .LVU52
 277 00bc 0022     		movs	r2, #0
 278 00be 8021     		movs	r1, #128
 279 00c0 2046     		mov	r0, r4
 280 00c2 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 12


 281              	.LVL32:
 281:Core/Src/main.c ****   } else if (theta_deg >= 180 && theta_deg < 240){
 282              		.loc 1 281 5 view .LVU53
 283 00c6 1C48     		ldr	r0, .L21+16
 284 00c8 FFF7FEFF 		bl	puts
 285              	.LVL33:
 286 00cc D6E7     		b	.L7
 287              	.LVL34:
 288              	.L19:
 284:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 289              		.loc 1 284 5 view .LVU54
 290 00ce 164C     		ldr	r4, .L21
 291 00d0 0022     		movs	r2, #0
 292 00d2 0821     		movs	r1, #8
 293 00d4 2046     		mov	r0, r4
 294              	.LVL35:
 284:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 295              		.loc 1 284 5 is_stmt 0 view .LVU55
 296 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 297              	.LVL36:
 285:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 298              		.loc 1 285 5 is_stmt 1 view .LVU56
 299 00da 0122     		movs	r2, #1
 300 00dc 2021     		movs	r1, #32
 301 00de 2046     		mov	r0, r4
 302 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 303              	.LVL37:
 286:Core/Src/main.c **** 
 304              		.loc 1 286 5 view .LVU57
 305 00e4 0022     		movs	r2, #0
 306 00e6 8021     		movs	r1, #128
 307 00e8 2046     		mov	r0, r4
 308 00ea FFF7FEFF 		bl	HAL_GPIO_WritePin
 309              	.LVL38:
 288:Core/Src/main.c ****   } else if (theta_deg >= 240 && theta_deg < 300){
 310              		.loc 1 288 5 view .LVU58
 311 00ee 1348     		ldr	r0, .L21+20
 312 00f0 FFF7FEFF 		bl	puts
 313              	.LVL39:
 314 00f4 C2E7     		b	.L7
 315              	.LVL40:
 316              	.L20:
 291:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 317              		.loc 1 291 5 view .LVU59
 318 00f6 0C4C     		ldr	r4, .L21
 319 00f8 0022     		movs	r2, #0
 320 00fa 0821     		movs	r1, #8
 321 00fc 2046     		mov	r0, r4
 322              	.LVL41:
 291:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 323              		.loc 1 291 5 is_stmt 0 view .LVU60
 324 00fe FFF7FEFF 		bl	HAL_GPIO_WritePin
 325              	.LVL42:
 292:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 326              		.loc 1 292 5 is_stmt 1 view .LVU61
 327 0102 0122     		movs	r2, #1
 328 0104 2021     		movs	r1, #32
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 13


 329 0106 2046     		mov	r0, r4
 330 0108 FFF7FEFF 		bl	HAL_GPIO_WritePin
 331              	.LVL43:
 293:Core/Src/main.c **** 
 332              		.loc 1 293 5 view .LVU62
 333 010c 0122     		movs	r2, #1
 334 010e 8021     		movs	r1, #128
 335 0110 2046     		mov	r0, r4
 336 0112 FFF7FEFF 		bl	HAL_GPIO_WritePin
 337              	.LVL44:
 295:Core/Src/main.c ****   } else if (theta_deg >= 300 && theta_deg < 360){
 338              		.loc 1 295 5 view .LVU63
 339 0116 0A48     		ldr	r0, .L21+24
 340 0118 FFF7FEFF 		bl	puts
 341              	.LVL45:
 342 011c AEE7     		b	.L7
 343              	.LVL46:
 344              	.L14:
 305:Core/Src/main.c ****   }
 345              		.loc 1 305 5 view .LVU64
 346 011e 0146     		mov	r1, r0
 347 0120 0848     		ldr	r0, .L21+28
 348              	.LVL47:
 305:Core/Src/main.c ****   }
 349              		.loc 1 305 5 is_stmt 0 view .LVU65
 350 0122 FFF7FEFF 		bl	printf
 351              	.LVL48:
 352              		.loc 1 308 1 view .LVU66
 353 0126 A9E7     		b	.L7
 354              	.L22:
 355              		.align	2
 356              	.L21:
 357 0128 000C0140 		.word	1073810432
 358 012c B4000000 		.word	.LC5
 359 0130 00000000 		.word	.LC0
 360 0134 24000000 		.word	.LC1
 361 0138 48000000 		.word	.LC2
 362 013c 6C000000 		.word	.LC3
 363 0140 90000000 		.word	.LC4
 364 0144 D8000000 		.word	.LC6
 365              		.cfi_endproc
 366              	.LFE72:
 368              		.section	.text.HallPositionOutput_10Pair,"ax",%progbits
 369              		.align	1
 370              		.global	HallPositionOutput_10Pair
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 375              	HallPositionOutput_10Pair:
 376              	.LVL49:
 377              	.LFB73:
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** /**
 311:Core/Src/main.c ****  * @brief  This function is used to output the Hall position for a 10-pair motor. 
 312:Core/Src/main.c ****  * @param  theta_deg: The angle in degrees.
 313:Core/Src/main.c ****  * @retval None
 314:Core/Src/main.c ****  * @author Alex
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 14


 315:Core/Src/main.c ****  */
 316:Core/Src/main.c **** void HallPositionOutput_10Pair(theta_deg){
 378              		.loc 1 316 42 is_stmt 1 view -0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              		.loc 1 316 42 is_stmt 0 view .LVU68
 383 0000 10B5     		push	{r4, lr}
 384              	.LCFI2:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 4, -8
 387              		.cfi_offset 14, -4
 317:Core/Src/main.c ****   // Normalize the angle to a single electrical cycle (0-36 degrees)
 318:Core/Src/main.c ****   int theta_elec = theta_deg % 36;
 388              		.loc 1 318 3 is_stmt 1 view .LVU69
 389              		.loc 1 318 7 is_stmt 0 view .LVU70
 390 0002 4F4A     		ldr	r2, .L34
 391 0004 82FB0032 		smull	r3, r2, r2, r0
 392 0008 C317     		asrs	r3, r0, #31
 393 000a C3EBE203 		rsb	r3, r3, r2, asr #3
 394 000e 03EBC303 		add	r3, r3, r3, lsl #3
 395 0012 A0EB8303 		sub	r3, r0, r3, lsl #2
 396              	.LVL50:
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   if (theta_elec >= 0 && theta_elec < 6) {
 397              		.loc 1 320 3 is_stmt 1 view .LVU71
 398 0016 232B     		cmp	r3, #35
 399 0018 00F28C80 		bhi	.L24
 400 001c DFE803F0 		tbb	[pc, r3]
 401              	.L26:
 402 0020 12       		.byte	(.L31-.L26)/2
 403 0021 12       		.byte	(.L31-.L26)/2
 404 0022 12       		.byte	(.L31-.L26)/2
 405 0023 12       		.byte	(.L31-.L26)/2
 406 0024 12       		.byte	(.L31-.L26)/2
 407 0025 12       		.byte	(.L31-.L26)/2
 408 0026 26       		.byte	(.L30-.L26)/2
 409 0027 26       		.byte	(.L30-.L26)/2
 410 0028 26       		.byte	(.L30-.L26)/2
 411 0029 26       		.byte	(.L30-.L26)/2
 412 002a 26       		.byte	(.L30-.L26)/2
 413 002b 26       		.byte	(.L30-.L26)/2
 414 002c 3A       		.byte	(.L29-.L26)/2
 415 002d 3A       		.byte	(.L29-.L26)/2
 416 002e 3A       		.byte	(.L29-.L26)/2
 417 002f 3A       		.byte	(.L29-.L26)/2
 418 0030 3A       		.byte	(.L29-.L26)/2
 419 0031 3A       		.byte	(.L29-.L26)/2
 420 0032 4E       		.byte	(.L28-.L26)/2
 421 0033 4E       		.byte	(.L28-.L26)/2
 422 0034 4E       		.byte	(.L28-.L26)/2
 423 0035 4E       		.byte	(.L28-.L26)/2
 424 0036 4E       		.byte	(.L28-.L26)/2
 425 0037 4E       		.byte	(.L28-.L26)/2
 426 0038 62       		.byte	(.L27-.L26)/2
 427 0039 62       		.byte	(.L27-.L26)/2
 428 003a 62       		.byte	(.L27-.L26)/2
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 15


 429 003b 62       		.byte	(.L27-.L26)/2
 430 003c 62       		.byte	(.L27-.L26)/2
 431 003d 62       		.byte	(.L27-.L26)/2
 432 003e 76       		.byte	(.L25-.L26)/2
 433 003f 76       		.byte	(.L25-.L26)/2
 434 0040 76       		.byte	(.L25-.L26)/2
 435 0041 76       		.byte	(.L25-.L26)/2
 436 0042 76       		.byte	(.L25-.L26)/2
 437 0043 76       		.byte	(.L25-.L26)/2
 438              		.p2align 1
 439              	.L31:
 321:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 440              		.loc 1 321 5 view .LVU72
 441 0044 3F4C     		ldr	r4, .L34+4
 442 0046 0122     		movs	r2, #1
 443 0048 0821     		movs	r1, #8
 444 004a 2046     		mov	r0, r4
 445              	.LVL51:
 446              		.loc 1 321 5 is_stmt 0 view .LVU73
 447 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 448              	.LVL52:
 322:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 449              		.loc 1 322 5 is_stmt 1 view .LVU74
 450 0050 0022     		movs	r2, #0
 451 0052 2021     		movs	r1, #32
 452 0054 2046     		mov	r0, r4
 453 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 454              	.LVL53:
 323:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 455              		.loc 1 323 5 view .LVU75
 456 005a 0122     		movs	r2, #1
 457 005c 8021     		movs	r1, #128
 458 005e 2046     		mov	r0, r4
 459 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 460              	.LVL54:
 324:Core/Src/main.c ****     printf("HALL A = 1, HALL B = 0, HALL C = 1\r\n");
 461              		.loc 1 324 5 view .LVU76
 462 0064 3848     		ldr	r0, .L34+8
 463 0066 FFF7FEFF 		bl	puts
 464              	.LVL55:
 465              	.L23:
 325:Core/Src/main.c ****   } else if (theta_elec >= 6 && theta_elec < 12) {
 326:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 327:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 328:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 329:Core/Src/main.c ****     printf("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 330:Core/Src/main.c ****   } else if (theta_elec >= 12 && theta_elec < 18) {
 331:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 332:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 333:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 334:Core/Src/main.c ****     printf("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 335:Core/Src/main.c ****   } else if (theta_elec >= 18 && theta_elec < 24) {
 336:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 337:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 338:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 339:Core/Src/main.c ****     printf("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 340:Core/Src/main.c ****   } else if (theta_elec >= 24 && theta_elec < 30) {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 16


 341:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 342:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 343:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 344:Core/Src/main.c ****     printf("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 345:Core/Src/main.c ****   } else if (theta_elec >= 30 && theta_elec < 36) {
 346:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 347:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 348:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 349:Core/Src/main.c ****     printf("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 350:Core/Src/main.c ****   } else {
 351:Core/Src/main.c ****     printf("Invalid angle: %d\r\n", theta_deg);
 352:Core/Src/main.c ****   }
 353:Core/Src/main.c **** 
 354:Core/Src/main.c **** }
 466              		.loc 1 354 1 is_stmt 0 view .LVU77
 467 006a 10BD     		pop	{r4, pc}
 468              	.LVL56:
 469              	.L30:
 326:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 470              		.loc 1 326 5 is_stmt 1 view .LVU78
 471 006c 354C     		ldr	r4, .L34+4
 472 006e 0122     		movs	r2, #1
 473 0070 0821     		movs	r1, #8
 474 0072 2046     		mov	r0, r4
 475              	.LVL57:
 326:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 476              		.loc 1 326 5 is_stmt 0 view .LVU79
 477 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 478              	.LVL58:
 327:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 479              		.loc 1 327 5 is_stmt 1 view .LVU80
 480 0078 0022     		movs	r2, #0
 481 007a 2021     		movs	r1, #32
 482 007c 2046     		mov	r0, r4
 483 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 484              	.LVL59:
 328:Core/Src/main.c ****     printf("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 485              		.loc 1 328 5 view .LVU81
 486 0082 0022     		movs	r2, #0
 487 0084 8021     		movs	r1, #128
 488 0086 2046     		mov	r0, r4
 489 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 490              	.LVL60:
 329:Core/Src/main.c ****   } else if (theta_elec >= 12 && theta_elec < 18) {
 491              		.loc 1 329 5 view .LVU82
 492 008c 2F48     		ldr	r0, .L34+12
 493 008e FFF7FEFF 		bl	puts
 494              	.LVL61:
 495 0092 EAE7     		b	.L23
 496              	.LVL62:
 497              	.L29:
 331:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 498              		.loc 1 331 5 view .LVU83
 499 0094 2B4C     		ldr	r4, .L34+4
 500 0096 0122     		movs	r2, #1
 501 0098 0821     		movs	r1, #8
 502 009a 2046     		mov	r0, r4
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 17


 503              	.LVL63:
 331:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 504              		.loc 1 331 5 is_stmt 0 view .LVU84
 505 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 506              	.LVL64:
 332:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 507              		.loc 1 332 5 is_stmt 1 view .LVU85
 508 00a0 0122     		movs	r2, #1
 509 00a2 2021     		movs	r1, #32
 510 00a4 2046     		mov	r0, r4
 511 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 512              	.LVL65:
 333:Core/Src/main.c ****     printf("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 513              		.loc 1 333 5 view .LVU86
 514 00aa 0022     		movs	r2, #0
 515 00ac 8021     		movs	r1, #128
 516 00ae 2046     		mov	r0, r4
 517 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 518              	.LVL66:
 334:Core/Src/main.c ****   } else if (theta_elec >= 18 && theta_elec < 24) {
 519              		.loc 1 334 5 view .LVU87
 520 00b4 2648     		ldr	r0, .L34+16
 521 00b6 FFF7FEFF 		bl	puts
 522              	.LVL67:
 523 00ba D6E7     		b	.L23
 524              	.LVL68:
 525              	.L28:
 336:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 526              		.loc 1 336 5 view .LVU88
 527 00bc 214C     		ldr	r4, .L34+4
 528 00be 0022     		movs	r2, #0
 529 00c0 0821     		movs	r1, #8
 530 00c2 2046     		mov	r0, r4
 531              	.LVL69:
 336:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 532              		.loc 1 336 5 is_stmt 0 view .LVU89
 533 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 534              	.LVL70:
 337:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 535              		.loc 1 337 5 is_stmt 1 view .LVU90
 536 00c8 0122     		movs	r2, #1
 537 00ca 2021     		movs	r1, #32
 538 00cc 2046     		mov	r0, r4
 539 00ce FFF7FEFF 		bl	HAL_GPIO_WritePin
 540              	.LVL71:
 338:Core/Src/main.c ****     printf("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 541              		.loc 1 338 5 view .LVU91
 542 00d2 0022     		movs	r2, #0
 543 00d4 8021     		movs	r1, #128
 544 00d6 2046     		mov	r0, r4
 545 00d8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 546              	.LVL72:
 339:Core/Src/main.c ****   } else if (theta_elec >= 24 && theta_elec < 30) {
 547              		.loc 1 339 5 view .LVU92
 548 00dc 1D48     		ldr	r0, .L34+20
 549 00de FFF7FEFF 		bl	puts
 550              	.LVL73:
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 18


 551 00e2 C2E7     		b	.L23
 552              	.LVL74:
 553              	.L27:
 341:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 554              		.loc 1 341 5 view .LVU93
 555 00e4 174C     		ldr	r4, .L34+4
 556 00e6 0022     		movs	r2, #0
 557 00e8 0821     		movs	r1, #8
 558 00ea 2046     		mov	r0, r4
 559              	.LVL75:
 341:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 560              		.loc 1 341 5 is_stmt 0 view .LVU94
 561 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 562              	.LVL76:
 342:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 563              		.loc 1 342 5 is_stmt 1 view .LVU95
 564 00f0 0122     		movs	r2, #1
 565 00f2 2021     		movs	r1, #32
 566 00f4 2046     		mov	r0, r4
 567 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 568              	.LVL77:
 343:Core/Src/main.c ****     printf("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 569              		.loc 1 343 5 view .LVU96
 570 00fa 0122     		movs	r2, #1
 571 00fc 8021     		movs	r1, #128
 572 00fe 2046     		mov	r0, r4
 573 0100 FFF7FEFF 		bl	HAL_GPIO_WritePin
 574              	.LVL78:
 344:Core/Src/main.c ****   } else if (theta_elec >= 30 && theta_elec < 36) {
 575              		.loc 1 344 5 view .LVU97
 576 0104 1448     		ldr	r0, .L34+24
 577 0106 FFF7FEFF 		bl	puts
 578              	.LVL79:
 579 010a AEE7     		b	.L23
 580              	.LVL80:
 581              	.L25:
 346:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 582              		.loc 1 346 5 view .LVU98
 583 010c 0D4C     		ldr	r4, .L34+4
 584 010e 0022     		movs	r2, #0
 585 0110 0821     		movs	r1, #8
 586 0112 2046     		mov	r0, r4
 587              	.LVL81:
 346:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 588              		.loc 1 346 5 is_stmt 0 view .LVU99
 589 0114 FFF7FEFF 		bl	HAL_GPIO_WritePin
 590              	.LVL82:
 347:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 591              		.loc 1 347 5 is_stmt 1 view .LVU100
 592 0118 0022     		movs	r2, #0
 593 011a 2021     		movs	r1, #32
 594 011c 2046     		mov	r0, r4
 595 011e FFF7FEFF 		bl	HAL_GPIO_WritePin
 596              	.LVL83:
 348:Core/Src/main.c ****     printf("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 597              		.loc 1 348 5 view .LVU101
 598 0122 0122     		movs	r2, #1
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 19


 599 0124 8021     		movs	r1, #128
 600 0126 2046     		mov	r0, r4
 601 0128 FFF7FEFF 		bl	HAL_GPIO_WritePin
 602              	.LVL84:
 349:Core/Src/main.c ****   } else {
 603              		.loc 1 349 5 view .LVU102
 604 012c 0B48     		ldr	r0, .L34+28
 605 012e FFF7FEFF 		bl	puts
 606              	.LVL85:
 607 0132 9AE7     		b	.L23
 608              	.LVL86:
 609              	.L24:
 351:Core/Src/main.c ****   }
 610              		.loc 1 351 5 view .LVU103
 611 0134 0146     		mov	r1, r0
 612 0136 0A48     		ldr	r0, .L34+32
 613              	.LVL87:
 351:Core/Src/main.c ****   }
 614              		.loc 1 351 5 is_stmt 0 view .LVU104
 615 0138 FFF7FEFF 		bl	printf
 616              	.LVL88:
 617              		.loc 1 354 1 view .LVU105
 618 013c 95E7     		b	.L23
 619              	.L35:
 620 013e 00BF     		.align	2
 621              	.L34:
 622 0140 398EE338 		.word	954437177
 623 0144 000C0140 		.word	1073810432
 624 0148 00000000 		.word	.LC0
 625 014c 24000000 		.word	.LC1
 626 0150 48000000 		.word	.LC2
 627 0154 6C000000 		.word	.LC3
 628 0158 90000000 		.word	.LC4
 629 015c B4000000 		.word	.LC5
 630 0160 D8000000 		.word	.LC6
 631              		.cfi_endproc
 632              	.LFE73:
 634              		.section	.text.HallPositionOutput_20Pair,"ax",%progbits
 635              		.align	1
 636              		.global	HallPositionOutput_20Pair
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 641              	HallPositionOutput_20Pair:
 642              	.LVL89:
 643              	.LFB74:
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** /**
 357:Core/Src/main.c ****  * @brief  This function is used to output the Hall position for a 20-pair motor. 
 358:Core/Src/main.c ****  * @param  theta_deg: The angle in degrees.
 359:Core/Src/main.c ****  * @retval None
 360:Core/Src/main.c ****  * @author Alex
 361:Core/Src/main.c ****  */
 362:Core/Src/main.c **** void HallPositionOutput_20Pair(theta_deg){
 644              		.loc 1 362 42 is_stmt 1 view -0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 20


 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648              		.loc 1 362 42 is_stmt 0 view .LVU107
 649 0000 10B5     		push	{r4, lr}
 650              	.LCFI3:
 651              		.cfi_def_cfa_offset 8
 652              		.cfi_offset 4, -8
 653              		.cfi_offset 14, -4
 363:Core/Src/main.c ****   // Normalize the angle to a single electrical cycle (0-18 degrees)
 364:Core/Src/main.c ****   int theta_elec = theta_deg % 18;
 654              		.loc 1 364 3 is_stmt 1 view .LVU108
 655              		.loc 1 364 7 is_stmt 0 view .LVU109
 656 0002 4A4A     		ldr	r2, .L47
 657 0004 82FB0032 		smull	r3, r2, r2, r0
 658 0008 C317     		asrs	r3, r0, #31
 659 000a C3EBA203 		rsb	r3, r3, r2, asr #2
 660 000e 03EBC303 		add	r3, r3, r3, lsl #3
 661 0012 A0EB4303 		sub	r3, r0, r3, lsl #1
 662              	.LVL90:
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   if (theta_elec >= 0 && theta_elec < 3) {
 663              		.loc 1 366 3 is_stmt 1 view .LVU110
 664 0016 112B     		cmp	r3, #17
 665 0018 00F28380 		bhi	.L37
 666 001c DFE803F0 		tbb	[pc, r3]
 667              	.L39:
 668 0020 09       		.byte	(.L44-.L39)/2
 669 0021 09       		.byte	(.L44-.L39)/2
 670 0022 09       		.byte	(.L44-.L39)/2
 671 0023 1D       		.byte	(.L43-.L39)/2
 672 0024 1D       		.byte	(.L43-.L39)/2
 673 0025 1D       		.byte	(.L43-.L39)/2
 674 0026 31       		.byte	(.L42-.L39)/2
 675 0027 31       		.byte	(.L42-.L39)/2
 676 0028 31       		.byte	(.L42-.L39)/2
 677 0029 45       		.byte	(.L41-.L39)/2
 678 002a 45       		.byte	(.L41-.L39)/2
 679 002b 45       		.byte	(.L41-.L39)/2
 680 002c 59       		.byte	(.L40-.L39)/2
 681 002d 59       		.byte	(.L40-.L39)/2
 682 002e 59       		.byte	(.L40-.L39)/2
 683 002f 6D       		.byte	(.L38-.L39)/2
 684 0030 6D       		.byte	(.L38-.L39)/2
 685 0031 6D       		.byte	(.L38-.L39)/2
 686              		.p2align 1
 687              	.L44:
 367:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 688              		.loc 1 367 5 view .LVU111
 689 0032 3F4C     		ldr	r4, .L47+4
 690 0034 0122     		movs	r2, #1
 691 0036 0821     		movs	r1, #8
 692 0038 2046     		mov	r0, r4
 693              	.LVL91:
 694              		.loc 1 367 5 is_stmt 0 view .LVU112
 695 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 696              	.LVL92:
 368:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 697              		.loc 1 368 5 is_stmt 1 view .LVU113
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 21


 698 003e 0022     		movs	r2, #0
 699 0040 2021     		movs	r1, #32
 700 0042 2046     		mov	r0, r4
 701 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 702              	.LVL93:
 369:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 703              		.loc 1 369 5 view .LVU114
 704 0048 0122     		movs	r2, #1
 705 004a 8021     		movs	r1, #128
 706 004c 2046     		mov	r0, r4
 707 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 708              	.LVL94:
 370:Core/Src/main.c ****     printf("HALL A = 1, HALL B = 0, HALL C = 1\r\n");
 709              		.loc 1 370 5 view .LVU115
 710 0052 3848     		ldr	r0, .L47+8
 711 0054 FFF7FEFF 		bl	puts
 712              	.LVL95:
 713              	.L36:
 371:Core/Src/main.c ****   } else if (theta_elec >= 3 && theta_elec < 6) {
 372:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 373:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 374:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 375:Core/Src/main.c ****     printf("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 376:Core/Src/main.c ****   } else if (theta_elec >= 6 && theta_elec < 9) {
 377:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 378:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 379:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 380:Core/Src/main.c ****     printf("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 381:Core/Src/main.c ****   } else if (theta_elec >= 9 && theta_elec < 12) {
 382:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 383:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 384:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 385:Core/Src/main.c ****     printf("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 386:Core/Src/main.c ****   } else if (theta_elec >= 12 && theta_elec < 15) {
 387:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 388:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 389:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 390:Core/Src/main.c ****     printf("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 391:Core/Src/main.c ****   } else if (theta_elec >= 15 && theta_elec < 18) {
 392:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 393:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 394:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 395:Core/Src/main.c ****     printf("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 396:Core/Src/main.c ****   } else {
 397:Core/Src/main.c ****     printf("Invalid angle: %d\r\n", theta_deg);
 398:Core/Src/main.c ****   }
 399:Core/Src/main.c **** 
 400:Core/Src/main.c **** }
 714              		.loc 1 400 1 is_stmt 0 view .LVU116
 715 0058 10BD     		pop	{r4, pc}
 716              	.LVL96:
 717              	.L43:
 372:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 718              		.loc 1 372 5 is_stmt 1 view .LVU117
 719 005a 354C     		ldr	r4, .L47+4
 720 005c 0122     		movs	r2, #1
 721 005e 0821     		movs	r1, #8
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 22


 722 0060 2046     		mov	r0, r4
 723              	.LVL97:
 372:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 724              		.loc 1 372 5 is_stmt 0 view .LVU118
 725 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 726              	.LVL98:
 373:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 727              		.loc 1 373 5 is_stmt 1 view .LVU119
 728 0066 0022     		movs	r2, #0
 729 0068 2021     		movs	r1, #32
 730 006a 2046     		mov	r0, r4
 731 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 732              	.LVL99:
 374:Core/Src/main.c ****     printf("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 733              		.loc 1 374 5 view .LVU120
 734 0070 0022     		movs	r2, #0
 735 0072 8021     		movs	r1, #128
 736 0074 2046     		mov	r0, r4
 737 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 738              	.LVL100:
 375:Core/Src/main.c ****   } else if (theta_elec >= 6 && theta_elec < 9) {
 739              		.loc 1 375 5 view .LVU121
 740 007a 2F48     		ldr	r0, .L47+12
 741 007c FFF7FEFF 		bl	puts
 742              	.LVL101:
 743 0080 EAE7     		b	.L36
 744              	.LVL102:
 745              	.L42:
 377:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 746              		.loc 1 377 5 view .LVU122
 747 0082 2B4C     		ldr	r4, .L47+4
 748 0084 0122     		movs	r2, #1
 749 0086 0821     		movs	r1, #8
 750 0088 2046     		mov	r0, r4
 751              	.LVL103:
 377:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 752              		.loc 1 377 5 is_stmt 0 view .LVU123
 753 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 754              	.LVL104:
 378:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 755              		.loc 1 378 5 is_stmt 1 view .LVU124
 756 008e 0122     		movs	r2, #1
 757 0090 2021     		movs	r1, #32
 758 0092 2046     		mov	r0, r4
 759 0094 FFF7FEFF 		bl	HAL_GPIO_WritePin
 760              	.LVL105:
 379:Core/Src/main.c ****     printf("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 761              		.loc 1 379 5 view .LVU125
 762 0098 0022     		movs	r2, #0
 763 009a 8021     		movs	r1, #128
 764 009c 2046     		mov	r0, r4
 765 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 766              	.LVL106:
 380:Core/Src/main.c ****   } else if (theta_elec >= 9 && theta_elec < 12) {
 767              		.loc 1 380 5 view .LVU126
 768 00a2 2648     		ldr	r0, .L47+16
 769 00a4 FFF7FEFF 		bl	puts
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 23


 770              	.LVL107:
 771 00a8 D6E7     		b	.L36
 772              	.LVL108:
 773              	.L41:
 382:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 774              		.loc 1 382 5 view .LVU127
 775 00aa 214C     		ldr	r4, .L47+4
 776 00ac 0022     		movs	r2, #0
 777 00ae 0821     		movs	r1, #8
 778 00b0 2046     		mov	r0, r4
 779              	.LVL109:
 382:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 780              		.loc 1 382 5 is_stmt 0 view .LVU128
 781 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 782              	.LVL110:
 383:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 783              		.loc 1 383 5 is_stmt 1 view .LVU129
 784 00b6 0122     		movs	r2, #1
 785 00b8 2021     		movs	r1, #32
 786 00ba 2046     		mov	r0, r4
 787 00bc FFF7FEFF 		bl	HAL_GPIO_WritePin
 788              	.LVL111:
 384:Core/Src/main.c ****     printf("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 789              		.loc 1 384 5 view .LVU130
 790 00c0 0022     		movs	r2, #0
 791 00c2 8021     		movs	r1, #128
 792 00c4 2046     		mov	r0, r4
 793 00c6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 794              	.LVL112:
 385:Core/Src/main.c ****   } else if (theta_elec >= 12 && theta_elec < 15) {
 795              		.loc 1 385 5 view .LVU131
 796 00ca 1D48     		ldr	r0, .L47+20
 797 00cc FFF7FEFF 		bl	puts
 798              	.LVL113:
 799 00d0 C2E7     		b	.L36
 800              	.LVL114:
 801              	.L40:
 387:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 802              		.loc 1 387 5 view .LVU132
 803 00d2 174C     		ldr	r4, .L47+4
 804 00d4 0022     		movs	r2, #0
 805 00d6 0821     		movs	r1, #8
 806 00d8 2046     		mov	r0, r4
 807              	.LVL115:
 387:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 808              		.loc 1 387 5 is_stmt 0 view .LVU133
 809 00da FFF7FEFF 		bl	HAL_GPIO_WritePin
 810              	.LVL116:
 388:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 811              		.loc 1 388 5 is_stmt 1 view .LVU134
 812 00de 0122     		movs	r2, #1
 813 00e0 2021     		movs	r1, #32
 814 00e2 2046     		mov	r0, r4
 815 00e4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 816              	.LVL117:
 389:Core/Src/main.c ****     printf("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 817              		.loc 1 389 5 view .LVU135
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 24


 818 00e8 0122     		movs	r2, #1
 819 00ea 8021     		movs	r1, #128
 820 00ec 2046     		mov	r0, r4
 821 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 822              	.LVL118:
 390:Core/Src/main.c ****   } else if (theta_elec >= 15 && theta_elec < 18) {
 823              		.loc 1 390 5 view .LVU136
 824 00f2 1448     		ldr	r0, .L47+24
 825 00f4 FFF7FEFF 		bl	puts
 826              	.LVL119:
 827 00f8 AEE7     		b	.L36
 828              	.LVL120:
 829              	.L38:
 392:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 830              		.loc 1 392 5 view .LVU137
 831 00fa 0D4C     		ldr	r4, .L47+4
 832 00fc 0022     		movs	r2, #0
 833 00fe 0821     		movs	r1, #8
 834 0100 2046     		mov	r0, r4
 835              	.LVL121:
 392:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 836              		.loc 1 392 5 is_stmt 0 view .LVU138
 837 0102 FFF7FEFF 		bl	HAL_GPIO_WritePin
 838              	.LVL122:
 393:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 839              		.loc 1 393 5 is_stmt 1 view .LVU139
 840 0106 0022     		movs	r2, #0
 841 0108 2021     		movs	r1, #32
 842 010a 2046     		mov	r0, r4
 843 010c FFF7FEFF 		bl	HAL_GPIO_WritePin
 844              	.LVL123:
 394:Core/Src/main.c ****     printf("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 845              		.loc 1 394 5 view .LVU140
 846 0110 0122     		movs	r2, #1
 847 0112 8021     		movs	r1, #128
 848 0114 2046     		mov	r0, r4
 849 0116 FFF7FEFF 		bl	HAL_GPIO_WritePin
 850              	.LVL124:
 395:Core/Src/main.c ****   } else {
 851              		.loc 1 395 5 view .LVU141
 852 011a 0B48     		ldr	r0, .L47+28
 853 011c FFF7FEFF 		bl	puts
 854              	.LVL125:
 855 0120 9AE7     		b	.L36
 856              	.LVL126:
 857              	.L37:
 397:Core/Src/main.c ****   }
 858              		.loc 1 397 5 view .LVU142
 859 0122 0146     		mov	r1, r0
 860 0124 0948     		ldr	r0, .L47+32
 861              	.LVL127:
 397:Core/Src/main.c ****   }
 862              		.loc 1 397 5 is_stmt 0 view .LVU143
 863 0126 FFF7FEFF 		bl	printf
 864              	.LVL128:
 865              		.loc 1 400 1 view .LVU144
 866 012a 95E7     		b	.L36
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 25


 867              	.L48:
 868              		.align	2
 869              	.L47:
 870 012c 398EE338 		.word	954437177
 871 0130 000C0140 		.word	1073810432
 872 0134 00000000 		.word	.LC0
 873 0138 24000000 		.word	.LC1
 874 013c 48000000 		.word	.LC2
 875 0140 6C000000 		.word	.LC3
 876 0144 90000000 		.word	.LC4
 877 0148 B4000000 		.word	.LC5
 878 014c D8000000 		.word	.LC6
 879              		.cfi_endproc
 880              	.LFE74:
 882              		.section	.text.__io_putchar,"ax",%progbits
 883              		.align	1
 884              		.global	__io_putchar
 885              		.syntax unified
 886              		.thumb
 887              		.thumb_func
 889              	__io_putchar:
 890              	.LVL129:
 891              	.LFB75:
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** /**
 403:Core/Src/main.c ****  * @brief  Retargets the C library printf function to the USART.
 404:Core/Src/main.c ****  * @retval None
 405:Core/Src/main.c ****  */
 406:Core/Src/main.c **** PUTCHAR_PROTOTYPE {
 892              		.loc 1 406 19 is_stmt 1 view -0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 8
 895              		@ frame_needed = 0, uses_anonymous_args = 0
 896              		.loc 1 406 19 is_stmt 0 view .LVU146
 897 0000 00B5     		push	{lr}
 898              	.LCFI4:
 899              		.cfi_def_cfa_offset 4
 900              		.cfi_offset 14, -4
 901 0002 83B0     		sub	sp, sp, #12
 902              	.LCFI5:
 903              		.cfi_def_cfa_offset 16
 904 0004 0190     		str	r0, [sp, #4]
 407:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xFFFF);
 905              		.loc 1 407 3 is_stmt 1 view .LVU147
 906 0006 4FF6FF73 		movw	r3, #65535
 907 000a 0122     		movs	r2, #1
 908 000c 01A9     		add	r1, sp, #4
 909 000e 0348     		ldr	r0, .L51
 910              	.LVL130:
 911              		.loc 1 407 3 is_stmt 0 view .LVU148
 912 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 913              	.LVL131:
 408:Core/Src/main.c ****   return ch;
 914              		.loc 1 408 3 is_stmt 1 view .LVU149
 409:Core/Src/main.c **** }
 915              		.loc 1 409 1 is_stmt 0 view .LVU150
 916 0014 0198     		ldr	r0, [sp, #4]
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 26


 917 0016 03B0     		add	sp, sp, #12
 918              	.LCFI6:
 919              		.cfi_def_cfa_offset 4
 920              		@ sp needed
 921 0018 5DF804FB 		ldr	pc, [sp], #4
 922              	.L52:
 923              		.align	2
 924              	.L51:
 925 001c 00000000 		.word	huart1
 926              		.cfi_endproc
 927              	.LFE75:
 929              		.section	.rodata.Error_Handler.str1.4,"aMS",%progbits,1
 930              		.align	2
 931              	.LC7:
 932 0000 4572726F 		.ascii	"Error\015\000"
 932      720D00
 933              		.section	.text.Error_Handler,"ax",%progbits
 934              		.align	1
 935              		.global	Error_Handler
 936              		.syntax unified
 937              		.thumb
 938              		.thumb_func
 940              	Error_Handler:
 941              	.LFB76:
 410:Core/Src/main.c **** /* USER CODE END 4 */
 411:Core/Src/main.c **** 
 412:Core/Src/main.c **** /**
 413:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 414:Core/Src/main.c ****   * @retval None
 415:Core/Src/main.c ****   */
 416:Core/Src/main.c **** void Error_Handler(void)
 417:Core/Src/main.c **** {
 942              		.loc 1 417 1 is_stmt 1 view -0
 943              		.cfi_startproc
 944              		@ Volatile: function does not return.
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 947 0000 08B5     		push	{r3, lr}
 948              	.LCFI7:
 949              		.cfi_def_cfa_offset 8
 950              		.cfi_offset 3, -8
 951              		.cfi_offset 14, -4
 418:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 419:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 420:Core/Src/main.c ****   __disable_irq();
 952              		.loc 1 420 3 view .LVU152
 953              	.LBB4:
 954              	.LBI4:
 955              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 27


   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 28


  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 29


 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 956              		.loc 2 140 27 view .LVU153
 957              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 958              		.loc 2 142 3 view .LVU154
 959              		.syntax unified
 960              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 961 0002 72B6     		cpsid i
 962              	@ 0 "" 2
 963              		.thumb
 964              		.syntax unified
 965              	.L54:
 966              	.LBE5:
 967              	.LBE4:
 421:Core/Src/main.c ****   while (1) {
 968              		.loc 1 421 3 view .LVU155
 422:Core/Src/main.c ****     printf("Error\r\n");
 969              		.loc 1 422 5 view .LVU156
 970 0004 0348     		ldr	r0, .L56
 971 0006 FFF7FEFF 		bl	puts
 972              	.LVL132:
 423:Core/Src/main.c ****     HAL_Delay(100);
 973              		.loc 1 423 5 discriminator 1 view .LVU157
 974 000a 6420     		movs	r0, #100
 975 000c FFF7FEFF 		bl	HAL_Delay
 976              	.LVL133:
 421:Core/Src/main.c ****   while (1) {
 977              		.loc 1 421 9 view .LVU158
 978 0010 F8E7     		b	.L54
 979              	.L57:
 980 0012 00BF     		.align	2
 981              	.L56:
 982 0014 00000000 		.word	.LC7
 983              		.cfi_endproc
 984              	.LFE76:
 986              		.section	.text.SystemClock_Config,"ax",%progbits
 987              		.align	1
 988              		.global	SystemClock_Config
 989              		.syntax unified
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 30


 990              		.thumb
 991              		.thumb_func
 993              	SystemClock_Config:
 994              	.LFB69:
 177:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 995              		.loc 1 177 1 view -0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 80
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 999 0000 00B5     		push	{lr}
 1000              	.LCFI8:
 1001              		.cfi_def_cfa_offset 4
 1002              		.cfi_offset 14, -4
 1003 0002 95B0     		sub	sp, sp, #84
 1004              	.LCFI9:
 1005              		.cfi_def_cfa_offset 88
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1006              		.loc 1 178 3 view .LVU160
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1007              		.loc 1 178 22 is_stmt 0 view .LVU161
 1008 0004 2822     		movs	r2, #40
 1009 0006 0021     		movs	r1, #0
 1010 0008 0DEB0200 		add	r0, sp, r2
 1011 000c FFF7FEFF 		bl	memset
 1012              	.LVL134:
 179:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1013              		.loc 1 179 3 is_stmt 1 view .LVU162
 179:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1014              		.loc 1 179 22 is_stmt 0 view .LVU163
 1015 0010 0023     		movs	r3, #0
 1016 0012 0593     		str	r3, [sp, #20]
 1017 0014 0693     		str	r3, [sp, #24]
 1018 0016 0793     		str	r3, [sp, #28]
 1019 0018 0893     		str	r3, [sp, #32]
 1020 001a 0993     		str	r3, [sp, #36]
 180:Core/Src/main.c **** 
 1021              		.loc 1 180 3 is_stmt 1 view .LVU164
 180:Core/Src/main.c **** 
 1022              		.loc 1 180 28 is_stmt 0 view .LVU165
 1023 001c 0193     		str	r3, [sp, #4]
 1024 001e 0293     		str	r3, [sp, #8]
 1025 0020 0393     		str	r3, [sp, #12]
 1026 0022 0493     		str	r3, [sp, #16]
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1027              		.loc 1 185 3 is_stmt 1 view .LVU166
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1028              		.loc 1 185 36 is_stmt 0 view .LVU167
 1029 0024 0223     		movs	r3, #2
 1030 0026 0A93     		str	r3, [sp, #40]
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1031              		.loc 1 186 3 is_stmt 1 view .LVU168
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1032              		.loc 1 186 30 is_stmt 0 view .LVU169
 1033 0028 0122     		movs	r2, #1
 1034 002a 0E92     		str	r2, [sp, #56]
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1035              		.loc 1 187 3 is_stmt 1 view .LVU170
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 31


 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1036              		.loc 1 187 41 is_stmt 0 view .LVU171
 1037 002c 1022     		movs	r2, #16
 1038 002e 0F92     		str	r2, [sp, #60]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 1039              		.loc 1 188 3 is_stmt 1 view .LVU172
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 1040              		.loc 1 188 34 is_stmt 0 view .LVU173
 1041 0030 1193     		str	r3, [sp, #68]
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 1042              		.loc 1 189 3 is_stmt 1 view .LVU174
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1043              		.loc 1 190 3 view .LVU175
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1044              		.loc 1 190 32 is_stmt 0 view .LVU176
 1045 0032 4FF46013 		mov	r3, #3670016
 1046 0036 1393     		str	r3, [sp, #76]
 191:Core/Src/main.c ****   {
 1047              		.loc 1 191 3 is_stmt 1 view .LVU177
 191:Core/Src/main.c ****   {
 1048              		.loc 1 191 7 is_stmt 0 view .LVU178
 1049 0038 0AA8     		add	r0, sp, #40
 1050 003a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1051              	.LVL135:
 191:Core/Src/main.c ****   {
 1052              		.loc 1 191 6 discriminator 1 view .LVU179
 1053 003e C8B9     		cbnz	r0, .L63
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1054              		.loc 1 198 3 is_stmt 1 view .LVU180
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1055              		.loc 1 198 31 is_stmt 0 view .LVU181
 1056 0040 0F23     		movs	r3, #15
 1057 0042 0593     		str	r3, [sp, #20]
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1058              		.loc 1 200 3 is_stmt 1 view .LVU182
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1059              		.loc 1 200 34 is_stmt 0 view .LVU183
 1060 0044 0221     		movs	r1, #2
 1061 0046 0691     		str	r1, [sp, #24]
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1062              		.loc 1 201 3 is_stmt 1 view .LVU184
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1063              		.loc 1 201 35 is_stmt 0 view .LVU185
 1064 0048 0023     		movs	r3, #0
 1065 004a 0793     		str	r3, [sp, #28]
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1066              		.loc 1 202 3 is_stmt 1 view .LVU186
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1067              		.loc 1 202 36 is_stmt 0 view .LVU187
 1068 004c 4FF48062 		mov	r2, #1024
 1069 0050 0892     		str	r2, [sp, #32]
 203:Core/Src/main.c **** 
 1070              		.loc 1 203 3 is_stmt 1 view .LVU188
 203:Core/Src/main.c **** 
 1071              		.loc 1 203 36 is_stmt 0 view .LVU189
 1072 0052 0993     		str	r3, [sp, #36]
 205:Core/Src/main.c ****   {
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 32


 1073              		.loc 1 205 3 is_stmt 1 view .LVU190
 205:Core/Src/main.c ****   {
 1074              		.loc 1 205 7 is_stmt 0 view .LVU191
 1075 0054 05A8     		add	r0, sp, #20
 1076 0056 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1077              	.LVL136:
 205:Core/Src/main.c ****   {
 1078              		.loc 1 205 6 discriminator 1 view .LVU192
 1079 005a 68B9     		cbnz	r0, .L64
 209:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 1080              		.loc 1 209 3 is_stmt 1 view .LVU193
 209:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 1081              		.loc 1 209 38 is_stmt 0 view .LVU194
 1082 005c 0223     		movs	r3, #2
 1083 005e 0193     		str	r3, [sp, #4]
 210:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1084              		.loc 1 210 3 is_stmt 1 view .LVU195
 210:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1085              		.loc 1 210 35 is_stmt 0 view .LVU196
 1086 0060 4FF40043 		mov	r3, #32768
 1087 0064 0393     		str	r3, [sp, #12]
 211:Core/Src/main.c ****   {
 1088              		.loc 1 211 3 is_stmt 1 view .LVU197
 211:Core/Src/main.c ****   {
 1089              		.loc 1 211 7 is_stmt 0 view .LVU198
 1090 0066 01A8     		add	r0, sp, #4
 1091 0068 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1092              	.LVL137:
 211:Core/Src/main.c ****   {
 1093              		.loc 1 211 6 discriminator 1 view .LVU199
 1094 006c 30B9     		cbnz	r0, .L65
 215:Core/Src/main.c **** 
 1095              		.loc 1 215 1 view .LVU200
 1096 006e 15B0     		add	sp, sp, #84
 1097              	.LCFI10:
 1098              		.cfi_remember_state
 1099              		.cfi_def_cfa_offset 4
 1100              		@ sp needed
 1101 0070 5DF804FB 		ldr	pc, [sp], #4
 1102              	.L63:
 1103              	.LCFI11:
 1104              		.cfi_restore_state
 193:Core/Src/main.c ****   }
 1105              		.loc 1 193 5 is_stmt 1 view .LVU201
 1106 0074 FFF7FEFF 		bl	Error_Handler
 1107              	.LVL138:
 1108              	.L64:
 207:Core/Src/main.c ****   }
 1109              		.loc 1 207 5 view .LVU202
 1110 0078 FFF7FEFF 		bl	Error_Handler
 1111              	.LVL139:
 1112              	.L65:
 213:Core/Src/main.c ****   }
 1113              		.loc 1 213 5 view .LVU203
 1114 007c FFF7FEFF 		bl	Error_Handler
 1115              	.LVL140:
 1116              		.cfi_endproc
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 33


 1117              	.LFE69:
 1119              		.global	__aeabi_fsub
 1120              		.global	__aeabi_fcmpeq
 1121              		.global	__aeabi_f2iz
 1122              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1123              		.align	2
 1124              	.LC8:
 1125 0000 4144435F 		.ascii	"ADC_C: %d ADC_S: %d theta_deg: %d rad: %d (millirad"
 1125      433A2025 
 1125      64204144 
 1125      435F533A 
 1125      20256420 
 1126 0033 290D0A00 		.ascii	")\015\012\000"
 1127              		.section	.text.main,"ax",%progbits
 1128              		.align	1
 1129              		.global	main
 1130              		.syntax unified
 1131              		.thumb
 1132              		.thumb_func
 1134              	main:
 1135              	.LFB68:
  79:Core/Src/main.c **** 
 1136              		.loc 1 79 1 view -0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1141              	.LCFI12:
 1142              		.cfi_def_cfa_offset 28
 1143              		.cfi_offset 4, -28
 1144              		.cfi_offset 5, -24
 1145              		.cfi_offset 6, -20
 1146              		.cfi_offset 7, -16
 1147              		.cfi_offset 8, -12
 1148              		.cfi_offset 9, -8
 1149              		.cfi_offset 14, -4
 1150 0004 83B0     		sub	sp, sp, #12
 1151              	.LCFI13:
 1152              		.cfi_def_cfa_offset 40
  83:Core/Src/main.c ****   uint16_t cos_adc = 0;
 1153              		.loc 1 83 3 view .LVU205
 1154              	.LVL141:
  84:Core/Src/main.c ****   float theta_rad;
 1155              		.loc 1 84 3 view .LVU206
  85:Core/Src/main.c ****   int theta_deg; // only for debugging
 1156              		.loc 1 85 3 view .LVU207
  86:Core/Src/main.c ****   int historical_value = 0; // Initialize historical value for decay and merge
 1157              		.loc 1 86 3 view .LVU208
  87:Core/Src/main.c ****   int merged_value = 0; // Initialize merged value
 1158              		.loc 1 87 3 view .LVU209
  88:Core/Src/main.c **** 
 1159              		.loc 1 88 3 view .LVU210
  92:Core/Src/main.c ****   int cos; 
 1160              		.loc 1 92 3 view .LVU211
  93:Core/Src/main.c ****   int rad; 
 1161              		.loc 1 93 3 view .LVU212
  94:Core/Src/main.c ****   int deg;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 34


 1162              		.loc 1 94 3 view .LVU213
  95:Core/Src/main.c ****   /* USER CODE END 1 */
 1163              		.loc 1 95 3 view .LVU214
 101:Core/Src/main.c **** 
 1164              		.loc 1 101 3 view .LVU215
 1165 0006 FFF7FEFF 		bl	HAL_Init
 1166              	.LVL142:
 108:Core/Src/main.c **** 
 1167              		.loc 1 108 3 view .LVU216
 1168 000a FFF7FEFF 		bl	SystemClock_Config
 1169              	.LVL143:
 115:Core/Src/main.c ****   MX_ADC1_Init();
 1170              		.loc 1 115 3 view .LVU217
 1171 000e FFF7FEFF 		bl	MX_GPIO_Init
 1172              	.LVL144:
 116:Core/Src/main.c ****   MX_ADC2_Init();
 1173              		.loc 1 116 3 view .LVU218
 1174 0012 FFF7FEFF 		bl	MX_ADC1_Init
 1175              	.LVL145:
 117:Core/Src/main.c ****   MX_USART1_UART_Init();
 1176              		.loc 1 117 3 view .LVU219
 1177 0016 FFF7FEFF 		bl	MX_ADC2_Init
 1178              	.LVL146:
 118:Core/Src/main.c ****   MX_TIM2_Init();
 1179              		.loc 1 118 3 view .LVU220
 1180 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 1181              	.LVL147:
 119:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1182              		.loc 1 119 3 view .LVU221
 1183 001e FFF7FEFF 		bl	MX_TIM2_Init
 1184              	.LVL148:
  84:Core/Src/main.c ****   float theta_rad;
 1185              		.loc 1 84 12 is_stmt 0 view .LVU222
 1186 0022 0024     		movs	r4, #0
  83:Core/Src/main.c ****   uint16_t cos_adc = 0;
 1187              		.loc 1 83 12 view .LVU223
 1188 0024 2546     		mov	r5, r4
 1189 0026 23E0     		b	.L69
 1190              	.LVL149:
 1191              	.L74:
 1192              	.LBB6:
 143:Core/Src/main.c ****     }
 1193              		.loc 1 143 7 is_stmt 1 view .LVU224
 143:Core/Src/main.c ****     }
 1194              		.loc 1 143 19 is_stmt 0 view .LVU225
 1195 0028 3946     		mov	r1, r7
 1196 002a 3046     		mov	r0, r6
 1197 002c FFF7FEFF 		bl	atan2f
 1198              	.LVL150:
 1199 0030 0746     		mov	r7, r0
 1200              	.LVL151:
 1201              	.L67:
 151:Core/Src/main.c **** 
 1202              		.loc 1 151 5 is_stmt 1 view .LVU226
 151:Core/Src/main.c **** 
 1203              		.loc 1 151 36 is_stmt 0 view .LVU227
 1204 0032 3846     		mov	r0, r7
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 35


 1205 0034 FFF7FEFF 		bl	__aeabi_f2d
 1206              	.LVL152:
 1207 0038 2BA3     		adr	r3, .L75
 1208 003a D3E90023 		ldrd	r2, [r3]
 1209 003e FFF7FEFF 		bl	__aeabi_dmul
 1210              	.LVL153:
 151:Core/Src/main.c **** 
 1211              		.loc 1 151 17 view .LVU228
 1212 0042 FFF7FEFF 		bl	__aeabi_d2iz
 1213              	.LVL154:
 151:Core/Src/main.c **** 
 1214              		.loc 1 151 15 view .LVU229
 1215 0046 00F1B406 		add	r6, r0, #180
 1216              	.LVL155:
 161:Core/Src/main.c ****     printf("ADC_C: %d ADC_S: %d theta_deg: %d rad: %d (millirad)\r\n", cos_adc, sin_adc, theta_deg,
 1217              		.loc 1 161 5 is_stmt 1 view .LVU230
 161:Core/Src/main.c ****     printf("ADC_C: %d ADC_S: %d theta_deg: %d rad: %d (millirad)\r\n", cos_adc, sin_adc, theta_deg,
 1218              		.loc 1 161 27 is_stmt 0 view .LVU231
 1219 004a 2949     		ldr	r1, .L75+8
 1220 004c 3846     		mov	r0, r7
 1221 004e FFF7FEFF 		bl	__aeabi_fmul
 1222              	.LVL156:
 161:Core/Src/main.c ****     printf("ADC_C: %d ADC_S: %d theta_deg: %d rad: %d (millirad)\r\n", cos_adc, sin_adc, theta_deg,
 1223              		.loc 1 161 9 view .LVU232
 1224 0052 FFF7FEFF 		bl	__aeabi_f2iz
 1225              	.LVL157:
 162:Core/Src/main.c **** 
 1226              		.loc 1 162 5 is_stmt 1 view .LVU233
 1227 0056 0090     		str	r0, [sp]
 1228 0058 3346     		mov	r3, r6
 1229 005a 4A46     		mov	r2, r9
 1230 005c 4146     		mov	r1, r8
 1231 005e 2548     		ldr	r0, .L75+12
 1232              	.LVL158:
 162:Core/Src/main.c **** 
 1233              		.loc 1 162 5 is_stmt 0 view .LVU234
 1234 0060 FFF7FEFF 		bl	printf
 1235              	.LVL159:
 164:Core/Src/main.c ****     HAL_Delay(10); 
 1236              		.loc 1 164 5 is_stmt 1 view .LVU235
 1237 0064 3046     		mov	r0, r6
 1238 0066 FFF7FEFF 		bl	HallPositionOutput_10Pair
 1239              	.LVL160:
 165:Core/Src/main.c ****     
 1240              		.loc 1 165 5 view .LVU236
 1241 006a 0A20     		movs	r0, #10
 1242 006c FFF7FEFF 		bl	HAL_Delay
 1243              	.LVL161:
 1244              	.LBE6:
 126:Core/Src/main.c ****     HAL_ADC_Start(&hadc1); // Needs to be called every time
 1245              		.loc 1 126 9 view .LVU237
 1246              	.L69:
 126:Core/Src/main.c ****     HAL_ADC_Start(&hadc1); // Needs to be called every time
 1247              		.loc 1 126 3 view .LVU238
 1248              	.LBB7:
 127:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 1249              		.loc 1 127 5 view .LVU239
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 36


 1250 0070 214E     		ldr	r6, .L75+16
 1251 0072 3046     		mov	r0, r6
 1252 0074 FFF7FEFF 		bl	HAL_ADC_Start
 1253              	.LVL162:
 128:Core/Src/main.c ****     cos_adc = decayAndMerge(cos_adc, HAL_ADC_GetValue(&hadc1)); // Decay and merge the new value wi
 1254              		.loc 1 128 5 view .LVU240
 1255 0078 4FF0FF31 		mov	r1, #-1
 1256 007c 3046     		mov	r0, r6
 1257 007e FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1258              	.LVL163:
 129:Core/Src/main.c ****     
 1259              		.loc 1 129 5 view .LVU241
 129:Core/Src/main.c ****     
 1260              		.loc 1 129 15 is_stmt 0 view .LVU242
 1261 0082 3046     		mov	r0, r6
 1262 0084 FFF7FEFF 		bl	HAL_ADC_GetValue
 1263              	.LVL164:
 1264 0088 0146     		mov	r1, r0
 129:Core/Src/main.c ****     
 1265              		.loc 1 129 15 discriminator 1 view .LVU243
 1266 008a 2046     		mov	r0, r4
 1267 008c FFF7FEFF 		bl	decayAndMerge
 1268              	.LVL165:
 129:Core/Src/main.c ****     
 1269              		.loc 1 129 13 discriminator 2 view .LVU244
 1270 0090 84B2     		uxth	r4, r0
 1271              	.LVL166:
 131:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc2, HAL_MAX_DELAY);
 1272              		.loc 1 131 5 is_stmt 1 view .LVU245
 1273 0092 1A4E     		ldr	r6, .L75+20
 1274 0094 3046     		mov	r0, r6
 1275 0096 FFF7FEFF 		bl	HAL_ADC_Start
 1276              	.LVL167:
 132:Core/Src/main.c ****     sin_adc = decayAndMerge(sin_adc, HAL_ADC_GetValue(&hadc2)); // Decay and merge the new value wi
 1277              		.loc 1 132 5 view .LVU246
 1278 009a 4FF0FF31 		mov	r1, #-1
 1279 009e 3046     		mov	r0, r6
 1280 00a0 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1281              	.LVL168:
 133:Core/Src/main.c **** 
 1282              		.loc 1 133 5 view .LVU247
 133:Core/Src/main.c **** 
 1283              		.loc 1 133 15 is_stmt 0 view .LVU248
 1284 00a4 3046     		mov	r0, r6
 1285 00a6 FFF7FEFF 		bl	HAL_ADC_GetValue
 1286              	.LVL169:
 1287 00aa 0146     		mov	r1, r0
 133:Core/Src/main.c **** 
 1288              		.loc 1 133 15 discriminator 1 view .LVU249
 1289 00ac 2846     		mov	r0, r5
 1290 00ae FFF7FEFF 		bl	decayAndMerge
 1291              	.LVL170:
 133:Core/Src/main.c **** 
 1292              		.loc 1 133 13 discriminator 2 view .LVU250
 1293 00b2 85B2     		uxth	r5, r0
 1294              	.LVL171:
 139:Core/Src/main.c ****     float num = cos_adc - midpoint;
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 37


 1295              		.loc 1 139 5 is_stmt 1 view .LVU251
 140:Core/Src/main.c ****     float den = sin_adc - midpoint;
 1296              		.loc 1 140 5 view .LVU252
 1297 00b4 A046     		mov	r8, r4
 140:Core/Src/main.c ****     float den = sin_adc - midpoint;
 1298              		.loc 1 140 25 is_stmt 0 view .LVU253
 1299 00b6 2046     		mov	r0, r4
 1300 00b8 FFF7FEFF 		bl	__aeabi_i2f
 1301              	.LVL172:
 140:Core/Src/main.c ****     float den = sin_adc - midpoint;
 1302              		.loc 1 140 11 view .LVU254
 1303 00bc 1049     		ldr	r1, .L75+24
 1304 00be FFF7FEFF 		bl	__aeabi_fsub
 1305              	.LVL173:
 1306 00c2 0646     		mov	r6, r0
 1307              	.LVL174:
 141:Core/Src/main.c ****     if (den != 0){
 1308              		.loc 1 141 5 is_stmt 1 view .LVU255
 1309 00c4 A946     		mov	r9, r5
 141:Core/Src/main.c ****     if (den != 0){
 1310              		.loc 1 141 25 is_stmt 0 view .LVU256
 1311 00c6 2846     		mov	r0, r5
 1312              	.LVL175:
 141:Core/Src/main.c ****     if (den != 0){
 1313              		.loc 1 141 25 view .LVU257
 1314 00c8 FFF7FEFF 		bl	__aeabi_i2f
 1315              	.LVL176:
 141:Core/Src/main.c ****     if (den != 0){
 1316              		.loc 1 141 11 view .LVU258
 1317 00cc 0C49     		ldr	r1, .L75+24
 1318 00ce FFF7FEFF 		bl	__aeabi_fsub
 1319              	.LVL177:
 1320 00d2 0746     		mov	r7, r0
 1321              	.LVL178:
 142:Core/Src/main.c ****       theta_rad = atan2f(num, den); // Use atan2 for better handling of quadrants
 1322              		.loc 1 142 5 is_stmt 1 view .LVU259
 142:Core/Src/main.c ****       theta_rad = atan2f(num, den); // Use atan2 for better handling of quadrants
 1323              		.loc 1 142 8 is_stmt 0 view .LVU260
 1324 00d4 0021     		movs	r1, #0
 1325 00d6 FFF7FEFF 		bl	__aeabi_fcmpeq
 1326              	.LVL179:
 142:Core/Src/main.c ****       theta_rad = atan2f(num, den); // Use atan2 for better handling of quadrants
 1327              		.loc 1 142 8 view .LVU261
 1328 00da 0028     		cmp	r0, #0
 1329 00dc A4D0     		beq	.L74
 146:Core/Src/main.c ****     }
 1330              		.loc 1 146 17 view .LVU262
 1331 00de 0027     		movs	r7, #0
 1332              	.LVL180:
 146:Core/Src/main.c ****     }
 1333              		.loc 1 146 17 view .LVU263
 1334 00e0 A7E7     		b	.L67
 1335              	.L76:
 1336 00e2 00BFAFF3 		.align	3
 1336      0080
 1337              	.L75:
 1338 00e8 F8C1631A 		.word	442745336
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 38


 1339 00ec DCA54C40 		.word	1078765020
 1340 00f0 00007A44 		.word	1148846080
 1341 00f4 00000000 		.word	.LC8
 1342 00f8 00000000 		.word	hadc1
 1343 00fc 00000000 		.word	hadc2
 1344 0100 00882645 		.word	1160153088
 1345              	.LBE7:
 1346              		.cfi_endproc
 1347              	.LFE68:
 1349              		.global	ATAN_LUT
 1350              		.section	.rodata.ATAN_LUT,"a"
 1351              		.align	2
 1354              	ATAN_LUT:
 1355 0000 00000000 		.word	0
 1356 0004 2120803A 		.word	981475361
 1357 0008 F61F003B 		.word	989863926
 1358 000c DB2F403B 		.word	994062299
 1359 0010 E01F803B 		.word	998252512
 1360 0014 BE27A03B 		.word	1000351678
 1361 0018 852FC03B 		.word	1002450821
 1362 001c 2237E03B 		.word	1004549922
 1363 0020 601F003C 		.word	1006640992
 1364 0024 1923103C 		.word	1007690521
 1365 0028 BC26203C 		.word	1008740028
 1366 002c 4A2A303C 		.word	1009789514
 1367 0030 CD2D403C 		.word	1010838989
 1368 0034 3031503C 		.word	1011888432
 1369 0038 7E34603C 		.word	1012937854
 1370 003c AB37703C 		.word	1013987243
 1371 0040 5C1D803C 		.word	1015029084
 1372 0044 D31E883C 		.word	1015553747
 1373 0048 3920903C 		.word	1016078393
 1374 004c 8F21983C 		.word	1016603023
 1375 0050 D022A03C 		.word	1017127632
 1376 0054 0124A83C 		.word	1017652225
 1377 0058 1725B03C 		.word	1018176791
 1378 005c 1C26B83C 		.word	1018701340
 1379 0060 0727C03C 		.word	1019225863
 1380 0064 D727C83C 		.word	1019750359
 1381 0068 9228D03C 		.word	1020274834
 1382 006c 3729D83C 		.word	1020799287
 1383 0070 BC29E03C 		.word	1021323708
 1384 0074 262AE83C 		.word	1021848102
 1385 0078 702AF03C 		.word	1022372464
 1386 007c 9F2AF83C 		.word	1022896799
 1387 0080 5715003D 		.word	1023415639
 1388 0084 4E15043D 		.word	1023677774
 1389 0088 3515083D 		.word	1023939893
 1390 008c 0C150C3D 		.word	1024201996
 1391 0090 D014103D 		.word	1024464080
 1392 0094 8214143D 		.word	1024726146
 1393 0098 2314183D 		.word	1024988195
 1394 009c AF131C3D 		.word	1025250223
 1395 00a0 2B13203D 		.word	1025512235
 1396 00a4 8F12243D 		.word	1025774223
 1397 00a8 DF11283D 		.word	1026036191
 1398 00ac 1E112C3D 		.word	1026298142
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 39


 1399 00b0 4310303D 		.word	1026560067
 1400 00b4 540F343D 		.word	1026821972
 1401 00b8 4F0E383D 		.word	1027083855
 1402 00bc 320D3C3D 		.word	1027345714
 1403 00c0 FC0B403D 		.word	1027607548
 1404 00c4 B10A443D 		.word	1027869361
 1405 00c8 4C09483D 		.word	1028131148
 1406 00cc CE074C3D 		.word	1028392910
 1407 00d0 3806503D 		.word	1028654648
 1408 00d4 8704543D 		.word	1028916359
 1409 00d8 BB02583D 		.word	1029178043
 1410 00dc D5005C3D 		.word	1029439701
 1411 00e0 D3FE5F3D 		.word	1029701331
 1412 00e4 B4FC633D 		.word	1029962932
 1413 00e8 7BFA673D 		.word	1030224507
 1414 00ec 23F86B3D 		.word	1030486051
 1415 00f0 AFF56F3D 		.word	1030747567
 1416 00f4 1CF3733D 		.word	1031009052
 1417 00f8 6CF0773D 		.word	1031270508
 1418 00fc 9CED7B3D 		.word	1031531932
 1419 0100 AFEA7F3D 		.word	1031793327
 1420 0104 CFF3813D 		.word	1031926735
 1421 0108 38F2833D 		.word	1032057400
 1422 010c 90F0853D 		.word	1032188048
 1423 0110 D7EE873D 		.word	1032318679
 1424 0114 0EED893D 		.word	1032449294
 1425 0118 33EB8B3D 		.word	1032579891
 1426 011c 47E98D3D 		.word	1032710471
 1427 0120 49E78F3D 		.word	1032841033
 1428 0124 3BE5913D 		.word	1032971579
 1429 0128 18E3933D 		.word	1033102104
 1430 012c E4E0953D 		.word	1033232612
 1431 0130 9DDE973D 		.word	1033363101
 1432 0134 45DC993D 		.word	1033493573
 1433 0138 D7D99B3D 		.word	1033624023
 1434 013c 58D79D3D 		.word	1033754456
 1435 0140 C4D49F3D 		.word	1033884868
 1436 0144 1DD2A13D 		.word	1034015261
 1437 0148 61CFA33D 		.word	1034145633
 1438 014c 92CCA53D 		.word	1034275986
 1439 0150 AEC9A73D 		.word	1034406318
 1440 0154 B4C6A93D 		.word	1034536628
 1441 0158 A7C3AB3D 		.word	1034666919
 1442 015c 84C0AD3D 		.word	1034797188
 1443 0160 4ABDAF3D 		.word	1034927434
 1444 0164 FCB9B13D 		.word	1035057660
 1445 0168 98B6B33D 		.word	1035187864
 1446 016c 1DB3B53D 		.word	1035318045
 1447 0170 8CAFB73D 		.word	1035448204
 1448 0174 E4ABB93D 		.word	1035578340
 1449 0178 26A8BB3D 		.word	1035708454
 1450 017c 4FA4BD3D 		.word	1035838543
 1451 0180 61A0BF3D 		.word	1035968609
 1452 0184 5D9CC13D 		.word	1036098653
 1453 0188 4098C33D 		.word	1036228672
 1454 018c 0C94C53D 		.word	1036358668
 1455 0190 BD8FC73D 		.word	1036488637
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 40


 1456 0194 578BC93D 		.word	1036618583
 1457 0198 D886CB3D 		.word	1036748504
 1458 019c 4082CD3D 		.word	1036878400
 1459 01a0 907DCF3D 		.word	1037008272
 1460 01a4 C578D13D 		.word	1037138117
 1461 01a8 E073D33D 		.word	1037267936
 1462 01ac E16ED53D 		.word	1037397729
 1463 01b0 C969D73D 		.word	1037527497
 1464 01b4 9664D93D 		.word	1037657238
 1465 01b8 475FDB3D 		.word	1037786951
 1466 01bc DF59DD3D 		.word	1037916639
 1467 01c0 5A54DF3D 		.word	1038046298
 1468 01c4 BA4EE13D 		.word	1038175930
 1469 01c8 0049E33D 		.word	1038305536
 1470 01cc 2843E53D 		.word	1038435112
 1471 01d0 353DE73D 		.word	1038564661
 1472 01d4 2537E93D 		.word	1038694181
 1473 01d8 F930EB3D 		.word	1038823673
 1474 01dc B12AED3D 		.word	1038953137
 1475 01e0 4924EF3D 		.word	1039082569
 1476 01e4 C61DF13D 		.word	1039211974
 1477 01e8 2517F33D 		.word	1039341349
 1478 01ec 6710F53D 		.word	1039470695
 1479 01f0 8B09F73D 		.word	1039600011
 1480 01f4 9002F93D 		.word	1039729296
 1481 01f8 77FBFA3D 		.word	1039858551
 1482 01fc 3FF4FC3D 		.word	1039987775
 1483 0200 E8ECFE3D 		.word	1040116968
 1484 0204 BA72003E 		.word	1040216762
 1485 0208 EF6E013E 		.word	1040281327
 1486 020c 146B023E 		.word	1040345876
 1487 0210 2A67033E 		.word	1040410410
 1488 0214 3063043E 		.word	1040474928
 1489 0218 265F053E 		.word	1040539430
 1490 021c 0B5B063E 		.word	1040603915
 1491 0220 E056073E 		.word	1040668384
 1492 0224 A452083E 		.word	1040732836
 1493 0228 584E093E 		.word	1040797272
 1494 022c FC490A3E 		.word	1040861692
 1495 0230 8E450B3E 		.word	1040926094
 1496 0234 10410C3E 		.word	1040990480
 1497 0238 803C0D3E 		.word	1041054848
 1498 023c E0370E3E 		.word	1041119200
 1499 0240 2E330F3E 		.word	1041183534
 1500 0244 6A2E103E 		.word	1041247850
 1501 0248 9629113E 		.word	1041312150
 1502 024c B024123E 		.word	1041376432
 1503 0250 B81F133E 		.word	1041440696
 1504 0254 AE1A143E 		.word	1041504942
 1505 0258 9215153E 		.word	1041569170
 1506 025c 6510163E 		.word	1041633381
 1507 0260 250B173E 		.word	1041697573
 1508 0264 D305183E 		.word	1041761747
 1509 0268 6F00193E 		.word	1041825903
 1510 026c F8FA193E 		.word	1041890040
 1511 0270 6EF51A3E 		.word	1041954158
 1512 0274 D2EF1B3E 		.word	1042018258
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 41


 1513 0278 24EA1C3E 		.word	1042082340
 1514 027c 62E41D3E 		.word	1042146402
 1515 0280 8DDE1E3E 		.word	1042210445
 1516 0284 A5D81F3E 		.word	1042274469
 1517 0288 AAD2203E 		.word	1042338474
 1518 028c 9CCC213E 		.word	1042402460
 1519 0290 79C6223E 		.word	1042466425
 1520 0294 44C0233E 		.word	1042530372
 1521 0298 FBB9243E 		.word	1042594299
 1522 029c 9EB3253E 		.word	1042658206
 1523 02a0 2DAD263E 		.word	1042722093
 1524 02a4 A9A6273E 		.word	1042785961
 1525 02a8 10A0283E 		.word	1042849808
 1526 02ac 6399293E 		.word	1042913635
 1527 02b0 A2922A3E 		.word	1042977442
 1528 02b4 CD8B2B3E 		.word	1043041229
 1529 02b8 E2842C3E 		.word	1043104994
 1530 02bc E47D2D3E 		.word	1043168740
 1531 02c0 D0762E3E 		.word	1043232464
 1532 02c4 A86F2F3E 		.word	1043296168
 1533 02c8 6B68303E 		.word	1043359851
 1534 02cc 1861313E 		.word	1043423512
 1535 02d0 B259323E 		.word	1043487154
 1536 02d4 3552333E 		.word	1043550773
 1537 02d8 A34A343E 		.word	1043614371
 1538 02dc FB42353E 		.word	1043677947
 1539 02e0 3F3B363E 		.word	1043741503
 1540 02e4 6C33373E 		.word	1043805036
 1541 02e8 842B383E 		.word	1043868548
 1542 02ec 8623393E 		.word	1043932038
 1543 02f0 721B3A3E 		.word	1043995506
 1544 02f4 48133B3E 		.word	1044058952
 1545 02f8 080B3C3E 		.word	1044122376
 1546 02fc B1023D3E 		.word	1044185777
 1547 0300 44FA3D3E 		.word	1044249156
 1548 0304 C1F13E3E 		.word	1044312513
 1549 0308 27E93F3E 		.word	1044375847
 1550 030c 77E0403E 		.word	1044439159
 1551 0310 AFD7413E 		.word	1044502447
 1552 0314 D1CE423E 		.word	1044565713
 1553 0318 DCC5433E 		.word	1044628956
 1554 031c D0BC443E 		.word	1044692176
 1555 0320 ACB3453E 		.word	1044755372
 1556 0324 72AA463E 		.word	1044818546
 1557 0328 20A1473E 		.word	1044881696
 1558 032c B797483E 		.word	1044944823
 1559 0330 358E493E 		.word	1045007925
 1560 0334 9D844A3E 		.word	1045071005
 1561 0338 EC7A4B3E 		.word	1045134060
 1562 033c 24714C3E 		.word	1045197092
 1563 0340 44674D3E 		.word	1045260100
 1564 0344 4C5D4E3E 		.word	1045323084
 1565 0348 3B534F3E 		.word	1045386043
 1566 034c 1349503E 		.word	1045448979
 1567 0350 D23E513E 		.word	1045511890
 1568 0354 7834523E 		.word	1045574776
 1569 0358 062A533E 		.word	1045637638
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 42


 1570 035c 7C1F543E 		.word	1045700476
 1571 0360 D814553E 		.word	1045763288
 1572 0364 1C0A563E 		.word	1045826076
 1573 0368 47FF563E 		.word	1045888839
 1574 036c 59F4573E 		.word	1045951577
 1575 0370 52E9583E 		.word	1046014290
 1576 0374 32DE593E 		.word	1046076978
 1577 0378 F8D25A3E 		.word	1046139640
 1578 037c A5C75B3E 		.word	1046202277
 1579 0380 39BC5C3E 		.word	1046264889
 1580 0384 B3B05D3E 		.word	1046327475
 1581 0388 13A55E3E 		.word	1046390035
 1582 038c 5A995F3E 		.word	1046452570
 1583 0390 868D603E 		.word	1046515078
 1584 0394 9981613E 		.word	1046577561
 1585 0398 9175623E 		.word	1046640017
 1586 039c 7069633E 		.word	1046702448
 1587 03a0 355D643E 		.word	1046764853
 1588 03a4 DE50653E 		.word	1046827230
 1589 03a8 6E44663E 		.word	1046889582
 1590 03ac E337673E 		.word	1046951907
 1591 03b0 3E2B683E 		.word	1047014206
 1592 03b4 7E1E693E 		.word	1047076478
 1593 03b8 A3116A3E 		.word	1047138723
 1594 03bc AD046B3E 		.word	1047200941
 1595 03c0 9DF76B3E 		.word	1047263133
 1596 03c4 71EA6C3E 		.word	1047325297
 1597 03c8 2ADD6D3E 		.word	1047387434
 1598 03cc C8CF6E3E 		.word	1047449544
 1599 03d0 4BC26F3E 		.word	1047511627
 1600 03d4 B2B4703E 		.word	1047573682
 1601 03d8 FEA6713E 		.word	1047635710
 1602 03dc 2E99723E 		.word	1047697710
 1603 03e0 438B733E 		.word	1047759683
 1604 03e4 3C7D743E 		.word	1047821628
 1605 03e8 196F753E 		.word	1047883545
 1606 03ec DA60763E 		.word	1047945434
 1607 03f0 7F52773E 		.word	1048007295
 1608 03f4 0844783E 		.word	1048069128
 1609 03f8 7535793E 		.word	1048130933
 1610 03fc C6267A3E 		.word	1048192710
 1611 0400 FA177B3E 		.word	1048254458
 1612 0404 12097C3E 		.word	1048316178
 1613 0408 0EFA7C3E 		.word	1048377870
 1614 040c ECEA7D3E 		.word	1048439532
 1615 0410 AEDB7E3E 		.word	1048501166
 1616 0414 54CC7F3E 		.word	1048562772
 1617 0418 6E5E803E 		.word	1048600174
 1618 041c A4D6803E 		.word	1048630948
 1619 0420 CB4E813E 		.word	1048661707
 1620 0424 E4C6813E 		.word	1048692452
 1621 0428 EE3E823E 		.word	1048723182
 1622 042c EAB6823E 		.word	1048753898
 1623 0430 D72E833E 		.word	1048784599
 1624 0434 B5A6833E 		.word	1048815285
 1625 0438 841E843E 		.word	1048845956
 1626 043c 4596843E 		.word	1048876613
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 43


 1627 0440 F60D853E 		.word	1048907254
 1628 0444 9A85853E 		.word	1048937882
 1629 0448 2EFD853E 		.word	1048968494
 1630 044c B374863E 		.word	1048999091
 1631 0450 28EC863E 		.word	1049029672
 1632 0454 8F63873E 		.word	1049060239
 1633 0458 E7DA873E 		.word	1049090791
 1634 045c 3052883E 		.word	1049121328
 1635 0460 6AC9883E 		.word	1049151850
 1636 0464 9440893E 		.word	1049182356
 1637 0468 B0B7893E 		.word	1049212848
 1638 046c BC2E8A3E 		.word	1049243324
 1639 0470 B8A58A3E 		.word	1049273784
 1640 0474 A61C8B3E 		.word	1049304230
 1641 0478 84938B3E 		.word	1049334660
 1642 047c 520A8C3E 		.word	1049365074
 1643 0480 11818C3E 		.word	1049395473
 1644 0484 C1F78C3E 		.word	1049425857
 1645 0488 616E8D3E 		.word	1049456225
 1646 048c F1E48D3E 		.word	1049486577
 1647 0490 725B8E3E 		.word	1049516914
 1648 0494 E3D18E3E 		.word	1049547235
 1649 0498 45488F3E 		.word	1049577541
 1650 049c 97BE8F3E 		.word	1049607831
 1651 04a0 D934903E 		.word	1049638105
 1652 04a4 0BAB903E 		.word	1049668363
 1653 04a8 2D21913E 		.word	1049698605
 1654 04ac 4097913E 		.word	1049728832
 1655 04b0 420D923E 		.word	1049759042
 1656 04b4 3583923E 		.word	1049789237
 1657 04b8 18F9923E 		.word	1049819416
 1658 04bc EB6E933E 		.word	1049849579
 1659 04c0 ADE4933E 		.word	1049879725
 1660 04c4 605A943E 		.word	1049909856
 1661 04c8 02D0943E 		.word	1049939970
 1662 04cc 9445953E 		.word	1049970068
 1663 04d0 16BB953E 		.word	1050000150
 1664 04d4 8830963E 		.word	1050030216
 1665 04d8 EAA5963E 		.word	1050060266
 1666 04dc 3B1B973E 		.word	1050090299
 1667 04e0 7C90973E 		.word	1050120316
 1668 04e4 AD05983E 		.word	1050150317
 1669 04e8 CC7A983E 		.word	1050180300
 1670 04ec DCEF983E 		.word	1050210268
 1671 04f0 DC64993E 		.word	1050240220
 1672 04f4 CAD9993E 		.word	1050270154
 1673 04f8 A84E9A3E 		.word	1050300072
 1674 04fc 76C39A3E 		.word	1050329974
 1675 0500 33389B3E 		.word	1050359859
 1676 0504 DFAC9B3E 		.word	1050389727
 1677 0508 7B219C3E 		.word	1050419579
 1678 050c 06969C3E 		.word	1050449414
 1679 0510 800A9D3E 		.word	1050479232
 1680 0514 EA7E9D3E 		.word	1050509034
 1681 0518 42F39D3E 		.word	1050538818
 1682 051c 8A679E3E 		.word	1050568586
 1683 0520 C1DB9E3E 		.word	1050598337
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 44


 1684 0524 E74F9F3E 		.word	1050628071
 1685 0528 FCC39F3E 		.word	1050657788
 1686 052c 0038A03E 		.word	1050687488
 1687 0530 F3ABA03E 		.word	1050717171
 1688 0534 D61FA13E 		.word	1050746838
 1689 0538 A793A13E 		.word	1050776487
 1690 053c 6607A23E 		.word	1050806118
 1691 0540 157BA23E 		.word	1050835733
 1692 0544 B3EEA23E 		.word	1050865331
 1693 0548 3F62A33E 		.word	1050894911
 1694 054c BAD5A33E 		.word	1050924474
 1695 0550 2449A43E 		.word	1050954020
 1696 0554 7DBCA43E 		.word	1050983549
 1697 0558 C42FA53E 		.word	1051013060
 1698 055c FAA2A53E 		.word	1051042554
 1699 0560 1F16A63E 		.word	1051072031
 1700 0564 3289A63E 		.word	1051101490
 1701 0568 34FCA63E 		.word	1051130932
 1702 056c 256FA73E 		.word	1051160357
 1703 0570 03E2A73E 		.word	1051189763
 1704 0574 D154A83E 		.word	1051219153
 1705 0578 8DC7A83E 		.word	1051248525
 1706 057c 373AA93E 		.word	1051277879
 1707 0580 CFACA93E 		.word	1051307215
 1708 0584 561FAA3E 		.word	1051336534
 1709 0588 CC91AA3E 		.word	1051365836
 1710 058c 2F04AB3E 		.word	1051395119
 1711 0590 8176AB3E 		.word	1051424385
 1712 0594 C1E8AB3E 		.word	1051453633
 1713 0598 EF5AAC3E 		.word	1051482863
 1714 059c 0CCDAC3E 		.word	1051512076
 1715 05a0 173FAD3E 		.word	1051541271
 1716 05a4 0FB1AD3E 		.word	1051570447
 1717 05a8 F622AE3E 		.word	1051599606
 1718 05ac CB94AE3E 		.word	1051628747
 1719 05b0 8E06AF3E 		.word	1051657870
 1720 05b4 3F78AF3E 		.word	1051686975
 1721 05b8 DEE9AF3E 		.word	1051716062
 1722 05bc 6B5BB03E 		.word	1051745131
 1723 05c0 E6CCB03E 		.word	1051774182
 1724 05c4 4F3EB13E 		.word	1051803215
 1725 05c8 A6AFB13E 		.word	1051832230
 1726 05cc EB20B23E 		.word	1051861227
 1727 05d0 1D92B23E 		.word	1051890205
 1728 05d4 3D03B33E 		.word	1051919165
 1729 05d8 4B74B33E 		.word	1051948107
 1730 05dc 47E5B33E 		.word	1051977031
 1731 05e0 3156B43E 		.word	1052005937
 1732 05e4 08C7B43E 		.word	1052034824
 1733 05e8 CD37B53E 		.word	1052063693
 1734 05ec 7FA8B53E 		.word	1052092543
 1735 05f0 2019B63E 		.word	1052121376
 1736 05f4 AE89B63E 		.word	1052150190
 1737 05f8 29FAB63E 		.word	1052178985
 1738 05fc 926AB73E 		.word	1052207762
 1739 0600 E8DAB73E 		.word	1052236520
 1740 0604 2C4BB83E 		.word	1052265260
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 45


 1741 0608 5EBBB83E 		.word	1052293982
 1742 060c 7D2BB93E 		.word	1052322685
 1743 0610 899BB93E 		.word	1052351369
 1744 0614 830BBA3E 		.word	1052380035
 1745 0618 6A7BBA3E 		.word	1052408682
 1746 061c 3FEBBA3E 		.word	1052437311
 1747 0620 015BBB3E 		.word	1052465921
 1748 0624 B0CABB3E 		.word	1052494512
 1749 0628 4C3ABC3E 		.word	1052523084
 1750 062c D6A9BC3E 		.word	1052551638
 1751 0630 4D19BD3E 		.word	1052580173
 1752 0634 B188BD3E 		.word	1052608689
 1753 0638 03F8BD3E 		.word	1052637187
 1754 063c 4267BE3E 		.word	1052665666
 1755 0640 6DD6BE3E 		.word	1052694125
 1756 0644 8645BF3E 		.word	1052722566
 1757 0648 8CB4BF3E 		.word	1052750988
 1758 064c 7F23C03E 		.word	1052779391
 1759 0650 6092C03E 		.word	1052807776
 1760 0654 2D01C13E 		.word	1052836141
 1761 0658 E76FC13E 		.word	1052864487
 1762 065c 8EDEC13E 		.word	1052892814
 1763 0660 224DC23E 		.word	1052921122
 1764 0664 A4BBC23E 		.word	1052949412
 1765 0668 122AC33E 		.word	1052977682
 1766 066c 6D98C33E 		.word	1053005933
 1767 0670 B506C43E 		.word	1053034165
 1768 0674 EA74C43E 		.word	1053062378
 1769 0678 0CE3C43E 		.word	1053090572
 1770 067c 1A51C53E 		.word	1053118746
 1771 0680 15BFC53E 		.word	1053146901
 1772 0684 FE2CC63E 		.word	1053175038
 1773 0688 D39AC63E 		.word	1053203155
 1774 068c 9508C73E 		.word	1053231253
 1775 0690 4376C73E 		.word	1053259331
 1776 0694 DEE3C73E 		.word	1053287390
 1777 0698 6651C83E 		.word	1053315430
 1778 069c DBBEC83E 		.word	1053343451
 1779 06a0 3C2CC93E 		.word	1053371452
 1780 06a4 8A99C93E 		.word	1053399434
 1781 06a8 C406CA3E 		.word	1053427396
 1782 06ac EB73CA3E 		.word	1053455339
 1783 06b0 FFE0CA3E 		.word	1053483263
 1784 06b4 FF4DCB3E 		.word	1053511167
 1785 06b8 ECBACB3E 		.word	1053539052
 1786 06bc C527CC3E 		.word	1053566917
 1787 06c0 8B94CC3E 		.word	1053594763
 1788 06c4 3E01CD3E 		.word	1053622590
 1789 06c8 DC6DCD3E 		.word	1053650396
 1790 06cc 68DACD3E 		.word	1053678184
 1791 06d0 E046CE3E 		.word	1053705952
 1792 06d4 44B3CE3E 		.word	1053733700
 1793 06d8 941FCF3E 		.word	1053761428
 1794 06dc D18BCF3E 		.word	1053789137
 1795 06e0 FAF7CF3E 		.word	1053816826
 1796 06e4 1064D03E 		.word	1053844496
 1797 06e8 12D0D03E 		.word	1053872146
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 46


 1798 06ec 013CD13E 		.word	1053899777
 1799 06f0 DBA7D13E 		.word	1053927387
 1800 06f4 A213D23E 		.word	1053954978
 1801 06f8 557FD23E 		.word	1053982549
 1802 06fc F5EAD23E 		.word	1054010101
 1803 0700 8156D33E 		.word	1054037633
 1804 0704 F9C1D33E 		.word	1054065145
 1805 0708 5D2DD43E 		.word	1054092637
 1806 070c AE98D43E 		.word	1054120110
 1807 0710 EA03D53E 		.word	1054147562
 1808 0714 136FD53E 		.word	1054174995
 1809 0718 27DAD53E 		.word	1054202407
 1810 071c 2945D63E 		.word	1054229801
 1811 0720 16B0D63E 		.word	1054257174
 1812 0724 EF1AD73E 		.word	1054284527
 1813 0728 B485D73E 		.word	1054311860
 1814 072c 66F0D73E 		.word	1054339174
 1815 0730 035BD83E 		.word	1054366467
 1816 0734 8DC5D83E 		.word	1054393741
 1817 0738 0230D93E 		.word	1054420994
 1818 073c 649AD93E 		.word	1054448228
 1819 0740 B204DA3E 		.word	1054475442
 1820 0744 EB6EDA3E 		.word	1054502635
 1821 0748 11D9DA3E 		.word	1054529809
 1822 074c 2243DB3E 		.word	1054556962
 1823 0750 20ADDB3E 		.word	1054584096
 1824 0754 0917DC3E 		.word	1054611209
 1825 0758 DF80DC3E 		.word	1054638303
 1826 075c A0EADC3E 		.word	1054665376
 1827 0760 4D54DD3E 		.word	1054692429
 1828 0764 E6BDDD3E 		.word	1054719462
 1829 0768 6B27DE3E 		.word	1054746475
 1830 076c DC90DE3E 		.word	1054773468
 1831 0770 38FADE3E 		.word	1054800440
 1832 0774 8163DF3E 		.word	1054827393
 1833 0778 B5CCDF3E 		.word	1054854325
 1834 077c D535E03E 		.word	1054881237
 1835 0780 E19EE03E 		.word	1054908129
 1836 0784 D907E13E 		.word	1054935001
 1837 0788 BD70E13E 		.word	1054961853
 1838 078c 8CD9E13E 		.word	1054988684
 1839 0790 4742E23E 		.word	1055015495
 1840 0794 EEAAE23E 		.word	1055042286
 1841 0798 8013E33E 		.word	1055069056
 1842 079c FE7BE33E 		.word	1055095806
 1843 07a0 68E4E33E 		.word	1055122536
 1844 07a4 BE4CE43E 		.word	1055149246
 1845 07a8 FFB4E43E 		.word	1055175935
 1846 07ac 2C1DE53E 		.word	1055202604
 1847 07b0 4585E53E 		.word	1055229253
 1848 07b4 49EDE53E 		.word	1055255881
 1849 07b8 3955E63E 		.word	1055282489
 1850 07bc 15BDE63E 		.word	1055309077
 1851 07c0 DC24E73E 		.word	1055335644
 1852 07c4 8F8CE73E 		.word	1055362191
 1853 07c8 2DF4E73E 		.word	1055388717
 1854 07cc B75BE83E 		.word	1055415223
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 47


 1855 07d0 2DC3E83E 		.word	1055441709
 1856 07d4 8E2AE93E 		.word	1055468174
 1857 07d8 DB91E93E 		.word	1055494619
 1858 07dc 14F9E93E 		.word	1055521044
 1859 07e0 3760EA3E 		.word	1055547447
 1860 07e4 47C7EA3E 		.word	1055573831
 1861 07e8 422EEB3E 		.word	1055600194
 1862 07ec 2895EB3E 		.word	1055626536
 1863 07f0 FBFBEB3E 		.word	1055652859
 1864 07f4 B862EC3E 		.word	1055679160
 1865 07f8 61C9EC3E 		.word	1055705441
 1866 07fc F62FED3E 		.word	1055731702
 1867 0800 7696ED3E 		.word	1055757942
 1868 0804 E1FCED3E 		.word	1055784161
 1869 0808 3863EE3E 		.word	1055810360
 1870 080c 7BC9EE3E 		.word	1055836539
 1871 0810 A92FEF3E 		.word	1055862697
 1872 0814 C295EF3E 		.word	1055888834
 1873 0818 C7FBEF3E 		.word	1055914951
 1874 081c B761F03E 		.word	1055941047
 1875 0820 92C7F03E 		.word	1055967122
 1876 0824 592DF13E 		.word	1055993177
 1877 0828 0C93F13E 		.word	1056019212
 1878 082c AAF8F13E 		.word	1056045226
 1879 0830 335EF23E 		.word	1056071219
 1880 0834 A7C3F23E 		.word	1056097191
 1881 0838 0729F33E 		.word	1056123143
 1882 083c 538EF33E 		.word	1056149075
 1883 0840 8AF3F33E 		.word	1056174986
 1884 0844 AC58F43E 		.word	1056200876
 1885 0848 B9BDF43E 		.word	1056226745
 1886 084c B222F53E 		.word	1056252594
 1887 0850 9687F53E 		.word	1056278422
 1888 0854 66ECF53E 		.word	1056304230
 1889 0858 2151F63E 		.word	1056330017
 1890 085c C7B5F63E 		.word	1056355783
 1891 0860 581AF73E 		.word	1056381528
 1892 0864 D57EF73E 		.word	1056407253
 1893 0868 3DE3F73E 		.word	1056432957
 1894 086c 9147F83E 		.word	1056458641
 1895 0870 CFABF83E 		.word	1056484303
 1896 0874 F90FF93E 		.word	1056509945
 1897 0878 0F74F93E 		.word	1056535567
 1898 087c 0FD8F93E 		.word	1056561167
 1899 0880 FB3BFA3E 		.word	1056586747
 1900 0884 D29FFA3E 		.word	1056612306
 1901 0888 9503FB3E 		.word	1056637845
 1902 088c 4267FB3E 		.word	1056663362
 1903 0890 DBCAFB3E 		.word	1056688859
 1904 0894 602EFC3E 		.word	1056714336
 1905 0898 CF91FC3E 		.word	1056739791
 1906 089c 2AF5FC3E 		.word	1056765226
 1907 08a0 7058FD3E 		.word	1056790640
 1908 08a4 A1BBFD3E 		.word	1056816033
 1909 08a8 BE1EFE3E 		.word	1056841406
 1910 08ac C581FE3E 		.word	1056866757
 1911 08b0 B8E4FE3E 		.word	1056892088
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 48


 1912 08b4 9647FF3E 		.word	1056917398
 1913 08b8 60AAFF3E 		.word	1056942688
 1914 08bc 8A06003F 		.word	1056966282
 1915 08c0 DA37003F 		.word	1056978906
 1916 08c4 1F69003F 		.word	1056991519
 1917 08c8 5B9A003F 		.word	1057004123
 1918 08cc 8CCB003F 		.word	1057016716
 1919 08d0 B2FC003F 		.word	1057029298
 1920 08d4 CE2D013F 		.word	1057041870
 1921 08d8 DF5E013F 		.word	1057054431
 1922 08dc E68F013F 		.word	1057066982
 1923 08e0 E3C0013F 		.word	1057079523
 1924 08e4 D6F1013F 		.word	1057092054
 1925 08e8 BD22023F 		.word	1057104573
 1926 08ec 9B53023F 		.word	1057117083
 1927 08f0 6E84023F 		.word	1057129582
 1928 08f4 37B5023F 		.word	1057142071
 1929 08f8 F5E5023F 		.word	1057154549
 1930 08fc A916033F 		.word	1057167017
 1931 0900 5347033F 		.word	1057179475
 1932 0904 F277033F 		.word	1057191922
 1933 0908 87A8033F 		.word	1057204359
 1934 090c 11D9033F 		.word	1057216785
 1935 0910 9109043F 		.word	1057229201
 1936 0914 063A043F 		.word	1057241606
 1937 0918 716A043F 		.word	1057254001
 1938 091c D29A043F 		.word	1057266386
 1939 0920 28CB043F 		.word	1057278760
 1940 0924 74FB043F 		.word	1057291124
 1941 0928 B52B053F 		.word	1057303477
 1942 092c EC5B053F 		.word	1057315820
 1943 0930 198C053F 		.word	1057328153
 1944 0934 3BBC053F 		.word	1057340475
 1945 0938 53EC053F 		.word	1057352787
 1946 093c 601C063F 		.word	1057365088
 1947 0940 634C063F 		.word	1057377379
 1948 0944 5C7C063F 		.word	1057389660
 1949 0948 4AAC063F 		.word	1057401930
 1950 094c 2EDC063F 		.word	1057414190
 1951 0950 070C073F 		.word	1057426439
 1952 0954 D63B073F 		.word	1057438678
 1953 0958 9A6B073F 		.word	1057450906
 1954 095c 549B073F 		.word	1057463124
 1955 0960 04CB073F 		.word	1057475332
 1956 0964 A9FA073F 		.word	1057487529
 1957 0968 442A083F 		.word	1057499716
 1958 096c D559083F 		.word	1057511893
 1959 0970 5B89083F 		.word	1057524059
 1960 0974 D6B8083F 		.word	1057536214
 1961 0978 47E8083F 		.word	1057548359
 1962 097c AE17093F 		.word	1057560494
 1963 0980 0B47093F 		.word	1057572619
 1964 0984 5C76093F 		.word	1057584732
 1965 0988 A4A5093F 		.word	1057596836
 1966 098c E1D4093F 		.word	1057608929
 1967 0990 14040A3F 		.word	1057621012
 1968 0994 3C330A3F 		.word	1057633084
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 49


 1969 0998 5A620A3F 		.word	1057645146
 1970 099c 6E910A3F 		.word	1057657198
 1971 09a0 77C00A3F 		.word	1057669239
 1972 09a4 76EF0A3F 		.word	1057681270
 1973 09a8 6A1E0B3F 		.word	1057693290
 1974 09ac 544D0B3F 		.word	1057705300
 1975 09b0 347C0B3F 		.word	1057717300
 1976 09b4 09AB0B3F 		.word	1057729289
 1977 09b8 D4D90B3F 		.word	1057741268
 1978 09bc 94080C3F 		.word	1057753236
 1979 09c0 4A370C3F 		.word	1057765194
 1980 09c4 F5650C3F 		.word	1057777141
 1981 09c8 97940C3F 		.word	1057789079
 1982 09cc 2EC30C3F 		.word	1057801006
 1983 09d0 BAF10C3F 		.word	1057812922
 1984 09d4 3C200D3F 		.word	1057824828
 1985 09d8 B44E0D3F 		.word	1057836724
 1986 09dc 217D0D3F 		.word	1057848609
 1987 09e0 84AB0D3F 		.word	1057860484
 1988 09e4 DDD90D3F 		.word	1057872349
 1989 09e8 2B080E3F 		.word	1057884203
 1990 09ec 6F360E3F 		.word	1057896047
 1991 09f0 A8640E3F 		.word	1057907880
 1992 09f4 D7920E3F 		.word	1057919703
 1993 09f8 FCC00E3F 		.word	1057931516
 1994 09fc 16EF0E3F 		.word	1057943318
 1995 0a00 261D0F3F 		.word	1057955110
 1996 0a04 2C4B0F3F 		.word	1057966892
 1997 0a08 27790F3F 		.word	1057978663
 1998 0a0c 18A70F3F 		.word	1057990424
 1999 0a10 FED40F3F 		.word	1058002174
 2000 0a14 DB02103F 		.word	1058013915
 2001 0a18 AC30103F 		.word	1058025644
 2002 0a1c 745E103F 		.word	1058037364
 2003 0a20 318C103F 		.word	1058049073
 2004 0a24 E4B9103F 		.word	1058060772
 2005 0a28 8CE7103F 		.word	1058072460
 2006 0a2c 2B15113F 		.word	1058084139
 2007 0a30 BE42113F 		.word	1058095806
 2008 0a34 4870113F 		.word	1058107464
 2009 0a38 C79D113F 		.word	1058119111
 2010 0a3c 3CCB113F 		.word	1058130748
 2011 0a40 A6F8113F 		.word	1058142374
 2012 0a44 0626123F 		.word	1058153990
 2013 0a48 5C53123F 		.word	1058165596
 2014 0a4c A880123F 		.word	1058177192
 2015 0a50 E9AD123F 		.word	1058188777
 2016 0a54 20DB123F 		.word	1058200352
 2017 0a58 4C08133F 		.word	1058211916
 2018 0a5c 6E35133F 		.word	1058223470
 2019 0a60 8662133F 		.word	1058235014
 2020 0a64 948F133F 		.word	1058246548
 2021 0a68 97BC133F 		.word	1058258071
 2022 0a6c 90E9133F 		.word	1058269584
 2023 0a70 7F16143F 		.word	1058281087
 2024 0a74 6443143F 		.word	1058292580
 2025 0a78 3E70143F 		.word	1058304062
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 50


 2026 0a7c 0E9D143F 		.word	1058315534
 2027 0a80 D3C9143F 		.word	1058326995
 2028 0a84 8FF6143F 		.word	1058338447
 2029 0a88 4023153F 		.word	1058349888
 2030 0a8c E64F153F 		.word	1058361318
 2031 0a90 837C153F 		.word	1058372739
 2032 0a94 15A9153F 		.word	1058384149
 2033 0a98 9DD5153F 		.word	1058395549
 2034 0a9c 1B02163F 		.word	1058406939
 2035 0aa0 8F2E163F 		.word	1058418319
 2036 0aa4 F85A163F 		.word	1058429688
 2037 0aa8 5787163F 		.word	1058441047
 2038 0aac ABB3163F 		.word	1058452395
 2039 0ab0 F6DF163F 		.word	1058463734
 2040 0ab4 360C173F 		.word	1058475062
 2041 0ab8 6C38173F 		.word	1058486380
 2042 0abc 9864173F 		.word	1058497688
 2043 0ac0 BA90173F 		.word	1058508986
 2044 0ac4 D1BC173F 		.word	1058520273
 2045 0ac8 DEE8173F 		.word	1058531550
 2046 0acc E114183F 		.word	1058542817
 2047 0ad0 DA40183F 		.word	1058554074
 2048 0ad4 C86C183F 		.word	1058565320
 2049 0ad8 AC98183F 		.word	1058576556
 2050 0adc 87C4183F 		.word	1058587783
 2051 0ae0 56F0183F 		.word	1058598998
 2052 0ae4 1C1C193F 		.word	1058610204
 2053 0ae8 D847193F 		.word	1058621400
 2054 0aec 8973193F 		.word	1058632585
 2055 0af0 309F193F 		.word	1058643760
 2056 0af4 CDCA193F 		.word	1058654925
 2057 0af8 60F6193F 		.word	1058666080
 2058 0afc E8211A3F 		.word	1058677224
 2059 0b00 674D1A3F 		.word	1058688359
 2060 0b04 DB781A3F 		.word	1058699483
 2061 0b08 45A41A3F 		.word	1058710597
 2062 0b0c A5CF1A3F 		.word	1058721701
 2063 0b10 FBFA1A3F 		.word	1058732795
 2064 0b14 47261B3F 		.word	1058743879
 2065 0b18 88511B3F 		.word	1058754952
 2066 0b1c C07C1B3F 		.word	1058766016
 2067 0b20 EDA71B3F 		.word	1058777069
 2068 0b24 10D31B3F 		.word	1058788112
 2069 0b28 29FE1B3F 		.word	1058799145
 2070 0b2c 38291C3F 		.word	1058810168
 2071 0b30 3D541C3F 		.word	1058821181
 2072 0b34 377F1C3F 		.word	1058832183
 2073 0b38 28AA1C3F 		.word	1058843176
 2074 0b3c 0ED51C3F 		.word	1058854158
 2075 0b40 EBFF1C3F 		.word	1058865131
 2076 0b44 BD2A1D3F 		.word	1058876093
 2077 0b48 85551D3F 		.word	1058887045
 2078 0b4c 43801D3F 		.word	1058897987
 2079 0b50 F7AA1D3F 		.word	1058908919
 2080 0b54 A1D51D3F 		.word	1058919841
 2081 0b58 41001E3F 		.word	1058930753
 2082 0b5c D72A1E3F 		.word	1058941655
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 51


 2083 0b60 63551E3F 		.word	1058952547
 2084 0b64 E57F1E3F 		.word	1058963429
 2085 0b68 5CAA1E3F 		.word	1058974300
 2086 0b6c CAD41E3F 		.word	1058985162
 2087 0b70 2DFF1E3F 		.word	1058996013
 2088 0b74 87291F3F 		.word	1059006855
 2089 0b78 D7531F3F 		.word	1059017687
 2090 0b7c 1C7E1F3F 		.word	1059028508
 2091 0b80 57A81F3F 		.word	1059039319
 2092 0b84 89D21F3F 		.word	1059050121
 2093 0b88 B0FC1F3F 		.word	1059060912
 2094 0b8c CE26203F 		.word	1059071694
 2095 0b90 E150203F 		.word	1059082465
 2096 0b94 EB7A203F 		.word	1059093227
 2097 0b98 EAA4203F 		.word	1059103978
 2098 0b9c E0CE203F 		.word	1059114720
 2099 0ba0 CBF8203F 		.word	1059125451
 2100 0ba4 AD22213F 		.word	1059136173
 2101 0ba8 844C213F 		.word	1059146884
 2102 0bac 5276213F 		.word	1059157586
 2103 0bb0 15A0213F 		.word	1059168277
 2104 0bb4 CFC9213F 		.word	1059178959
 2105 0bb8 7FF3213F 		.word	1059189631
 2106 0bbc 241D223F 		.word	1059200292
 2107 0bc0 C046223F 		.word	1059210944
 2108 0bc4 5270223F 		.word	1059221586
 2109 0bc8 DA99223F 		.word	1059232218
 2110 0bcc 58C3223F 		.word	1059242840
 2111 0bd0 CCEC223F 		.word	1059253452
 2112 0bd4 3716233F 		.word	1059264055
 2113 0bd8 973F233F 		.word	1059274647
 2114 0bdc ED68233F 		.word	1059285229
 2115 0be0 3A92233F 		.word	1059295802
 2116 0be4 7CBB233F 		.word	1059306364
 2117 0be8 B5E4233F 		.word	1059316917
 2118 0bec E40D243F 		.word	1059327460
 2119 0bf0 0937243F 		.word	1059337993
 2120 0bf4 2460243F 		.word	1059348516
 2121 0bf8 3589243F 		.word	1059359029
 2122 0bfc 3DB2243F 		.word	1059369533
 2123 0c00 3ADB243F 		.word	1059380026
 2124 0c04 2E04253F 		.word	1059390510
 2125 0c08 182D253F 		.word	1059400984
 2126 0c0c F855253F 		.word	1059411448
 2127 0c10 CE7E253F 		.word	1059421902
 2128 0c14 9BA7253F 		.word	1059432347
 2129 0c18 5DD0253F 		.word	1059442781
 2130 0c1c 16F9253F 		.word	1059453206
 2131 0c20 C521263F 		.word	1059463621
 2132 0c24 6A4A263F 		.word	1059474026
 2133 0c28 0573263F 		.word	1059484421
 2134 0c2c 979B263F 		.word	1059494807
 2135 0c30 1FC4263F 		.word	1059505183
 2136 0c34 9DEC263F 		.word	1059515549
 2137 0c38 1115273F 		.word	1059525905
 2138 0c3c 7B3D273F 		.word	1059536251
 2139 0c40 DC65273F 		.word	1059546588
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 52


 2140 0c44 338E273F 		.word	1059556915
 2141 0c48 80B6273F 		.word	1059567232
 2142 0c4c C4DE273F 		.word	1059577540
 2143 0c50 FD06283F 		.word	1059587837
 2144 0c54 2D2F283F 		.word	1059598125
 2145 0c58 5457283F 		.word	1059608404
 2146 0c5c 707F283F 		.word	1059618672
 2147 0c60 83A7283F 		.word	1059628931
 2148 0c64 8CCF283F 		.word	1059639180
 2149 0c68 8CF7283F 		.word	1059649420
 2150 0c6c 821F293F 		.word	1059659650
 2151 0c70 6E47293F 		.word	1059669870
 2152 0c74 506F293F 		.word	1059680080
 2153 0c78 2997293F 		.word	1059690281
 2154 0c7c F8BE293F 		.word	1059700472
 2155 0c80 BDE6293F 		.word	1059710653
 2156 0c84 790E2A3F 		.word	1059720825
 2157 0c88 2B362A3F 		.word	1059730987
 2158 0c8c D45D2A3F 		.word	1059741140
 2159 0c90 72852A3F 		.word	1059751282
 2160 0c94 08AD2A3F 		.word	1059761416
 2161 0c98 93D42A3F 		.word	1059771539
 2162 0c9c 15FC2A3F 		.word	1059781653
 2163 0ca0 8D232B3F 		.word	1059791757
 2164 0ca4 FC4A2B3F 		.word	1059801852
 2165 0ca8 61722B3F 		.word	1059811937
 2166 0cac BD992B3F 		.word	1059822013
 2167 0cb0 0FC12B3F 		.word	1059832079
 2168 0cb4 57E82B3F 		.word	1059842135
 2169 0cb8 960F2C3F 		.word	1059852182
 2170 0cbc CB362C3F 		.word	1059862219
 2171 0cc0 F75D2C3F 		.word	1059872247
 2172 0cc4 19852C3F 		.word	1059882265
 2173 0cc8 32AC2C3F 		.word	1059892274
 2174 0ccc 41D32C3F 		.word	1059902273
 2175 0cd0 46FA2C3F 		.word	1059912262
 2176 0cd4 42212D3F 		.word	1059922242
 2177 0cd8 35482D3F 		.word	1059932213
 2178 0cdc 1E6F2D3F 		.word	1059942174
 2179 0ce0 FD952D3F 		.word	1059952125
 2180 0ce4 D3BC2D3F 		.word	1059962067
 2181 0ce8 A0E32D3F 		.word	1059972000
 2182 0cec 630A2E3F 		.word	1059981923
 2183 0cf0 1C312E3F 		.word	1059991836
 2184 0cf4 CC572E3F 		.word	1060001740
 2185 0cf8 737E2E3F 		.word	1060011635
 2186 0cfc 10A52E3F 		.word	1060021520
 2187 0d00 A4CB2E3F 		.word	1060031396
 2188 0d04 2EF22E3F 		.word	1060041262
 2189 0d08 AE182F3F 		.word	1060051118
 2190 0d0c 263F2F3F 		.word	1060060966
 2191 0d10 94652F3F 		.word	1060070804
 2192 0d14 F88B2F3F 		.word	1060080632
 2193 0d18 53B22F3F 		.word	1060090451
 2194 0d1c A5D82F3F 		.word	1060100261
 2195 0d20 EDFE2F3F 		.word	1060110061
 2196 0d24 2C25303F 		.word	1060119852
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 53


 2197 0d28 614B303F 		.word	1060129633
 2198 0d2c 8E71303F 		.word	1060139406
 2199 0d30 B097303F 		.word	1060149168
 2200 0d34 CABD303F 		.word	1060158922
 2201 0d38 DAE3303F 		.word	1060168666
 2202 0d3c E009313F 		.word	1060178400
 2203 0d40 DE2F313F 		.word	1060188126
 2204 0d44 D255313F 		.word	1060197842
 2205 0d48 BC7B313F 		.word	1060207548
 2206 0d4c 9EA1313F 		.word	1060217246
 2207 0d50 76C7313F 		.word	1060226934
 2208 0d54 44ED313F 		.word	1060236612
 2209 0d58 0A13323F 		.word	1060246282
 2210 0d5c C638323F 		.word	1060255942
 2211 0d60 795E323F 		.word	1060265593
 2212 0d64 2284323F 		.word	1060275234
 2213 0d68 C2A9323F 		.word	1060284866
 2214 0d6c 59CF323F 		.word	1060294489
 2215 0d70 E7F4323F 		.word	1060304103
 2216 0d74 6C1A333F 		.word	1060313708
 2217 0d78 E73F333F 		.word	1060323303
 2218 0d7c 5965333F 		.word	1060332889
 2219 0d80 C28A333F 		.word	1060342466
 2220 0d84 21B0333F 		.word	1060352033
 2221 0d88 77D5333F 		.word	1060361591
 2222 0d8c C5FA333F 		.word	1060371141
 2223 0d90 0820343F 		.word	1060380680
 2224 0d94 4345343F 		.word	1060390211
 2225 0d98 756A343F 		.word	1060399733
 2226 0d9c 9D8F343F 		.word	1060409245
 2227 0da0 BCB4343F 		.word	1060418748
 2228 0da4 D2D9343F 		.word	1060428242
 2229 0da8 DFFE343F 		.word	1060437727
 2230 0dac E323353F 		.word	1060447203
 2231 0db0 DD48353F 		.word	1060456669
 2232 0db4 CF6D353F 		.word	1060466127
 2233 0db8 B792353F 		.word	1060475575
 2234 0dbc 96B7353F 		.word	1060485014
 2235 0dc0 6CDC353F 		.word	1060494444
 2236 0dc4 3901363F 		.word	1060503865
 2237 0dc8 FD25363F 		.word	1060513277
 2238 0dcc B74A363F 		.word	1060522679
 2239 0dd0 696F363F 		.word	1060532073
 2240 0dd4 1194363F 		.word	1060541457
 2241 0dd8 B1B8363F 		.word	1060550833
 2242 0ddc 47DD363F 		.word	1060560199
 2243 0de0 D501373F 		.word	1060569557
 2244 0de4 5926373F 		.word	1060578905
 2245 0de8 D44A373F 		.word	1060588244
 2246 0dec 466F373F 		.word	1060597574
 2247 0df0 B093373F 		.word	1060606896
 2248 0df4 10B8373F 		.word	1060616208
 2249 0df8 67DC373F 		.word	1060625511
 2250 0dfc B500383F 		.word	1060634805
 2251 0e00 FA24383F 		.word	1060644090
 2252 0e04 3649383F 		.word	1060653366
 2253 0e08 696D383F 		.word	1060662633
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 54


 2254 0e0c 9491383F 		.word	1060671892
 2255 0e10 B5B5383F 		.word	1060681141
 2256 0e14 CDD9383F 		.word	1060690381
 2257 0e18 DCFD383F 		.word	1060699612
 2258 0e1c E321393F 		.word	1060708835
 2259 0e20 E045393F 		.word	1060718048
 2260 0e24 D569393F 		.word	1060727253
 2261 0e28 C08D393F 		.word	1060736448
 2262 0e2c A3B1393F 		.word	1060745635
 2263 0e30 7CD5393F 		.word	1060754812
 2264 0e34 4DF9393F 		.word	1060763981
 2265 0e38 151D3A3F 		.word	1060773141
 2266 0e3c D4403A3F 		.word	1060782292
 2267 0e40 8A643A3F 		.word	1060791434
 2268 0e44 38883A3F 		.word	1060800568
 2269 0e48 DCAB3A3F 		.word	1060809692
 2270 0e4c 77CF3A3F 		.word	1060818807
 2271 0e50 0AF33A3F 		.word	1060827914
 2272 0e54 94163B3F 		.word	1060837012
 2273 0e58 153A3B3F 		.word	1060846101
 2274 0e5c 8D5D3B3F 		.word	1060855181
 2275 0e60 FD803B3F 		.word	1060864253
 2276 0e64 63A43B3F 		.word	1060873315
 2277 0e68 C1C73B3F 		.word	1060882369
 2278 0e6c 16EB3B3F 		.word	1060891414
 2279 0e70 620E3C3F 		.word	1060900450
 2280 0e74 A5313C3F 		.word	1060909477
 2281 0e78 E0543C3F 		.word	1060918496
 2282 0e7c 12783C3F 		.word	1060927506
 2283 0e80 3B9B3C3F 		.word	1060936507
 2284 0e84 5BBE3C3F 		.word	1060945499
 2285 0e88 73E13C3F 		.word	1060954483
 2286 0e8c 81043D3F 		.word	1060963457
 2287 0e90 88273D3F 		.word	1060972424
 2288 0e94 854A3D3F 		.word	1060981381
 2289 0e98 7A6D3D3F 		.word	1060990330
 2290 0e9c 66903D3F 		.word	1060999270
 2291 0ea0 49B33D3F 		.word	1061008201
 2292 0ea4 23D63D3F 		.word	1061017123
 2293 0ea8 F5F83D3F 		.word	1061026037
 2294 0eac BE1B3E3F 		.word	1061034942
 2295 0eb0 7F3E3E3F 		.word	1061043839
 2296 0eb4 37613E3F 		.word	1061052727
 2297 0eb8 E6833E3F 		.word	1061061606
 2298 0ebc 8DA63E3F 		.word	1061070477
 2299 0ec0 2BC93E3F 		.word	1061079339
 2300 0ec4 C0EB3E3F 		.word	1061088192
 2301 0ec8 4C0E3F3F 		.word	1061097036
 2302 0ecc D1303F3F 		.word	1061105873
 2303 0ed0 4C533F3F 		.word	1061114700
 2304 0ed4 BF753F3F 		.word	1061123519
 2305 0ed8 29983F3F 		.word	1061132329
 2306 0edc 8BBA3F3F 		.word	1061141131
 2307 0ee0 E4DC3F3F 		.word	1061149924
 2308 0ee4 34FF3F3F 		.word	1061158708
 2309 0ee8 7C21403F 		.word	1061167484
 2310 0eec BC43403F 		.word	1061176252
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 55


 2311 0ef0 F365403F 		.word	1061185011
 2312 0ef4 2188403F 		.word	1061193761
 2313 0ef8 47AA403F 		.word	1061202503
 2314 0efc 64CC403F 		.word	1061211236
 2315 0f00 79EE403F 		.word	1061219961
 2316 0f04 8510413F 		.word	1061228677
 2317 0f08 8932413F 		.word	1061237385
 2318 0f0c 8454413F 		.word	1061246084
 2319 0f10 7776413F 		.word	1061254775
 2320 0f14 6198413F 		.word	1061263457
 2321 0f18 43BA413F 		.word	1061272131
 2322 0f1c 1CDC413F 		.word	1061280796
 2323 0f20 EEFD413F 		.word	1061289454
 2324 0f24 B61F423F 		.word	1061298102
 2325 0f28 7641423F 		.word	1061306742
 2326 0f2c 2E63423F 		.word	1061315374
 2327 0f30 DD84423F 		.word	1061323997
 2328 0f34 84A6423F 		.word	1061332612
 2329 0f38 22C8423F 		.word	1061341218
 2330 0f3c B8E9423F 		.word	1061349816
 2331 0f40 460B433F 		.word	1061358406
 2332 0f44 CB2C433F 		.word	1061366987
 2333 0f48 484E433F 		.word	1061375560
 2334 0f4c BC6F433F 		.word	1061384124
 2335 0f50 2891433F 		.word	1061392680
 2336 0f54 8CB2433F 		.word	1061401228
 2337 0f58 E7D3433F 		.word	1061409767
 2338 0f5c 3AF5433F 		.word	1061418298
 2339 0f60 8516443F 		.word	1061426821
 2340 0f64 C737443F 		.word	1061435335
 2341 0f68 0159443F 		.word	1061443841
 2342 0f6c 337A443F 		.word	1061452339
 2343 0f70 5D9B443F 		.word	1061460829
 2344 0f74 7EBC443F 		.word	1061469310
 2345 0f78 97DD443F 		.word	1061477783
 2346 0f7c A8FE443F 		.word	1061486248
 2347 0f80 B01F453F 		.word	1061494704
 2348 0f84 B040453F 		.word	1061503152
 2349 0f88 A861453F 		.word	1061511592
 2350 0f8c 9882453F 		.word	1061520024
 2351 0f90 7FA3453F 		.word	1061528447
 2352 0f94 5EC4453F 		.word	1061536862
 2353 0f98 35E5453F 		.word	1061545269
 2354 0f9c 0406463F 		.word	1061553668
 2355 0fa0 CA26463F 		.word	1061562058
 2356 0fa4 8947463F 		.word	1061570441
 2357 0fa8 3F68463F 		.word	1061578815
 2358 0fac ED88463F 		.word	1061587181
 2359 0fb0 93A9463F 		.word	1061595539
 2360 0fb4 30CA463F 		.word	1061603888
 2361 0fb8 C6EA463F 		.word	1061612230
 2362 0fbc 530B473F 		.word	1061620563
 2363 0fc0 D82B473F 		.word	1061628888
 2364 0fc4 554C473F 		.word	1061637205
 2365 0fc8 CA6C473F 		.word	1061645514
 2366 0fcc 378D473F 		.word	1061653815
 2367 0fd0 9CAD473F 		.word	1061662108
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 56


 2368 0fd4 F8CD473F 		.word	1061670392
 2369 0fd8 4DEE473F 		.word	1061678669
 2370 0fdc 990E483F 		.word	1061686937
 2371 0fe0 DE2E483F 		.word	1061695198
 2372 0fe4 1A4F483F 		.word	1061703450
 2373 0fe8 4E6F483F 		.word	1061711694
 2374 0fec 7A8F483F 		.word	1061719930
 2375 0ff0 9FAF483F 		.word	1061728159
 2376 0ff4 BBCF483F 		.word	1061736379
 2377 0ff8 CFEF483F 		.word	1061744591
 2378 0ffc DB0F493F 		.word	1061752795
 2379              		.text
 2380              	.Letext0:
 2381              		.file 3 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 2382              		.file 4 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 2383              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 2384              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2385              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2386              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2387              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2388              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2389              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2390              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2391              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 2392              		.file 14 "Core/Inc/adc.h"
 2393              		.file 15 "Core/Inc/usart.h"
 2394              		.file 16 "Core/Inc/atan_lut.h"
 2395              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2396              		.file 18 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/stdio.h"
 2397              		.file 19 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/math.h"
 2398              		.file 20 "Core/Inc/tim.h"
 2399              		.file 21 "Core/Inc/gpio.h"
 2400              		.file 22 "<built-in>"
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 57


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:26     .text.decayAndMerge:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:32     .text.decayAndMerge:00000000 decayAndMerge
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:93     .text.decayAndMerge:00000040 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:100    .rodata.HallPositionOutput.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:122    .text.HallPositionOutput:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:128    .text.HallPositionOutput:00000000 HallPositionOutput
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:357    .text.HallPositionOutput:00000128 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:369    .text.HallPositionOutput_10Pair:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:375    .text.HallPositionOutput_10Pair:00000000 HallPositionOutput_10Pair
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:402    .text.HallPositionOutput_10Pair:00000020 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:438    .text.HallPositionOutput_10Pair:00000044 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:622    .text.HallPositionOutput_10Pair:00000140 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:635    .text.HallPositionOutput_20Pair:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:641    .text.HallPositionOutput_20Pair:00000000 HallPositionOutput_20Pair
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:668    .text.HallPositionOutput_20Pair:00000020 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:686    .text.HallPositionOutput_20Pair:00000032 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:870    .text.HallPositionOutput_20Pair:0000012c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:883    .text.__io_putchar:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:889    .text.__io_putchar:00000000 __io_putchar
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:925    .text.__io_putchar:0000001c $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:930    .rodata.Error_Handler.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:934    .text.Error_Handler:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:940    .text.Error_Handler:00000000 Error_Handler
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:982    .text.Error_Handler:00000014 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:987    .text.SystemClock_Config:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:993    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:1123   .rodata.main.str1.4:00000000 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:1128   .text.main:00000000 $t
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:1134   .text.main:00000000 main
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:1338   .text.main:000000e8 $d
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:1354   .rodata.ATAN_LUT:00000000 ATAN_LUT
/var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s:1351   .rodata.ATAN_LUT:00000000 $d

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_dmul
__aeabi_i2f
__aeabi_fmul
__aeabi_f2d
__aeabi_dadd
__aeabi_d2iz
HAL_GPIO_WritePin
puts
printf
HAL_UART_Transmit
huart1
HAL_Delay
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_fsub
__aeabi_fcmpeq
__aeabi_f2iz
HAL_Init
ARM GAS  /var/folders/8x/_y6g3dfs0698dfd49y4vcg_w0000gn/T//ccEd0ltW.s 			page 58


MX_GPIO_Init
MX_ADC1_Init
MX_ADC2_Init
MX_USART1_UART_Init
MX_TIM2_Init
atan2f
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
hadc1
hadc2
