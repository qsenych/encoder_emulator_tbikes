ARM GAS  /tmp/cc6clGCp.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.global	__aeabi_i2d
  19              		.global	__aeabi_dmul
  20              		.global	__aeabi_i2f
  21              		.global	__aeabi_fmul
  22              		.global	__aeabi_f2d
  23              		.global	__aeabi_dadd
  24              		.global	__aeabi_d2iz
  25              		.section	.text.decayAndMerge,"ax",%progbits
  26              		.align	1
  27              		.global	decayAndMerge
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  32              	decayAndMerge:
  33              	.LVL0:
  34              	.LFB71:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "tim.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
ARM GAS  /tmp/cc6clGCp.s 			page 2


  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include "atan_lut.h"
  29:Core/Src/main.c **** #include "math.h"
  30:Core/Src/main.c **** #include "stm32f1xx_hal_gpio.h"
  31:Core/Src/main.c **** #include <stdio.h>
  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** #define SIN_PERIODS_PER_REV 1
  42:Core/Src/main.c **** #define HALL_PERIODS_PER_REV 20
  43:Core/Src/main.c **** #define OFFSET 0
  44:Core/Src/main.c **** #define LUT_SIZE 1024
  45:Core/Src/main.c **** #define ADC_MAX 3479.0
  46:Core/Src/main.c **** #define ADC_MIN 1850.0
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PD */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  51:Core/Src/main.c **** /* USER CODE BEGIN PM */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PM */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE BEGIN PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PV */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  62:Core/Src/main.c **** void SystemClock_Config(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** static float fast_atan(uint16_t ADC_C, uint16_t ADC_S);
  65:Core/Src/main.c **** void HallPositionOutput(int theta_deg);
  66:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****   * @brief  The application entry point.
  76:Core/Src/main.c ****   * @retval int
  77:Core/Src/main.c ****   */
  78:Core/Src/main.c **** int main(void)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
ARM GAS  /tmp/cc6clGCp.s 			page 3


  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   uint16_t sin_adc = 0;
  84:Core/Src/main.c ****   uint16_t cos_adc = 0;
  85:Core/Src/main.c ****   float theta_rad;
  86:Core/Src/main.c ****   int theta_deg; // only for debugging
  87:Core/Src/main.c ****   int historical_value = 0; // Initialize historical value for decay and merge
  88:Core/Src/main.c ****   int merged_value = 0; // Initialize merged value
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   int sin;
  93:Core/Src/main.c ****   int cos; 
  94:Core/Src/main.c ****   int rad; 
  95:Core/Src/main.c ****   int deg;
  96:Core/Src/main.c ****   /* USER CODE END 1 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 101:Core/Src/main.c ****   HAL_Init();
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END Init */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Configure the system clock */
 108:Core/Src/main.c ****   SystemClock_Config();
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE END SysInit */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Initialize all configured peripherals */
 115:Core/Src/main.c ****   MX_GPIO_Init();
 116:Core/Src/main.c ****   MX_ADC1_Init();
 117:Core/Src/main.c ****   MX_ADC2_Init();
 118:Core/Src/main.c ****   MX_USART1_UART_Init();
 119:Core/Src/main.c ****   MX_TIM2_Init();
 120:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END 2 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Infinite loop */
 125:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 126:Core/Src/main.c ****   while (1) {
 127:Core/Src/main.c ****     HAL_ADC_Start(&hadc1); // Needs to be called every time
 128:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 129:Core/Src/main.c ****     cos_adc = decayAndMerge(cos_adc, HAL_ADC_GetValue(&hadc1)); // Decay and merge the new value wi
 130:Core/Src/main.c ****     
 131:Core/Src/main.c ****     HAL_ADC_Start(&hadc2); // Needs to be called every time
 132:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc2, HAL_MAX_DELAY);
 133:Core/Src/main.c ****     sin_adc = decayAndMerge(sin_adc, HAL_ADC_GetValue(&hadc2)); // Decay and merge the new value wi
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****     // cos_adc = 1000; 
 136:Core/Src/main.c ****     // sin_adc = 3000; // Test values for debugging
 137:Core/Src/main.c ****     
 138:Core/Src/main.c ****     // theta_rad = fast_atan(cos_adc, sin_adc);
ARM GAS  /tmp/cc6clGCp.s 			page 4


 139:Core/Src/main.c ****     const float midpoint = (ADC_MAX + ADC_MIN) / 2.0f;
 140:Core/Src/main.c ****     float num = cos_adc - midpoint;
 141:Core/Src/main.c ****     float den = sin_adc - midpoint;
 142:Core/Src/main.c ****     if (den != 0){
 143:Core/Src/main.c ****       theta_rad = atan2f(num, den); // Use atan2 for better handling of quadrants
 144:Core/Src/main.c ****     }
 145:Core/Src/main.c ****     else {
 146:Core/Src/main.c ****       theta_rad = 0; // Handle the case where den is zero to avoid division by zero
 147:Core/Src/main.c ****     }
 148:Core/Src/main.c ****       
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****    
 151:Core/Src/main.c ****     theta_deg = (int)(180.0 / M_PI * theta_rad)+180;
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     // if (cos_adc > 180) {
 154:Core/Src/main.c ****     //   HAL_GPIO_WritePin(DEBUG_LED_GPIO_Port, DEBUG_LED_Pin, GPIO_PIN_SET);
 155:Core/Src/main.c ****     // } else {
 156:Core/Src/main.c ****     //   HAL_GPIO_WritePin(DEBUG_LED_GPIO_Port, DEBUG_LED_Pin, GPIO_PIN_RESET);
 157:Core/Src/main.c ****     // }
 158:Core/Src/main.c ****     /* USER CODE END WHILE */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 161:Core/Src/main.c ****     rad = (int)(theta_rad * 1000); // Convert to milliradians
 162:Core/Src/main.c ****     // printf("ADC_C: %d ADC_S: %d theta_deg: %d rad: %d (millirad)\r\n", cos_adc, sin_adc, theta_d
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****     HallPositionOutput_10PairNot(theta_deg); // Call the function to output the Hall position
 165:Core/Src/main.c ****     // HAL_Delay(10); 
 166:Core/Src/main.c ****     
 167:Core/Src/main.c ****   
 168:Core/Src/main.c ****   } 
 169:Core/Src/main.c ****   /* USER CODE END 3 */
 170:Core/Src/main.c **** }
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** /**
 173:Core/Src/main.c ****   * @brief System Clock Configuration
 174:Core/Src/main.c ****   * @retval None
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c **** void SystemClock_Config(void)
 177:Core/Src/main.c **** {
 178:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 179:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 180:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 183:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 184:Core/Src/main.c ****   */
 185:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 187:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 191:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c **** 
ARM GAS  /tmp/cc6clGCp.s 			page 5


 196:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 199:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 200:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 201:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 210:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 211:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     Error_Handler();
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c **** }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** static float fast_atan(uint16_t ADC_C, uint16_t ADC_S) {
 220:Core/Src/main.c ****   const float midpoint = (ADC_MAX + ADC_MIN) / 2.0f;
 221:Core/Src/main.c ****   float num = ADC_C - midpoint;
 222:Core/Src/main.c ****   float den = ADC_S - midpoint;
 223:Core/Src/main.c ****   if (den == 0)
 224:Core/Src/main.c ****     return (num >= 0) ? 0 : M_PI;
 225:Core/Src/main.c ****   float r = fabs(num / den);
 226:Core/Src/main.c ****   int index = (int)(r * 1023.0f);
 227:Core/Src/main.c ****   float theta = ATAN_LUT[index];
 228:Core/Src/main.c ****   float next_theta = ATAN_LUT[index + 1];
 229:Core/Src/main.c ****   theta += (r - (index / 1023.0f)) * (next_theta - theta);
 230:Core/Src/main.c ****   if (num > den)
 231:Core/Src/main.c ****     theta = M_PI_2 - theta;
 232:Core/Src/main.c ****   if (num < 0 && den > 0)
 233:Core/Src/main.c ****     return M_PI + theta;
 234:Core/Src/main.c ****   if (den < 0)
 235:Core/Src/main.c ****     return M_PI - theta;
 236:Core/Src/main.c ****   return theta;
 237:Core/Src/main.c **** }
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** int decayAndMerge(int historical_value, int new_value){
  35              		.loc 1 239 55 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		.loc 1 239 55 is_stmt 0 view .LVU1
  40 0000 D0B5     		push	{r4, r6, r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 16
  43              		.cfi_offset 4, -16
  44              		.cfi_offset 6, -12
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 0C46     		mov	r4, r1
ARM GAS  /tmp/cc6clGCp.s 			page 6


 240:Core/Src/main.c ****   if(historical_value == 0){
  48              		.loc 1 240 3 is_stmt 1 view .LVU2
  49              		.loc 1 240 5 is_stmt 0 view .LVU3
  50 0004 00B9     		cbnz	r0, .L2
 241:Core/Src/main.c ****     historical_value = new_value; // Initialize historical value if it's zero
  51              		.loc 1 241 22 view .LVU4
  52 0006 0846     		mov	r0, r1
  53              	.LVL1:
  54              	.L2:
 242:Core/Src/main.c ****   }
 243:Core/Src/main.c ****   float decay_rate = 0.05; 
  55              		.loc 1 243 3 is_stmt 1 view .LVU5
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   return (int)(historical_value * (1.0-decay_rate) + new_value * decay_rate);
  56              		.loc 1 245 3 view .LVU6
  57              		.loc 1 245 33 is_stmt 0 view .LVU7
  58 0008 FFF7FEFF 		bl	__aeabi_i2d
  59              	.LVL2:
  60              		.loc 1 245 33 view .LVU8
  61 000c 0CA3     		adr	r3, .L5
  62 000e D3E90023 		ldrd	r2, [r3]
  63 0012 FFF7FEFF 		bl	__aeabi_dmul
  64              	.LVL3:
  65 0016 0646     		mov	r6, r0
  66 0018 0F46     		mov	r7, r1
  67              		.loc 1 245 64 view .LVU9
  68 001a 2046     		mov	r0, r4
  69 001c FFF7FEFF 		bl	__aeabi_i2f
  70              	.LVL4:
  71 0020 0949     		ldr	r1, .L5+8
  72 0022 FFF7FEFF 		bl	__aeabi_fmul
  73              	.LVL5:
  74 0026 FFF7FEFF 		bl	__aeabi_f2d
  75              	.LVL6:
  76 002a 0246     		mov	r2, r0
  77 002c 0B46     		mov	r3, r1
  78              		.loc 1 245 52 view .LVU10
  79 002e 3046     		mov	r0, r6
  80 0030 3946     		mov	r1, r7
  81 0032 FFF7FEFF 		bl	__aeabi_dadd
  82              	.LVL7:
  83              		.loc 1 245 10 view .LVU11
  84 0036 FFF7FEFF 		bl	__aeabi_d2iz
  85              	.LVL8:
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   // // Decay the historical value by a factor of 0.9
 248:Core/Src/main.c ****   // historical_value = (int)(historical_value * 0.9 + new_value * 0.1);
 249:Core/Src/main.c ****   // // Merge the new value with the decayed historical value
 250:Core/Src/main.c ****   // int merged_value = (int)(historical_value * 0.5 + new_value * 0.5);
 251:Core/Src/main.c ****   // return merged_value;
 252:Core/Src/main.c **** }
  86              		.loc 1 252 1 view .LVU12
  87 003a D0BD     		pop	{r4, r6, r7, pc}
  88              	.LVL9:
  89              	.L6:
  90              		.loc 1 252 1 view .LVU13
  91 003c AFF30080 		.align	3
ARM GAS  /tmp/cc6clGCp.s 			page 7


  92              	.L5:
  93 0040 00000066 		.word	1711276032
  94 0044 6666EE3F 		.word	1072588390
  95 0048 CDCC4C3D 		.word	1028443341
  96              		.cfi_endproc
  97              	.LFE71:
  99              		.section	.text.HallPositionOutput,"ax",%progbits
 100              		.align	1
 101              		.global	HallPositionOutput
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 106              	HallPositionOutput:
 107              	.LVL10:
 108              	.LFB72:
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** /**
 255:Core/Src/main.c ****  * @brief  This function is used to output the Hall position. For a single pole pair? 
 256:Core/Src/main.c ****  * @param  theta_deg: The angle in degrees.
 257:Core/Src/main.c ****  * @retval None
 258:Core/Src/main.c ****  * @author Alex
 259:Core/Src/main.c ****  */
 260:Core/Src/main.c **** void HallPositionOutput(theta_deg){
 109              		.loc 1 260 35 is_stmt 1 view -0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              		.loc 1 260 35 is_stmt 0 view .LVU15
 114 0000 10B5     		push	{r4, lr}
 115              	.LCFI1:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 261:Core/Src/main.c ****   if(theta_deg >= 0 && theta_deg < 60) {
 119              		.loc 1 261 3 is_stmt 1 view .LVU16
 120              		.loc 1 261 5 is_stmt 0 view .LVU17
 121 0002 3B28     		cmp	r0, #59
 122 0004 24D9     		bls	.L15
 262:Core/Src/main.c ****     //HALL A = 1, HALL_B = 0, HALL_C = 1
 263:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 264:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 265:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 0, HALL C = 1\r\n");
 268:Core/Src/main.c ****   } else if (theta_deg >= 60 && theta_deg < 120){
 123              		.loc 1 268 10 is_stmt 1 view .LVU18
 124              		.loc 1 268 30 is_stmt 0 view .LVU19
 125 0006 A0F13C03 		sub	r3, r0, #60
 126              		.loc 1 268 13 view .LVU20
 127 000a 3B2B     		cmp	r3, #59
 128 000c 31D9     		bls	.L16
 269:Core/Src/main.c ****     //HALL A = 1, HALL_B = 0, HALL_C = 0
 270:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 271:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 272:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
ARM GAS  /tmp/cc6clGCp.s 			page 8


 275:Core/Src/main.c ****   } else if (theta_deg >= 120 && theta_deg < 180){
 129              		.loc 1 275 10 is_stmt 1 view .LVU21
 130              		.loc 1 275 31 is_stmt 0 view .LVU22
 131 000e A0F17803 		sub	r3, r0, #120
 132              		.loc 1 275 13 view .LVU23
 133 0012 3B2B     		cmp	r3, #59
 134 0014 3ED9     		bls	.L17
 276:Core/Src/main.c ****     //HALL A = 1, HALL_B = 1, HALL_C = 0
 277:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 278:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 279:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 282:Core/Src/main.c ****   } else if (theta_deg >= 180 && theta_deg < 240){
 135              		.loc 1 282 10 is_stmt 1 view .LVU24
 136              		.loc 1 282 31 is_stmt 0 view .LVU25
 137 0016 A0F1B403 		sub	r3, r0, #180
 138              		.loc 1 282 13 view .LVU26
 139 001a 3B2B     		cmp	r3, #59
 140 001c 4BD9     		bls	.L18
 283:Core/Src/main.c ****     //HALL A = 0, HALL_B = 1, HALL_C = 0
 284:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 285:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 286:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 289:Core/Src/main.c ****   } else if (theta_deg >= 240 && theta_deg < 300){
 141              		.loc 1 289 10 is_stmt 1 view .LVU27
 142              		.loc 1 289 31 is_stmt 0 view .LVU28
 143 001e A0F1F003 		sub	r3, r0, #240
 144              		.loc 1 289 13 view .LVU29
 145 0022 3B2B     		cmp	r3, #59
 146 0024 58D9     		bls	.L19
 290:Core/Src/main.c ****     //HALL A = 0, HALL_B = 1, HALL_C = 1
 291:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 292:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 293:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 296:Core/Src/main.c ****   } else if (theta_deg >= 300 && theta_deg < 360){
 147              		.loc 1 296 10 is_stmt 1 view .LVU30
 148              		.loc 1 296 31 is_stmt 0 view .LVU31
 149 0026 A0F59670 		sub	r0, r0, #300
 150              	.LVL11:
 151              		.loc 1 296 13 view .LVU32
 152 002a 3B28     		cmp	r0, #59
 153 002c 20D8     		bhi	.L7
 297:Core/Src/main.c ****     //HALL A = 0, HALL_B = 0, HALL_C = 1
 298:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 154              		.loc 1 298 5 is_stmt 1 view .LVU33
 155 002e 334C     		ldr	r4, .L20
 156 0030 0022     		movs	r2, #0
 157 0032 0821     		movs	r1, #8
 158 0034 2046     		mov	r0, r4
 159              	.LVL12:
 160              		.loc 1 298 5 is_stmt 0 view .LVU34
 161 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/cc6clGCp.s 			page 9


 162              	.LVL13:
 299:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 163              		.loc 1 299 5 is_stmt 1 view .LVU35
 164 003a 0022     		movs	r2, #0
 165 003c 2021     		movs	r1, #32
 166 003e 2046     		mov	r0, r4
 167 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 168              	.LVL14:
 300:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 169              		.loc 1 300 5 view .LVU36
 170 0044 0122     		movs	r2, #1
 171 0046 8021     		movs	r1, #128
 172 0048 2046     		mov	r0, r4
 173 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 174              	.LVL15:
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 303:Core/Src/main.c ****   } else {
 304:Core/Src/main.c ****     // Invalid angle
 305:Core/Src/main.c ****     // printf("Invalid angle: %d\r\n", theta_deg);
 306:Core/Src/main.c ****   }
 175              		.loc 1 306 3 view .LVU37
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** }
 176              		.loc 1 308 1 is_stmt 0 view .LVU38
 177 004e 0FE0     		b	.L7
 178              	.LVL16:
 179              	.L15:
 263:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 180              		.loc 1 263 5 is_stmt 1 view .LVU39
 181 0050 2A4C     		ldr	r4, .L20
 182 0052 0122     		movs	r2, #1
 183 0054 0821     		movs	r1, #8
 184 0056 2046     		mov	r0, r4
 185              	.LVL17:
 263:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 186              		.loc 1 263 5 is_stmt 0 view .LVU40
 187 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 188              	.LVL18:
 264:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 189              		.loc 1 264 5 is_stmt 1 view .LVU41
 190 005c 0022     		movs	r2, #0
 191 005e 2021     		movs	r1, #32
 192 0060 2046     		mov	r0, r4
 193 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 194              	.LVL19:
 265:Core/Src/main.c **** 
 195              		.loc 1 265 5 view .LVU42
 196 0066 0122     		movs	r2, #1
 197 0068 8021     		movs	r1, #128
 198 006a 2046     		mov	r0, r4
 199 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 200              	.LVL20:
 201              	.L7:
 202              		.loc 1 308 1 is_stmt 0 view .LVU43
 203 0070 10BD     		pop	{r4, pc}
 204              	.LVL21:
ARM GAS  /tmp/cc6clGCp.s 			page 10


 205              	.L16:
 270:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 206              		.loc 1 270 5 is_stmt 1 view .LVU44
 207 0072 224C     		ldr	r4, .L20
 208 0074 0122     		movs	r2, #1
 209 0076 0821     		movs	r1, #8
 210 0078 2046     		mov	r0, r4
 211              	.LVL22:
 270:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 212              		.loc 1 270 5 is_stmt 0 view .LVU45
 213 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 214              	.LVL23:
 271:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 215              		.loc 1 271 5 is_stmt 1 view .LVU46
 216 007e 0022     		movs	r2, #0
 217 0080 2021     		movs	r1, #32
 218 0082 2046     		mov	r0, r4
 219 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 220              	.LVL24:
 272:Core/Src/main.c **** 
 221              		.loc 1 272 5 view .LVU47
 222 0088 0022     		movs	r2, #0
 223 008a 8021     		movs	r1, #128
 224 008c 2046     		mov	r0, r4
 225 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 226              	.LVL25:
 227 0092 EDE7     		b	.L7
 228              	.LVL26:
 229              	.L17:
 277:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 230              		.loc 1 277 5 view .LVU48
 231 0094 194C     		ldr	r4, .L20
 232 0096 0122     		movs	r2, #1
 233 0098 0821     		movs	r1, #8
 234 009a 2046     		mov	r0, r4
 235              	.LVL27:
 277:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 236              		.loc 1 277 5 is_stmt 0 view .LVU49
 237 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 238              	.LVL28:
 278:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 239              		.loc 1 278 5 is_stmt 1 view .LVU50
 240 00a0 0122     		movs	r2, #1
 241 00a2 2021     		movs	r1, #32
 242 00a4 2046     		mov	r0, r4
 243 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 244              	.LVL29:
 279:Core/Src/main.c **** 
 245              		.loc 1 279 5 view .LVU51
 246 00aa 0022     		movs	r2, #0
 247 00ac 8021     		movs	r1, #128
 248 00ae 2046     		mov	r0, r4
 249 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 250              	.LVL30:
 251 00b4 DCE7     		b	.L7
 252              	.LVL31:
 253              	.L18:
ARM GAS  /tmp/cc6clGCp.s 			page 11


 284:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 254              		.loc 1 284 5 view .LVU52
 255 00b6 114C     		ldr	r4, .L20
 256 00b8 0022     		movs	r2, #0
 257 00ba 0821     		movs	r1, #8
 258 00bc 2046     		mov	r0, r4
 259              	.LVL32:
 284:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 260              		.loc 1 284 5 is_stmt 0 view .LVU53
 261 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
 262              	.LVL33:
 285:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 263              		.loc 1 285 5 is_stmt 1 view .LVU54
 264 00c2 0122     		movs	r2, #1
 265 00c4 2021     		movs	r1, #32
 266 00c6 2046     		mov	r0, r4
 267 00c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 268              	.LVL34:
 286:Core/Src/main.c **** 
 269              		.loc 1 286 5 view .LVU55
 270 00cc 0022     		movs	r2, #0
 271 00ce 8021     		movs	r1, #128
 272 00d0 2046     		mov	r0, r4
 273 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 274              	.LVL35:
 275 00d6 CBE7     		b	.L7
 276              	.LVL36:
 277              	.L19:
 291:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 278              		.loc 1 291 5 view .LVU56
 279 00d8 084C     		ldr	r4, .L20
 280 00da 0022     		movs	r2, #0
 281 00dc 0821     		movs	r1, #8
 282 00de 2046     		mov	r0, r4
 283              	.LVL37:
 291:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 284              		.loc 1 291 5 is_stmt 0 view .LVU57
 285 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 286              	.LVL38:
 292:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 287              		.loc 1 292 5 is_stmt 1 view .LVU58
 288 00e4 0122     		movs	r2, #1
 289 00e6 2021     		movs	r1, #32
 290 00e8 2046     		mov	r0, r4
 291 00ea FFF7FEFF 		bl	HAL_GPIO_WritePin
 292              	.LVL39:
 293:Core/Src/main.c **** 
 293              		.loc 1 293 5 view .LVU59
 294 00ee 0122     		movs	r2, #1
 295 00f0 8021     		movs	r1, #128
 296 00f2 2046     		mov	r0, r4
 297 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 298              	.LVL40:
 299 00f8 BAE7     		b	.L7
 300              	.L21:
 301 00fa 00BF     		.align	2
 302              	.L20:
ARM GAS  /tmp/cc6clGCp.s 			page 12


 303 00fc 000C0140 		.word	1073810432
 304              		.cfi_endproc
 305              	.LFE72:
 307              		.section	.text.HallPositionOutput_10Pair,"ax",%progbits
 308              		.align	1
 309              		.global	HallPositionOutput_10Pair
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 314              	HallPositionOutput_10Pair:
 315              	.LVL41:
 316              	.LFB73:
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** /**
 311:Core/Src/main.c ****  * @brief  This function is used to output the Hall position for a 10-pair motor. 
 312:Core/Src/main.c ****  * @param  theta_deg: The angle in degrees.
 313:Core/Src/main.c ****  * @retval None
 314:Core/Src/main.c ****  * @author Alex
 315:Core/Src/main.c ****  */
 316:Core/Src/main.c **** void HallPositionOutput_10Pair(theta_deg){
 317              		.loc 1 316 42 view -0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		.loc 1 316 42 is_stmt 0 view .LVU61
 322 0000 10B5     		push	{r4, lr}
 323              	.LCFI2:
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 4, -8
 326              		.cfi_offset 14, -4
 317:Core/Src/main.c ****   // Normalize the angle to a single electrical cycle (0-36 degrees)
 318:Core/Src/main.c ****   int theta_elec = theta_deg % 36;
 327              		.loc 1 318 3 is_stmt 1 view .LVU62
 328              		.loc 1 318 7 is_stmt 0 view .LVU63
 329 0002 434A     		ldr	r2, .L33
 330 0004 82FB0032 		smull	r3, r2, r2, r0
 331 0008 C317     		asrs	r3, r0, #31
 332 000a C3EBE203 		rsb	r3, r3, r2, asr #3
 333 000e 03EBC303 		add	r3, r3, r3, lsl #3
 334 0012 A0EB8303 		sub	r3, r0, r3, lsl #2
 335              	.LVL42:
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   if (theta_elec >= 0 && theta_elec < 6) {
 336              		.loc 1 320 3 is_stmt 1 view .LVU64
 337 0016 232B     		cmp	r3, #35
 338 0018 23D8     		bhi	.L22
 339 001a DFE803F0 		tbb	[pc, r3]
 340              	.L25:
 341 001e 12       		.byte	(.L30-.L25)/2
 342 001f 12       		.byte	(.L30-.L25)/2
 343 0020 12       		.byte	(.L30-.L25)/2
 344 0021 12       		.byte	(.L30-.L25)/2
 345 0022 12       		.byte	(.L30-.L25)/2
 346 0023 12       		.byte	(.L30-.L25)/2
 347 0024 23       		.byte	(.L29-.L25)/2
 348 0025 23       		.byte	(.L29-.L25)/2
 349 0026 23       		.byte	(.L29-.L25)/2
ARM GAS  /tmp/cc6clGCp.s 			page 13


 350 0027 23       		.byte	(.L29-.L25)/2
 351 0028 23       		.byte	(.L29-.L25)/2
 352 0029 23       		.byte	(.L29-.L25)/2
 353 002a 34       		.byte	(.L28-.L25)/2
 354 002b 34       		.byte	(.L28-.L25)/2
 355 002c 34       		.byte	(.L28-.L25)/2
 356 002d 34       		.byte	(.L28-.L25)/2
 357 002e 34       		.byte	(.L28-.L25)/2
 358 002f 34       		.byte	(.L28-.L25)/2
 359 0030 45       		.byte	(.L27-.L25)/2
 360 0031 45       		.byte	(.L27-.L25)/2
 361 0032 45       		.byte	(.L27-.L25)/2
 362 0033 45       		.byte	(.L27-.L25)/2
 363 0034 45       		.byte	(.L27-.L25)/2
 364 0035 45       		.byte	(.L27-.L25)/2
 365 0036 56       		.byte	(.L26-.L25)/2
 366 0037 56       		.byte	(.L26-.L25)/2
 367 0038 56       		.byte	(.L26-.L25)/2
 368 0039 56       		.byte	(.L26-.L25)/2
 369 003a 56       		.byte	(.L26-.L25)/2
 370 003b 56       		.byte	(.L26-.L25)/2
 371 003c 67       		.byte	(.L24-.L25)/2
 372 003d 67       		.byte	(.L24-.L25)/2
 373 003e 67       		.byte	(.L24-.L25)/2
 374 003f 67       		.byte	(.L24-.L25)/2
 375 0040 67       		.byte	(.L24-.L25)/2
 376 0041 67       		.byte	(.L24-.L25)/2
 377              		.p2align 1
 378              	.L30:
 321:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 379              		.loc 1 321 5 view .LVU65
 380 0042 344C     		ldr	r4, .L33+4
 381 0044 0022     		movs	r2, #0
 382 0046 0821     		movs	r1, #8
 383 0048 2046     		mov	r0, r4
 384              	.LVL43:
 385              		.loc 1 321 5 is_stmt 0 view .LVU66
 386 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 387              	.LVL44:
 322:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 388              		.loc 1 322 5 is_stmt 1 view .LVU67
 389 004e 0122     		movs	r2, #1
 390 0050 2021     		movs	r1, #32
 391 0052 2046     		mov	r0, r4
 392 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 393              	.LVL45:
 323:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 394              		.loc 1 323 5 view .LVU68
 395 0058 0022     		movs	r2, #0
 396 005a 8021     		movs	r1, #128
 397 005c 2046     		mov	r0, r4
 398 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 399              	.LVL46:
 400              	.L22:
 324:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 0, HALL C = 1\r\n");
 325:Core/Src/main.c ****   } else if (theta_elec >= 6 && theta_elec < 12) {
 326:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
ARM GAS  /tmp/cc6clGCp.s 			page 14


 327:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 328:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 329:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 330:Core/Src/main.c ****   } else if (theta_elec >= 12 && theta_elec < 18) {
 331:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 332:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 333:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 334:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 335:Core/Src/main.c ****   } else if (theta_elec >= 18 && theta_elec < 24) {
 336:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 337:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 338:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 339:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 340:Core/Src/main.c ****   } else if (theta_elec >= 24 && theta_elec < 30) {
 341:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 342:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 343:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 344:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 345:Core/Src/main.c ****   } else if (theta_elec >= 30 && theta_elec < 36) {
 346:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 347:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 348:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 349:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 350:Core/Src/main.c ****   } else {
 351:Core/Src/main.c ****     // printf("Invalid angle: %d\r\n", theta_deg);
 352:Core/Src/main.c ****   }
 353:Core/Src/main.c **** 
 354:Core/Src/main.c **** }
 401              		.loc 1 354 1 is_stmt 0 view .LVU69
 402 0062 10BD     		pop	{r4, pc}
 403              	.LVL47:
 404              	.L29:
 326:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 405              		.loc 1 326 5 is_stmt 1 view .LVU70
 406 0064 2B4C     		ldr	r4, .L33+4
 407 0066 0122     		movs	r2, #1
 408 0068 0821     		movs	r1, #8
 409 006a 2046     		mov	r0, r4
 410              	.LVL48:
 326:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 411              		.loc 1 326 5 is_stmt 0 view .LVU71
 412 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 413              	.LVL49:
 327:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 414              		.loc 1 327 5 is_stmt 1 view .LVU72
 415 0070 0122     		movs	r2, #1
 416 0072 2021     		movs	r1, #32
 417 0074 2046     		mov	r0, r4
 418 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 419              	.LVL50:
 328:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 420              		.loc 1 328 5 view .LVU73
 421 007a 0022     		movs	r2, #0
 422 007c 8021     		movs	r1, #128
 423 007e 2046     		mov	r0, r4
 424 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 425              	.LVL51:
ARM GAS  /tmp/cc6clGCp.s 			page 15


 426 0084 EDE7     		b	.L22
 427              	.LVL52:
 428              	.L28:
 331:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 429              		.loc 1 331 5 view .LVU74
 430 0086 234C     		ldr	r4, .L33+4
 431 0088 0122     		movs	r2, #1
 432 008a 0821     		movs	r1, #8
 433 008c 2046     		mov	r0, r4
 434              	.LVL53:
 331:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 435              		.loc 1 331 5 is_stmt 0 view .LVU75
 436 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 437              	.LVL54:
 332:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 438              		.loc 1 332 5 is_stmt 1 view .LVU76
 439 0092 0022     		movs	r2, #0
 440 0094 2021     		movs	r1, #32
 441 0096 2046     		mov	r0, r4
 442 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 443              	.LVL55:
 333:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 444              		.loc 1 333 5 view .LVU77
 445 009c 0022     		movs	r2, #0
 446 009e 8021     		movs	r1, #128
 447 00a0 2046     		mov	r0, r4
 448 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 449              	.LVL56:
 450 00a6 DCE7     		b	.L22
 451              	.LVL57:
 452              	.L27:
 336:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 453              		.loc 1 336 5 view .LVU78
 454 00a8 1A4C     		ldr	r4, .L33+4
 455 00aa 0122     		movs	r2, #1
 456 00ac 0821     		movs	r1, #8
 457 00ae 2046     		mov	r0, r4
 458              	.LVL58:
 336:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 459              		.loc 1 336 5 is_stmt 0 view .LVU79
 460 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 461              	.LVL59:
 337:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 462              		.loc 1 337 5 is_stmt 1 view .LVU80
 463 00b4 0022     		movs	r2, #0
 464 00b6 2021     		movs	r1, #32
 465 00b8 2046     		mov	r0, r4
 466 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 467              	.LVL60:
 338:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 468              		.loc 1 338 5 view .LVU81
 469 00be 0122     		movs	r2, #1
 470 00c0 8021     		movs	r1, #128
 471 00c2 2046     		mov	r0, r4
 472 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 473              	.LVL61:
 474 00c8 CBE7     		b	.L22
ARM GAS  /tmp/cc6clGCp.s 			page 16


 475              	.LVL62:
 476              	.L26:
 341:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 477              		.loc 1 341 5 view .LVU82
 478 00ca 124C     		ldr	r4, .L33+4
 479 00cc 0022     		movs	r2, #0
 480 00ce 0821     		movs	r1, #8
 481 00d0 2046     		mov	r0, r4
 482              	.LVL63:
 341:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 483              		.loc 1 341 5 is_stmt 0 view .LVU83
 484 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 485              	.LVL64:
 342:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 486              		.loc 1 342 5 is_stmt 1 view .LVU84
 487 00d6 0022     		movs	r2, #0
 488 00d8 2021     		movs	r1, #32
 489 00da 2046     		mov	r0, r4
 490 00dc FFF7FEFF 		bl	HAL_GPIO_WritePin
 491              	.LVL65:
 343:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 492              		.loc 1 343 5 view .LVU85
 493 00e0 0122     		movs	r2, #1
 494 00e2 8021     		movs	r1, #128
 495 00e4 2046     		mov	r0, r4
 496 00e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 497              	.LVL66:
 498 00ea BAE7     		b	.L22
 499              	.LVL67:
 500              	.L24:
 346:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 501              		.loc 1 346 5 view .LVU86
 502 00ec 094C     		ldr	r4, .L33+4
 503 00ee 0022     		movs	r2, #0
 504 00f0 0821     		movs	r1, #8
 505 00f2 2046     		mov	r0, r4
 506              	.LVL68:
 346:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 507              		.loc 1 346 5 is_stmt 0 view .LVU87
 508 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 509              	.LVL69:
 347:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 510              		.loc 1 347 5 is_stmt 1 view .LVU88
 511 00f8 0122     		movs	r2, #1
 512 00fa 2021     		movs	r1, #32
 513 00fc 2046     		mov	r0, r4
 514 00fe FFF7FEFF 		bl	HAL_GPIO_WritePin
 515              	.LVL70:
 348:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 516              		.loc 1 348 5 view .LVU89
 517 0102 0122     		movs	r2, #1
 518 0104 8021     		movs	r1, #128
 519 0106 2046     		mov	r0, r4
 520 0108 FFF7FEFF 		bl	HAL_GPIO_WritePin
 521              	.LVL71:
 352:Core/Src/main.c **** 
 522              		.loc 1 352 3 view .LVU90
ARM GAS  /tmp/cc6clGCp.s 			page 17


 523              		.loc 1 354 1 is_stmt 0 view .LVU91
 524 010c A9E7     		b	.L22
 525              	.L34:
 526 010e 00BF     		.align	2
 527              	.L33:
 528 0110 398EE338 		.word	954437177
 529 0114 000C0140 		.word	1073810432
 530              		.cfi_endproc
 531              	.LFE73:
 533              		.section	.text.HallPositionOutput_10PairNot,"ax",%progbits
 534              		.align	1
 535              		.global	HallPositionOutput_10PairNot
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 540              	HallPositionOutput_10PairNot:
 541              	.LVL72:
 542              	.LFB74:
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** 
 357:Core/Src/main.c **** /**
 358:Core/Src/main.c ****  * @brief  This function is used to output the Hall position for a 10-pair motor. 
 359:Core/Src/main.c ****  * @param  theta_deg: The angle in degrees.
 360:Core/Src/main.c ****  * @retval None
 361:Core/Src/main.c ****  * @author Alex
 362:Core/Src/main.c ****  */
 363:Core/Src/main.c **** void HallPositionOutput_10PairNot(theta_deg){
 543              		.loc 1 363 45 is_stmt 1 view -0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              		.loc 1 363 45 is_stmt 0 view .LVU93
 548 0000 10B5     		push	{r4, lr}
 549              	.LCFI3:
 550              		.cfi_def_cfa_offset 8
 551              		.cfi_offset 4, -8
 552              		.cfi_offset 14, -4
 364:Core/Src/main.c ****   // Normalize the angle to a single electrical cycle (0-36 degrees)
 365:Core/Src/main.c ****   int theta_elec = theta_deg % 36;
 553              		.loc 1 365 3 is_stmt 1 view .LVU94
 554              		.loc 1 365 7 is_stmt 0 view .LVU95
 555 0002 434A     		ldr	r2, .L46
 556 0004 82FB0032 		smull	r3, r2, r2, r0
 557 0008 C317     		asrs	r3, r0, #31
 558 000a C3EBE203 		rsb	r3, r3, r2, asr #3
 559 000e 03EBC303 		add	r3, r3, r3, lsl #3
 560 0012 A0EB8303 		sub	r3, r0, r3, lsl #2
 561              	.LVL73:
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****   if (theta_elec >= 0 && theta_elec < 6) {
 562              		.loc 1 367 3 is_stmt 1 view .LVU96
 563 0016 232B     		cmp	r3, #35
 564 0018 23D8     		bhi	.L35
 565 001a DFE803F0 		tbb	[pc, r3]
 566              	.L38:
 567 001e 12       		.byte	(.L43-.L38)/2
 568 001f 12       		.byte	(.L43-.L38)/2
ARM GAS  /tmp/cc6clGCp.s 			page 18


 569 0020 12       		.byte	(.L43-.L38)/2
 570 0021 12       		.byte	(.L43-.L38)/2
 571 0022 12       		.byte	(.L43-.L38)/2
 572 0023 12       		.byte	(.L43-.L38)/2
 573 0024 23       		.byte	(.L42-.L38)/2
 574 0025 23       		.byte	(.L42-.L38)/2
 575 0026 23       		.byte	(.L42-.L38)/2
 576 0027 23       		.byte	(.L42-.L38)/2
 577 0028 23       		.byte	(.L42-.L38)/2
 578 0029 23       		.byte	(.L42-.L38)/2
 579 002a 34       		.byte	(.L41-.L38)/2
 580 002b 34       		.byte	(.L41-.L38)/2
 581 002c 34       		.byte	(.L41-.L38)/2
 582 002d 34       		.byte	(.L41-.L38)/2
 583 002e 34       		.byte	(.L41-.L38)/2
 584 002f 34       		.byte	(.L41-.L38)/2
 585 0030 45       		.byte	(.L40-.L38)/2
 586 0031 45       		.byte	(.L40-.L38)/2
 587 0032 45       		.byte	(.L40-.L38)/2
 588 0033 45       		.byte	(.L40-.L38)/2
 589 0034 45       		.byte	(.L40-.L38)/2
 590 0035 45       		.byte	(.L40-.L38)/2
 591 0036 56       		.byte	(.L39-.L38)/2
 592 0037 56       		.byte	(.L39-.L38)/2
 593 0038 56       		.byte	(.L39-.L38)/2
 594 0039 56       		.byte	(.L39-.L38)/2
 595 003a 56       		.byte	(.L39-.L38)/2
 596 003b 56       		.byte	(.L39-.L38)/2
 597 003c 67       		.byte	(.L37-.L38)/2
 598 003d 67       		.byte	(.L37-.L38)/2
 599 003e 67       		.byte	(.L37-.L38)/2
 600 003f 67       		.byte	(.L37-.L38)/2
 601 0040 67       		.byte	(.L37-.L38)/2
 602 0041 67       		.byte	(.L37-.L38)/2
 603              		.p2align 1
 604              	.L43:
 368:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 605              		.loc 1 368 5 view .LVU97
 606 0042 344C     		ldr	r4, .L46+4
 607 0044 0122     		movs	r2, #1
 608 0046 0821     		movs	r1, #8
 609 0048 2046     		mov	r0, r4
 610              	.LVL74:
 611              		.loc 1 368 5 is_stmt 0 view .LVU98
 612 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 613              	.LVL75:
 369:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 614              		.loc 1 369 5 is_stmt 1 view .LVU99
 615 004e 0022     		movs	r2, #0
 616 0050 2021     		movs	r1, #32
 617 0052 2046     		mov	r0, r4
 618 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 619              	.LVL76:
 370:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 620              		.loc 1 370 5 view .LVU100
 621 0058 0122     		movs	r2, #1
 622 005a 8021     		movs	r1, #128
ARM GAS  /tmp/cc6clGCp.s 			page 19


 623 005c 2046     		mov	r0, r4
 624 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 625              	.LVL77:
 626              	.L35:
 371:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 0, HALL C = 1\r\n");
 372:Core/Src/main.c ****   } else if (theta_elec >= 6 && theta_elec < 12) {
 373:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 374:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 375:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 376:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 377:Core/Src/main.c ****   } else if (theta_elec >= 12 && theta_elec < 18) {
 378:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 379:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 380:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 381:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 382:Core/Src/main.c ****   } else if (theta_elec >= 18 && theta_elec < 24) {
 383:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 384:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 385:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 386:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 387:Core/Src/main.c ****   } else if (theta_elec >= 24 && theta_elec < 30) {
 388:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 389:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 390:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 391:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 392:Core/Src/main.c ****   } else if (theta_elec >= 30 && theta_elec < 36) {
 393:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 394:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 395:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 396:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 397:Core/Src/main.c ****   } else {
 398:Core/Src/main.c ****     // printf("Invalid angle: %d\r\n", theta_deg);
 399:Core/Src/main.c ****   }
 400:Core/Src/main.c **** 
 401:Core/Src/main.c **** }
 627              		.loc 1 401 1 is_stmt 0 view .LVU101
 628 0062 10BD     		pop	{r4, pc}
 629              	.LVL78:
 630              	.L42:
 373:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 631              		.loc 1 373 5 is_stmt 1 view .LVU102
 632 0064 2B4C     		ldr	r4, .L46+4
 633 0066 0022     		movs	r2, #0
 634 0068 0821     		movs	r1, #8
 635 006a 2046     		mov	r0, r4
 636              	.LVL79:
 373:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 637              		.loc 1 373 5 is_stmt 0 view .LVU103
 638 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 639              	.LVL80:
 374:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 640              		.loc 1 374 5 is_stmt 1 view .LVU104
 641 0070 0022     		movs	r2, #0
 642 0072 2021     		movs	r1, #32
 643 0074 2046     		mov	r0, r4
 644 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 645              	.LVL81:
ARM GAS  /tmp/cc6clGCp.s 			page 20


 375:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 646              		.loc 1 375 5 view .LVU105
 647 007a 0122     		movs	r2, #1
 648 007c 8021     		movs	r1, #128
 649 007e 2046     		mov	r0, r4
 650 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 651              	.LVL82:
 652 0084 EDE7     		b	.L35
 653              	.LVL83:
 654              	.L41:
 378:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 655              		.loc 1 378 5 view .LVU106
 656 0086 234C     		ldr	r4, .L46+4
 657 0088 0022     		movs	r2, #0
 658 008a 0821     		movs	r1, #8
 659 008c 2046     		mov	r0, r4
 660              	.LVL84:
 378:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 661              		.loc 1 378 5 is_stmt 0 view .LVU107
 662 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 663              	.LVL85:
 379:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 664              		.loc 1 379 5 is_stmt 1 view .LVU108
 665 0092 0122     		movs	r2, #1
 666 0094 2021     		movs	r1, #32
 667 0096 2046     		mov	r0, r4
 668 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 669              	.LVL86:
 380:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 670              		.loc 1 380 5 view .LVU109
 671 009c 0122     		movs	r2, #1
 672 009e 8021     		movs	r1, #128
 673 00a0 2046     		mov	r0, r4
 674 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 675              	.LVL87:
 676 00a6 DCE7     		b	.L35
 677              	.LVL88:
 678              	.L40:
 383:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 679              		.loc 1 383 5 view .LVU110
 680 00a8 1A4C     		ldr	r4, .L46+4
 681 00aa 0022     		movs	r2, #0
 682 00ac 0821     		movs	r1, #8
 683 00ae 2046     		mov	r0, r4
 684              	.LVL89:
 383:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 685              		.loc 1 383 5 is_stmt 0 view .LVU111
 686 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 687              	.LVL90:
 384:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 688              		.loc 1 384 5 is_stmt 1 view .LVU112
 689 00b4 0122     		movs	r2, #1
 690 00b6 2021     		movs	r1, #32
 691 00b8 2046     		mov	r0, r4
 692 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 693              	.LVL91:
 385:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
ARM GAS  /tmp/cc6clGCp.s 			page 21


 694              		.loc 1 385 5 view .LVU113
 695 00be 0022     		movs	r2, #0
 696 00c0 8021     		movs	r1, #128
 697 00c2 2046     		mov	r0, r4
 698 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 699              	.LVL92:
 700 00c8 CBE7     		b	.L35
 701              	.LVL93:
 702              	.L39:
 388:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 703              		.loc 1 388 5 view .LVU114
 704 00ca 124C     		ldr	r4, .L46+4
 705 00cc 0122     		movs	r2, #1
 706 00ce 0821     		movs	r1, #8
 707 00d0 2046     		mov	r0, r4
 708              	.LVL94:
 388:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 709              		.loc 1 388 5 is_stmt 0 view .LVU115
 710 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 711              	.LVL95:
 389:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 712              		.loc 1 389 5 is_stmt 1 view .LVU116
 713 00d6 0122     		movs	r2, #1
 714 00d8 2021     		movs	r1, #32
 715 00da 2046     		mov	r0, r4
 716 00dc FFF7FEFF 		bl	HAL_GPIO_WritePin
 717              	.LVL96:
 390:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 718              		.loc 1 390 5 view .LVU117
 719 00e0 0022     		movs	r2, #0
 720 00e2 8021     		movs	r1, #128
 721 00e4 2046     		mov	r0, r4
 722 00e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 723              	.LVL97:
 724 00ea BAE7     		b	.L35
 725              	.LVL98:
 726              	.L37:
 393:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 727              		.loc 1 393 5 view .LVU118
 728 00ec 094C     		ldr	r4, .L46+4
 729 00ee 0122     		movs	r2, #1
 730 00f0 0821     		movs	r1, #8
 731 00f2 2046     		mov	r0, r4
 732              	.LVL99:
 393:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 733              		.loc 1 393 5 is_stmt 0 view .LVU119
 734 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 735              	.LVL100:
 394:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 736              		.loc 1 394 5 is_stmt 1 view .LVU120
 737 00f8 0022     		movs	r2, #0
 738 00fa 2021     		movs	r1, #32
 739 00fc 2046     		mov	r0, r4
 740 00fe FFF7FEFF 		bl	HAL_GPIO_WritePin
 741              	.LVL101:
 395:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 742              		.loc 1 395 5 view .LVU121
ARM GAS  /tmp/cc6clGCp.s 			page 22


 743 0102 0022     		movs	r2, #0
 744 0104 8021     		movs	r1, #128
 745 0106 2046     		mov	r0, r4
 746 0108 FFF7FEFF 		bl	HAL_GPIO_WritePin
 747              	.LVL102:
 399:Core/Src/main.c **** 
 748              		.loc 1 399 3 view .LVU122
 749              		.loc 1 401 1 is_stmt 0 view .LVU123
 750 010c A9E7     		b	.L35
 751              	.L47:
 752 010e 00BF     		.align	2
 753              	.L46:
 754 0110 398EE338 		.word	954437177
 755 0114 000C0140 		.word	1073810432
 756              		.cfi_endproc
 757              	.LFE74:
 759              		.section	.text.HallPositionOutput_20Pair,"ax",%progbits
 760              		.align	1
 761              		.global	HallPositionOutput_20Pair
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
 766              	HallPositionOutput_20Pair:
 767              	.LVL103:
 768              	.LFB75:
 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** /**
 404:Core/Src/main.c ****  * @brief  This function is used to output the Hall position for a 20-pair motor. 
 405:Core/Src/main.c ****  * @param  theta_deg: The angle in degrees.
 406:Core/Src/main.c ****  * @retval None
 407:Core/Src/main.c ****  * @author Alex
 408:Core/Src/main.c ****  */
 409:Core/Src/main.c **** void HallPositionOutput_20Pair(theta_deg){
 769              		.loc 1 409 42 is_stmt 1 view -0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              		.loc 1 409 42 is_stmt 0 view .LVU125
 774 0000 10B5     		push	{r4, lr}
 775              	.LCFI4:
 776              		.cfi_def_cfa_offset 8
 777              		.cfi_offset 4, -8
 778              		.cfi_offset 14, -4
 410:Core/Src/main.c ****   // Normalize the angle to a single electrical cycle (0-18 degrees)
 411:Core/Src/main.c ****   int theta_elec = theta_deg % 18;
 779              		.loc 1 411 3 is_stmt 1 view .LVU126
 780              		.loc 1 411 7 is_stmt 0 view .LVU127
 781 0002 3E4A     		ldr	r2, .L59
 782 0004 82FB0032 		smull	r3, r2, r2, r0
 783 0008 C317     		asrs	r3, r0, #31
 784 000a C3EBA203 		rsb	r3, r3, r2, asr #2
 785 000e 03EBC303 		add	r3, r3, r3, lsl #3
 786 0012 A0EB4303 		sub	r3, r0, r3, lsl #1
 787              	.LVL104:
 412:Core/Src/main.c **** 
 413:Core/Src/main.c ****   if (theta_elec >= 0 && theta_elec < 3) {
 788              		.loc 1 413 3 is_stmt 1 view .LVU128
ARM GAS  /tmp/cc6clGCp.s 			page 23


 789 0016 112B     		cmp	r3, #17
 790 0018 1AD8     		bhi	.L48
 791 001a DFE803F0 		tbb	[pc, r3]
 792              	.L51:
 793 001e 09       		.byte	(.L56-.L51)/2
 794 001f 09       		.byte	(.L56-.L51)/2
 795 0020 09       		.byte	(.L56-.L51)/2
 796 0021 1A       		.byte	(.L55-.L51)/2
 797 0022 1A       		.byte	(.L55-.L51)/2
 798 0023 1A       		.byte	(.L55-.L51)/2
 799 0024 2B       		.byte	(.L54-.L51)/2
 800 0025 2B       		.byte	(.L54-.L51)/2
 801 0026 2B       		.byte	(.L54-.L51)/2
 802 0027 3C       		.byte	(.L53-.L51)/2
 803 0028 3C       		.byte	(.L53-.L51)/2
 804 0029 3C       		.byte	(.L53-.L51)/2
 805 002a 4D       		.byte	(.L52-.L51)/2
 806 002b 4D       		.byte	(.L52-.L51)/2
 807 002c 4D       		.byte	(.L52-.L51)/2
 808 002d 5E       		.byte	(.L50-.L51)/2
 809 002e 5E       		.byte	(.L50-.L51)/2
 810 002f 5E       		.byte	(.L50-.L51)/2
 811              		.p2align 1
 812              	.L56:
 414:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 813              		.loc 1 414 5 view .LVU129
 814 0030 334C     		ldr	r4, .L59+4
 815 0032 0122     		movs	r2, #1
 816 0034 0821     		movs	r1, #8
 817 0036 2046     		mov	r0, r4
 818              	.LVL105:
 819              		.loc 1 414 5 is_stmt 0 view .LVU130
 820 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 821              	.LVL106:
 415:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 822              		.loc 1 415 5 is_stmt 1 view .LVU131
 823 003c 0022     		movs	r2, #0
 824 003e 2021     		movs	r1, #32
 825 0040 2046     		mov	r0, r4
 826 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
 827              	.LVL107:
 416:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 828              		.loc 1 416 5 view .LVU132
 829 0046 0122     		movs	r2, #1
 830 0048 8021     		movs	r1, #128
 831 004a 2046     		mov	r0, r4
 832 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 833              	.LVL108:
 834              	.L48:
 417:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 0, HALL C = 1\r\n");
 418:Core/Src/main.c ****   } else if (theta_elec >= 3 && theta_elec < 6) {
 419:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
 420:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 421:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 422:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 423:Core/Src/main.c ****   } else if (theta_elec >= 6 && theta_elec < 9) {
 424:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_SET);
ARM GAS  /tmp/cc6clGCp.s 			page 24


 425:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 426:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 427:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 428:Core/Src/main.c ****   } else if (theta_elec >= 9 && theta_elec < 12) {
 429:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 430:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 431:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 432:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 433:Core/Src/main.c ****   } else if (theta_elec >= 12 && theta_elec < 15) {
 434:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 435:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 436:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 437:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 438:Core/Src/main.c ****   } else if (theta_elec >= 15 && theta_elec < 18) {
 439:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_A_GPIO_Port, HALL_A_Pin, GPIO_PIN_RESET);
 440:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 441:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 442:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 443:Core/Src/main.c ****   } else {
 444:Core/Src/main.c ****     // printf("Invalid angle: %d\r\n", theta_deg);
 445:Core/Src/main.c ****   }
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** }
 835              		.loc 1 447 1 is_stmt 0 view .LVU133
 836 0050 10BD     		pop	{r4, pc}
 837              	.LVL109:
 838              	.L55:
 419:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 839              		.loc 1 419 5 is_stmt 1 view .LVU134
 840 0052 2B4C     		ldr	r4, .L59+4
 841 0054 0122     		movs	r2, #1
 842 0056 0821     		movs	r1, #8
 843 0058 2046     		mov	r0, r4
 844              	.LVL110:
 419:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 845              		.loc 1 419 5 is_stmt 0 view .LVU135
 846 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 847              	.LVL111:
 420:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 848              		.loc 1 420 5 is_stmt 1 view .LVU136
 849 005e 0022     		movs	r2, #0
 850 0060 2021     		movs	r1, #32
 851 0062 2046     		mov	r0, r4
 852 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 853              	.LVL112:
 421:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 0, HALL C = 0\r\n");
 854              		.loc 1 421 5 view .LVU137
 855 0068 0022     		movs	r2, #0
 856 006a 8021     		movs	r1, #128
 857 006c 2046     		mov	r0, r4
 858 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 859              	.LVL113:
 860 0072 EDE7     		b	.L48
 861              	.LVL114:
 862              	.L54:
 424:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 863              		.loc 1 424 5 view .LVU138
ARM GAS  /tmp/cc6clGCp.s 			page 25


 864 0074 224C     		ldr	r4, .L59+4
 865 0076 0122     		movs	r2, #1
 866 0078 0821     		movs	r1, #8
 867 007a 2046     		mov	r0, r4
 868              	.LVL115:
 424:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 869              		.loc 1 424 5 is_stmt 0 view .LVU139
 870 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 871              	.LVL116:
 425:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 872              		.loc 1 425 5 is_stmt 1 view .LVU140
 873 0080 0122     		movs	r2, #1
 874 0082 2021     		movs	r1, #32
 875 0084 2046     		mov	r0, r4
 876 0086 FFF7FEFF 		bl	HAL_GPIO_WritePin
 877              	.LVL117:
 426:Core/Src/main.c ****     // printf("HALL A = 1, HALL B = 1, HALL C = 0\r\n");
 878              		.loc 1 426 5 view .LVU141
 879 008a 0022     		movs	r2, #0
 880 008c 8021     		movs	r1, #128
 881 008e 2046     		mov	r0, r4
 882 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 883              	.LVL118:
 884 0094 DCE7     		b	.L48
 885              	.LVL119:
 886              	.L53:
 429:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 887              		.loc 1 429 5 view .LVU142
 888 0096 1A4C     		ldr	r4, .L59+4
 889 0098 0022     		movs	r2, #0
 890 009a 0821     		movs	r1, #8
 891 009c 2046     		mov	r0, r4
 892              	.LVL120:
 429:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 893              		.loc 1 429 5 is_stmt 0 view .LVU143
 894 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 895              	.LVL121:
 430:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_RESET);
 896              		.loc 1 430 5 is_stmt 1 view .LVU144
 897 00a2 0122     		movs	r2, #1
 898 00a4 2021     		movs	r1, #32
 899 00a6 2046     		mov	r0, r4
 900 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 901              	.LVL122:
 431:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 1, HALL C = 0\r\n");
 902              		.loc 1 431 5 view .LVU145
 903 00ac 0022     		movs	r2, #0
 904 00ae 8021     		movs	r1, #128
 905 00b0 2046     		mov	r0, r4
 906 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 907              	.LVL123:
 908 00b6 CBE7     		b	.L48
 909              	.LVL124:
 910              	.L52:
 434:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 911              		.loc 1 434 5 view .LVU146
 912 00b8 114C     		ldr	r4, .L59+4
ARM GAS  /tmp/cc6clGCp.s 			page 26


 913 00ba 0022     		movs	r2, #0
 914 00bc 0821     		movs	r1, #8
 915 00be 2046     		mov	r0, r4
 916              	.LVL125:
 434:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_SET);
 917              		.loc 1 434 5 is_stmt 0 view .LVU147
 918 00c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 919              	.LVL126:
 435:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 920              		.loc 1 435 5 is_stmt 1 view .LVU148
 921 00c4 0122     		movs	r2, #1
 922 00c6 2021     		movs	r1, #32
 923 00c8 2046     		mov	r0, r4
 924 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 925              	.LVL127:
 436:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 1, HALL C = 1\r\n");
 926              		.loc 1 436 5 view .LVU149
 927 00ce 0122     		movs	r2, #1
 928 00d0 8021     		movs	r1, #128
 929 00d2 2046     		mov	r0, r4
 930 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 931              	.LVL128:
 932 00d8 BAE7     		b	.L48
 933              	.LVL129:
 934              	.L50:
 439:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 935              		.loc 1 439 5 view .LVU150
 936 00da 094C     		ldr	r4, .L59+4
 937 00dc 0022     		movs	r2, #0
 938 00de 0821     		movs	r1, #8
 939 00e0 2046     		mov	r0, r4
 940              	.LVL130:
 439:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_B_GPIO_Port, HALL_B_Pin, GPIO_PIN_RESET);
 941              		.loc 1 439 5 is_stmt 0 view .LVU151
 942 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 943              	.LVL131:
 440:Core/Src/main.c ****     HAL_GPIO_WritePin(HALL_C_GPIO_Port, HALL_C_Pin, GPIO_PIN_SET);
 944              		.loc 1 440 5 is_stmt 1 view .LVU152
 945 00e6 0022     		movs	r2, #0
 946 00e8 2021     		movs	r1, #32
 947 00ea 2046     		mov	r0, r4
 948 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 949              	.LVL132:
 441:Core/Src/main.c ****     // printf("HALL A = 0, HALL B = 0, HALL C = 1\r\n");
 950              		.loc 1 441 5 view .LVU153
 951 00f0 0122     		movs	r2, #1
 952 00f2 8021     		movs	r1, #128
 953 00f4 2046     		mov	r0, r4
 954 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 955              	.LVL133:
 445:Core/Src/main.c **** 
 956              		.loc 1 445 3 view .LVU154
 957              		.loc 1 447 1 is_stmt 0 view .LVU155
 958 00fa A9E7     		b	.L48
 959              	.L60:
 960              		.align	2
 961              	.L59:
ARM GAS  /tmp/cc6clGCp.s 			page 27


 962 00fc 398EE338 		.word	954437177
 963 0100 000C0140 		.word	1073810432
 964              		.cfi_endproc
 965              	.LFE75:
 967              		.section	.text.__io_putchar,"ax",%progbits
 968              		.align	1
 969              		.global	__io_putchar
 970              		.syntax unified
 971              		.thumb
 972              		.thumb_func
 974              	__io_putchar:
 975              	.LVL134:
 976              	.LFB76:
 448:Core/Src/main.c **** 
 449:Core/Src/main.c **** /**
 450:Core/Src/main.c ****  * @brief  Retargets the C library printf function to the USART.
 451:Core/Src/main.c ****  * @retval None
 452:Core/Src/main.c ****  */
 453:Core/Src/main.c **** PUTCHAR_PROTOTYPE {
 977              		.loc 1 453 19 is_stmt 1 view -0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 8
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              		.loc 1 453 19 is_stmt 0 view .LVU157
 982 0000 00B5     		push	{lr}
 983              	.LCFI5:
 984              		.cfi_def_cfa_offset 4
 985              		.cfi_offset 14, -4
 986 0002 83B0     		sub	sp, sp, #12
 987              	.LCFI6:
 988              		.cfi_def_cfa_offset 16
 989 0004 0190     		str	r0, [sp, #4]
 454:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xFFFF);
 990              		.loc 1 454 3 is_stmt 1 view .LVU158
 991 0006 4FF6FF73 		movw	r3, #65535
 992 000a 0122     		movs	r2, #1
 993 000c 01A9     		add	r1, sp, #4
 994 000e 0348     		ldr	r0, .L63
 995              	.LVL135:
 996              		.loc 1 454 3 is_stmt 0 view .LVU159
 997 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 998              	.LVL136:
 455:Core/Src/main.c ****   return ch;
 999              		.loc 1 455 3 is_stmt 1 view .LVU160
 456:Core/Src/main.c **** }
 1000              		.loc 1 456 1 is_stmt 0 view .LVU161
 1001 0014 0198     		ldr	r0, [sp, #4]
 1002 0016 03B0     		add	sp, sp, #12
 1003              	.LCFI7:
 1004              		.cfi_def_cfa_offset 4
 1005              		@ sp needed
 1006 0018 5DF804FB 		ldr	pc, [sp], #4
 1007              	.L64:
 1008              		.align	2
 1009              	.L63:
 1010 001c 00000000 		.word	huart1
 1011              		.cfi_endproc
ARM GAS  /tmp/cc6clGCp.s 			page 28


 1012              	.LFE76:
 1014              		.section	.rodata.Error_Handler.str1.4,"aMS",%progbits,1
 1015              		.align	2
 1016              	.LC0:
 1017 0000 4572726F 		.ascii	"Error\015\000"
 1017      720D00
 1018              		.section	.text.Error_Handler,"ax",%progbits
 1019              		.align	1
 1020              		.global	Error_Handler
 1021              		.syntax unified
 1022              		.thumb
 1023              		.thumb_func
 1025              	Error_Handler:
 1026              	.LFB77:
 457:Core/Src/main.c **** /* USER CODE END 4 */
 458:Core/Src/main.c **** 
 459:Core/Src/main.c **** /**
 460:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 461:Core/Src/main.c ****   * @retval None
 462:Core/Src/main.c ****   */
 463:Core/Src/main.c **** void Error_Handler(void)
 464:Core/Src/main.c **** {
 1027              		.loc 1 464 1 is_stmt 1 view -0
 1028              		.cfi_startproc
 1029              		@ Volatile: function does not return.
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032 0000 08B5     		push	{r3, lr}
 1033              	.LCFI8:
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 3, -8
 1036              		.cfi_offset 14, -4
 465:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 466:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 467:Core/Src/main.c ****   __disable_irq();
 1037              		.loc 1 467 3 view .LVU163
 1038              	.LBB4:
 1039              	.LBI4:
 1040              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  /tmp/cc6clGCp.s 			page 29


  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/cc6clGCp.s 			page 30


  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc6clGCp.s 			page 31


 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1041              		.loc 2 140 27 view .LVU164
 1042              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1043              		.loc 2 142 3 view .LVU165
 1044              		.syntax unified
 1045              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1046 0002 72B6     		cpsid i
 1047              	@ 0 "" 2
 1048              		.thumb
 1049              		.syntax unified
 1050              	.L66:
 1051              	.LBE5:
 1052              	.LBE4:
 468:Core/Src/main.c ****   while (1) {
 1053              		.loc 1 468 3 view .LVU166
 469:Core/Src/main.c ****     printf("Error\r\n");
 1054              		.loc 1 469 5 view .LVU167
 1055 0004 0348     		ldr	r0, .L68
 1056 0006 FFF7FEFF 		bl	puts
 1057              	.LVL137:
 470:Core/Src/main.c ****     HAL_Delay(100);
 1058              		.loc 1 470 5 discriminator 1 view .LVU168
 1059 000a 6420     		movs	r0, #100
 1060 000c FFF7FEFF 		bl	HAL_Delay
 1061              	.LVL138:
 468:Core/Src/main.c ****   while (1) {
 1062              		.loc 1 468 9 view .LVU169
 1063 0010 F8E7     		b	.L66
 1064              	.L69:
 1065 0012 00BF     		.align	2
 1066              	.L68:
 1067 0014 00000000 		.word	.LC0
 1068              		.cfi_endproc
 1069              	.LFE77:
 1071              		.section	.text.SystemClock_Config,"ax",%progbits
 1072              		.align	1
 1073              		.global	SystemClock_Config
 1074              		.syntax unified
 1075              		.thumb
 1076              		.thumb_func
 1078              	SystemClock_Config:
 1079              	.LFB69:
 177:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1080              		.loc 1 177 1 view -0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 80
 1083              		@ frame_needed = 0, uses_anonymous_args = 0
 1084 0000 00B5     		push	{lr}
ARM GAS  /tmp/cc6clGCp.s 			page 32


 1085              	.LCFI9:
 1086              		.cfi_def_cfa_offset 4
 1087              		.cfi_offset 14, -4
 1088 0002 95B0     		sub	sp, sp, #84
 1089              	.LCFI10:
 1090              		.cfi_def_cfa_offset 88
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1091              		.loc 1 178 3 view .LVU171
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1092              		.loc 1 178 22 is_stmt 0 view .LVU172
 1093 0004 2822     		movs	r2, #40
 1094 0006 0021     		movs	r1, #0
 1095 0008 0DEB0200 		add	r0, sp, r2
 1096 000c FFF7FEFF 		bl	memset
 1097              	.LVL139:
 179:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1098              		.loc 1 179 3 is_stmt 1 view .LVU173
 179:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1099              		.loc 1 179 22 is_stmt 0 view .LVU174
 1100 0010 0023     		movs	r3, #0
 1101 0012 0593     		str	r3, [sp, #20]
 1102 0014 0693     		str	r3, [sp, #24]
 1103 0016 0793     		str	r3, [sp, #28]
 1104 0018 0893     		str	r3, [sp, #32]
 1105 001a 0993     		str	r3, [sp, #36]
 180:Core/Src/main.c **** 
 1106              		.loc 1 180 3 is_stmt 1 view .LVU175
 180:Core/Src/main.c **** 
 1107              		.loc 1 180 28 is_stmt 0 view .LVU176
 1108 001c 0193     		str	r3, [sp, #4]
 1109 001e 0293     		str	r3, [sp, #8]
 1110 0020 0393     		str	r3, [sp, #12]
 1111 0022 0493     		str	r3, [sp, #16]
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1112              		.loc 1 185 3 is_stmt 1 view .LVU177
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1113              		.loc 1 185 36 is_stmt 0 view .LVU178
 1114 0024 0223     		movs	r3, #2
 1115 0026 0A93     		str	r3, [sp, #40]
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1116              		.loc 1 186 3 is_stmt 1 view .LVU179
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1117              		.loc 1 186 30 is_stmt 0 view .LVU180
 1118 0028 0122     		movs	r2, #1
 1119 002a 0E92     		str	r2, [sp, #56]
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1120              		.loc 1 187 3 is_stmt 1 view .LVU181
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1121              		.loc 1 187 41 is_stmt 0 view .LVU182
 1122 002c 1022     		movs	r2, #16
 1123 002e 0F92     		str	r2, [sp, #60]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 1124              		.loc 1 188 3 is_stmt 1 view .LVU183
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 1125              		.loc 1 188 34 is_stmt 0 view .LVU184
 1126 0030 1193     		str	r3, [sp, #68]
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
ARM GAS  /tmp/cc6clGCp.s 			page 33


 1127              		.loc 1 189 3 is_stmt 1 view .LVU185
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1128              		.loc 1 190 3 view .LVU186
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1129              		.loc 1 190 32 is_stmt 0 view .LVU187
 1130 0032 4FF46013 		mov	r3, #3670016
 1131 0036 1393     		str	r3, [sp, #76]
 191:Core/Src/main.c ****   {
 1132              		.loc 1 191 3 is_stmt 1 view .LVU188
 191:Core/Src/main.c ****   {
 1133              		.loc 1 191 7 is_stmt 0 view .LVU189
 1134 0038 0AA8     		add	r0, sp, #40
 1135 003a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1136              	.LVL140:
 191:Core/Src/main.c ****   {
 1137              		.loc 1 191 6 discriminator 1 view .LVU190
 1138 003e C8B9     		cbnz	r0, .L75
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1139              		.loc 1 198 3 is_stmt 1 view .LVU191
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1140              		.loc 1 198 31 is_stmt 0 view .LVU192
 1141 0040 0F23     		movs	r3, #15
 1142 0042 0593     		str	r3, [sp, #20]
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1143              		.loc 1 200 3 is_stmt 1 view .LVU193
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1144              		.loc 1 200 34 is_stmt 0 view .LVU194
 1145 0044 0221     		movs	r1, #2
 1146 0046 0691     		str	r1, [sp, #24]
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1147              		.loc 1 201 3 is_stmt 1 view .LVU195
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1148              		.loc 1 201 35 is_stmt 0 view .LVU196
 1149 0048 0023     		movs	r3, #0
 1150 004a 0793     		str	r3, [sp, #28]
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1151              		.loc 1 202 3 is_stmt 1 view .LVU197
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1152              		.loc 1 202 36 is_stmt 0 view .LVU198
 1153 004c 4FF48062 		mov	r2, #1024
 1154 0050 0892     		str	r2, [sp, #32]
 203:Core/Src/main.c **** 
 1155              		.loc 1 203 3 is_stmt 1 view .LVU199
 203:Core/Src/main.c **** 
 1156              		.loc 1 203 36 is_stmt 0 view .LVU200
 1157 0052 0993     		str	r3, [sp, #36]
 205:Core/Src/main.c ****   {
 1158              		.loc 1 205 3 is_stmt 1 view .LVU201
 205:Core/Src/main.c ****   {
 1159              		.loc 1 205 7 is_stmt 0 view .LVU202
 1160 0054 05A8     		add	r0, sp, #20
 1161 0056 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1162              	.LVL141:
 205:Core/Src/main.c ****   {
 1163              		.loc 1 205 6 discriminator 1 view .LVU203
 1164 005a 68B9     		cbnz	r0, .L76
 209:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
ARM GAS  /tmp/cc6clGCp.s 			page 34


 1165              		.loc 1 209 3 is_stmt 1 view .LVU204
 209:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 1166              		.loc 1 209 38 is_stmt 0 view .LVU205
 1167 005c 0223     		movs	r3, #2
 1168 005e 0193     		str	r3, [sp, #4]
 210:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1169              		.loc 1 210 3 is_stmt 1 view .LVU206
 210:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1170              		.loc 1 210 35 is_stmt 0 view .LVU207
 1171 0060 4FF40043 		mov	r3, #32768
 1172 0064 0393     		str	r3, [sp, #12]
 211:Core/Src/main.c ****   {
 1173              		.loc 1 211 3 is_stmt 1 view .LVU208
 211:Core/Src/main.c ****   {
 1174              		.loc 1 211 7 is_stmt 0 view .LVU209
 1175 0066 01A8     		add	r0, sp, #4
 1176 0068 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1177              	.LVL142:
 211:Core/Src/main.c ****   {
 1178              		.loc 1 211 6 discriminator 1 view .LVU210
 1179 006c 30B9     		cbnz	r0, .L77
 215:Core/Src/main.c **** 
 1180              		.loc 1 215 1 view .LVU211
 1181 006e 15B0     		add	sp, sp, #84
 1182              	.LCFI11:
 1183              		.cfi_remember_state
 1184              		.cfi_def_cfa_offset 4
 1185              		@ sp needed
 1186 0070 5DF804FB 		ldr	pc, [sp], #4
 1187              	.L75:
 1188              	.LCFI12:
 1189              		.cfi_restore_state
 193:Core/Src/main.c ****   }
 1190              		.loc 1 193 5 is_stmt 1 view .LVU212
 1191 0074 FFF7FEFF 		bl	Error_Handler
 1192              	.LVL143:
 1193              	.L76:
 207:Core/Src/main.c ****   }
 1194              		.loc 1 207 5 view .LVU213
 1195 0078 FFF7FEFF 		bl	Error_Handler
 1196              	.LVL144:
 1197              	.L77:
 213:Core/Src/main.c ****   }
 1198              		.loc 1 213 5 view .LVU214
 1199 007c FFF7FEFF 		bl	Error_Handler
 1200              	.LVL145:
 1201              		.cfi_endproc
 1202              	.LFE69:
 1204              		.global	__aeabi_fsub
 1205              		.global	__aeabi_fcmpeq
 1206              		.section	.text.main,"ax",%progbits
 1207              		.align	1
 1208              		.global	main
 1209              		.syntax unified
 1210              		.thumb
 1211              		.thumb_func
 1213              	main:
ARM GAS  /tmp/cc6clGCp.s 			page 35


 1214              	.LFB68:
  79:Core/Src/main.c **** 
 1215              		.loc 1 79 1 view -0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 0
 1218              		@ frame_needed = 0, uses_anonymous_args = 0
 1219 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1220              	.LCFI13:
 1221              		.cfi_def_cfa_offset 24
 1222              		.cfi_offset 3, -24
 1223              		.cfi_offset 4, -20
 1224              		.cfi_offset 5, -16
 1225              		.cfi_offset 6, -12
 1226              		.cfi_offset 7, -8
 1227              		.cfi_offset 14, -4
  83:Core/Src/main.c ****   uint16_t cos_adc = 0;
 1228              		.loc 1 83 3 view .LVU216
 1229              	.LVL146:
  84:Core/Src/main.c ****   float theta_rad;
 1230              		.loc 1 84 3 view .LVU217
  85:Core/Src/main.c ****   int theta_deg; // only for debugging
 1231              		.loc 1 85 3 view .LVU218
  86:Core/Src/main.c ****   int historical_value = 0; // Initialize historical value for decay and merge
 1232              		.loc 1 86 3 view .LVU219
  87:Core/Src/main.c ****   int merged_value = 0; // Initialize merged value
 1233              		.loc 1 87 3 view .LVU220
  88:Core/Src/main.c **** 
 1234              		.loc 1 88 3 view .LVU221
  92:Core/Src/main.c ****   int cos; 
 1235              		.loc 1 92 3 view .LVU222
  93:Core/Src/main.c ****   int rad; 
 1236              		.loc 1 93 3 view .LVU223
  94:Core/Src/main.c ****   int deg;
 1237              		.loc 1 94 3 view .LVU224
  95:Core/Src/main.c ****   /* USER CODE END 1 */
 1238              		.loc 1 95 3 view .LVU225
 101:Core/Src/main.c **** 
 1239              		.loc 1 101 3 view .LVU226
 1240 0002 FFF7FEFF 		bl	HAL_Init
 1241              	.LVL147:
 108:Core/Src/main.c **** 
 1242              		.loc 1 108 3 view .LVU227
 1243 0006 FFF7FEFF 		bl	SystemClock_Config
 1244              	.LVL148:
 115:Core/Src/main.c ****   MX_ADC1_Init();
 1245              		.loc 1 115 3 view .LVU228
 1246 000a FFF7FEFF 		bl	MX_GPIO_Init
 1247              	.LVL149:
 116:Core/Src/main.c ****   MX_ADC2_Init();
 1248              		.loc 1 116 3 view .LVU229
 1249 000e FFF7FEFF 		bl	MX_ADC1_Init
 1250              	.LVL150:
 117:Core/Src/main.c ****   MX_USART1_UART_Init();
 1251              		.loc 1 117 3 view .LVU230
 1252 0012 FFF7FEFF 		bl	MX_ADC2_Init
 1253              	.LVL151:
 118:Core/Src/main.c ****   MX_TIM2_Init();
ARM GAS  /tmp/cc6clGCp.s 			page 36


 1254              		.loc 1 118 3 view .LVU231
 1255 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 1256              	.LVL152:
 119:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1257              		.loc 1 119 3 view .LVU232
 1258 001a FFF7FEFF 		bl	MX_TIM2_Init
 1259              	.LVL153:
  84:Core/Src/main.c ****   float theta_rad;
 1260              		.loc 1 84 12 is_stmt 0 view .LVU233
 1261 001e 0024     		movs	r4, #0
  83:Core/Src/main.c ****   uint16_t cos_adc = 0;
 1262              		.loc 1 83 12 view .LVU234
 1263 0020 2546     		mov	r5, r4
 1264 0022 0FE0     		b	.L81
 1265              	.LVL154:
 1266              	.L86:
 1267              	.LBB6:
 143:Core/Src/main.c ****     }
 1268              		.loc 1 143 7 is_stmt 1 view .LVU235
 143:Core/Src/main.c ****     }
 1269              		.loc 1 143 19 is_stmt 0 view .LVU236
 1270 0024 3946     		mov	r1, r7
 1271 0026 3046     		mov	r0, r6
 1272 0028 FFF7FEFF 		bl	atan2f
 1273              	.LVL155:
 1274              	.L79:
 151:Core/Src/main.c **** 
 1275              		.loc 1 151 5 is_stmt 1 view .LVU237
 151:Core/Src/main.c **** 
 1276              		.loc 1 151 36 is_stmt 0 view .LVU238
 1277 002c FFF7FEFF 		bl	__aeabi_f2d
 1278              	.LVL156:
 1279 0030 21A3     		adr	r3, .L87
 1280 0032 D3E90023 		ldrd	r2, [r3]
 1281 0036 FFF7FEFF 		bl	__aeabi_dmul
 1282              	.LVL157:
 151:Core/Src/main.c **** 
 1283              		.loc 1 151 17 view .LVU239
 1284 003a FFF7FEFF 		bl	__aeabi_d2iz
 1285              	.LVL158:
 161:Core/Src/main.c ****     // printf("ADC_C: %d ADC_S: %d theta_deg: %d rad: %d (millirad)\r\n", cos_adc, sin_adc, theta_d
 1286              		.loc 1 161 5 is_stmt 1 view .LVU240
 164:Core/Src/main.c ****     // HAL_Delay(10); 
 1287              		.loc 1 164 5 view .LVU241
 1288 003e B430     		adds	r0, r0, #180
 1289              	.LVL159:
 164:Core/Src/main.c ****     // HAL_Delay(10); 
 1290              		.loc 1 164 5 is_stmt 0 view .LVU242
 1291 0040 FFF7FEFF 		bl	HallPositionOutput_10PairNot
 1292              	.LVL160:
 164:Core/Src/main.c ****     // HAL_Delay(10); 
 1293              		.loc 1 164 5 view .LVU243
 1294              	.LBE6:
 126:Core/Src/main.c ****     HAL_ADC_Start(&hadc1); // Needs to be called every time
 1295              		.loc 1 126 9 is_stmt 1 view .LVU244
 1296              	.L81:
 126:Core/Src/main.c ****     HAL_ADC_Start(&hadc1); // Needs to be called every time
ARM GAS  /tmp/cc6clGCp.s 			page 37


 1297              		.loc 1 126 3 view .LVU245
 1298              	.LBB7:
 127:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 1299              		.loc 1 127 5 view .LVU246
 1300 0044 1E4E     		ldr	r6, .L87+8
 1301 0046 3046     		mov	r0, r6
 1302 0048 FFF7FEFF 		bl	HAL_ADC_Start
 1303              	.LVL161:
 128:Core/Src/main.c ****     cos_adc = decayAndMerge(cos_adc, HAL_ADC_GetValue(&hadc1)); // Decay and merge the new value wi
 1304              		.loc 1 128 5 view .LVU247
 1305 004c 4FF0FF31 		mov	r1, #-1
 1306 0050 3046     		mov	r0, r6
 1307 0052 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1308              	.LVL162:
 129:Core/Src/main.c ****     
 1309              		.loc 1 129 5 view .LVU248
 129:Core/Src/main.c ****     
 1310              		.loc 1 129 15 is_stmt 0 view .LVU249
 1311 0056 3046     		mov	r0, r6
 1312 0058 FFF7FEFF 		bl	HAL_ADC_GetValue
 1313              	.LVL163:
 1314 005c 0146     		mov	r1, r0
 129:Core/Src/main.c ****     
 1315              		.loc 1 129 15 discriminator 1 view .LVU250
 1316 005e 2046     		mov	r0, r4
 1317 0060 FFF7FEFF 		bl	decayAndMerge
 1318              	.LVL164:
 129:Core/Src/main.c ****     
 1319              		.loc 1 129 13 discriminator 2 view .LVU251
 1320 0064 84B2     		uxth	r4, r0
 1321              	.LVL165:
 131:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc2, HAL_MAX_DELAY);
 1322              		.loc 1 131 5 is_stmt 1 view .LVU252
 1323 0066 174E     		ldr	r6, .L87+12
 1324 0068 3046     		mov	r0, r6
 1325 006a FFF7FEFF 		bl	HAL_ADC_Start
 1326              	.LVL166:
 132:Core/Src/main.c ****     sin_adc = decayAndMerge(sin_adc, HAL_ADC_GetValue(&hadc2)); // Decay and merge the new value wi
 1327              		.loc 1 132 5 view .LVU253
 1328 006e 4FF0FF31 		mov	r1, #-1
 1329 0072 3046     		mov	r0, r6
 1330 0074 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1331              	.LVL167:
 133:Core/Src/main.c **** 
 1332              		.loc 1 133 5 view .LVU254
 133:Core/Src/main.c **** 
 1333              		.loc 1 133 15 is_stmt 0 view .LVU255
 1334 0078 3046     		mov	r0, r6
 1335 007a FFF7FEFF 		bl	HAL_ADC_GetValue
 1336              	.LVL168:
 1337 007e 0146     		mov	r1, r0
 133:Core/Src/main.c **** 
 1338              		.loc 1 133 15 discriminator 1 view .LVU256
 1339 0080 2846     		mov	r0, r5
 1340 0082 FFF7FEFF 		bl	decayAndMerge
 1341              	.LVL169:
 133:Core/Src/main.c **** 
ARM GAS  /tmp/cc6clGCp.s 			page 38


 1342              		.loc 1 133 13 discriminator 2 view .LVU257
 1343 0086 85B2     		uxth	r5, r0
 1344              	.LVL170:
 139:Core/Src/main.c ****     float num = cos_adc - midpoint;
 1345              		.loc 1 139 5 is_stmt 1 view .LVU258
 140:Core/Src/main.c ****     float den = sin_adc - midpoint;
 1346              		.loc 1 140 5 view .LVU259
 140:Core/Src/main.c ****     float den = sin_adc - midpoint;
 1347              		.loc 1 140 25 is_stmt 0 view .LVU260
 1348 0088 2046     		mov	r0, r4
 1349 008a FFF7FEFF 		bl	__aeabi_i2f
 1350              	.LVL171:
 140:Core/Src/main.c ****     float den = sin_adc - midpoint;
 1351              		.loc 1 140 11 view .LVU261
 1352 008e 0E49     		ldr	r1, .L87+16
 1353 0090 FFF7FEFF 		bl	__aeabi_fsub
 1354              	.LVL172:
 1355 0094 0646     		mov	r6, r0
 1356              	.LVL173:
 141:Core/Src/main.c ****     if (den != 0){
 1357              		.loc 1 141 5 is_stmt 1 view .LVU262
 141:Core/Src/main.c ****     if (den != 0){
 1358              		.loc 1 141 25 is_stmt 0 view .LVU263
 1359 0096 2846     		mov	r0, r5
 1360              	.LVL174:
 141:Core/Src/main.c ****     if (den != 0){
 1361              		.loc 1 141 25 view .LVU264
 1362 0098 FFF7FEFF 		bl	__aeabi_i2f
 1363              	.LVL175:
 141:Core/Src/main.c ****     if (den != 0){
 1364              		.loc 1 141 11 view .LVU265
 1365 009c 0A49     		ldr	r1, .L87+16
 1366 009e FFF7FEFF 		bl	__aeabi_fsub
 1367              	.LVL176:
 1368 00a2 0746     		mov	r7, r0
 1369              	.LVL177:
 142:Core/Src/main.c ****       theta_rad = atan2f(num, den); // Use atan2 for better handling of quadrants
 1370              		.loc 1 142 5 is_stmt 1 view .LVU266
 142:Core/Src/main.c ****       theta_rad = atan2f(num, den); // Use atan2 for better handling of quadrants
 1371              		.loc 1 142 8 is_stmt 0 view .LVU267
 1372 00a4 0021     		movs	r1, #0
 1373 00a6 FFF7FEFF 		bl	__aeabi_fcmpeq
 1374              	.LVL178:
 142:Core/Src/main.c ****       theta_rad = atan2f(num, den); // Use atan2 for better handling of quadrants
 1375              		.loc 1 142 8 view .LVU268
 1376 00aa 0028     		cmp	r0, #0
 1377 00ac BAD0     		beq	.L86
 146:Core/Src/main.c ****     }
 1378              		.loc 1 146 17 view .LVU269
 1379 00ae 0020     		movs	r0, #0
 1380 00b0 BCE7     		b	.L79
 1381              	.L88:
 1382 00b2 00BFAFF3 		.align	3
 1382      0080
 1383              	.L87:
 1384 00b8 F8C1631A 		.word	442745336
 1385 00bc DCA54C40 		.word	1078765020
ARM GAS  /tmp/cc6clGCp.s 			page 39


 1386 00c0 00000000 		.word	hadc1
 1387 00c4 00000000 		.word	hadc2
 1388 00c8 00882645 		.word	1160153088
 1389              	.LBE7:
 1390              		.cfi_endproc
 1391              	.LFE68:
 1393              		.global	ATAN_LUT
 1394              		.section	.rodata.ATAN_LUT,"a"
 1395              		.align	2
 1398              	ATAN_LUT:
 1399 0000 00000000 		.word	0
 1400 0004 2120803A 		.word	981475361
 1401 0008 F61F003B 		.word	989863926
 1402 000c DB2F403B 		.word	994062299
 1403 0010 E01F803B 		.word	998252512
 1404 0014 BE27A03B 		.word	1000351678
 1405 0018 852FC03B 		.word	1002450821
 1406 001c 2237E03B 		.word	1004549922
 1407 0020 601F003C 		.word	1006640992
 1408 0024 1923103C 		.word	1007690521
 1409 0028 BC26203C 		.word	1008740028
 1410 002c 4A2A303C 		.word	1009789514
 1411 0030 CD2D403C 		.word	1010838989
 1412 0034 3031503C 		.word	1011888432
 1413 0038 7E34603C 		.word	1012937854
 1414 003c AB37703C 		.word	1013987243
 1415 0040 5C1D803C 		.word	1015029084
 1416 0044 D31E883C 		.word	1015553747
 1417 0048 3920903C 		.word	1016078393
 1418 004c 8F21983C 		.word	1016603023
 1419 0050 D022A03C 		.word	1017127632
 1420 0054 0124A83C 		.word	1017652225
 1421 0058 1725B03C 		.word	1018176791
 1422 005c 1C26B83C 		.word	1018701340
 1423 0060 0727C03C 		.word	1019225863
 1424 0064 D727C83C 		.word	1019750359
 1425 0068 9228D03C 		.word	1020274834
 1426 006c 3729D83C 		.word	1020799287
 1427 0070 BC29E03C 		.word	1021323708
 1428 0074 262AE83C 		.word	1021848102
 1429 0078 702AF03C 		.word	1022372464
 1430 007c 9F2AF83C 		.word	1022896799
 1431 0080 5715003D 		.word	1023415639
 1432 0084 4E15043D 		.word	1023677774
 1433 0088 3515083D 		.word	1023939893
 1434 008c 0C150C3D 		.word	1024201996
 1435 0090 D014103D 		.word	1024464080
 1436 0094 8214143D 		.word	1024726146
 1437 0098 2314183D 		.word	1024988195
 1438 009c AF131C3D 		.word	1025250223
 1439 00a0 2B13203D 		.word	1025512235
 1440 00a4 8F12243D 		.word	1025774223
 1441 00a8 DF11283D 		.word	1026036191
 1442 00ac 1E112C3D 		.word	1026298142
 1443 00b0 4310303D 		.word	1026560067
 1444 00b4 540F343D 		.word	1026821972
 1445 00b8 4F0E383D 		.word	1027083855
ARM GAS  /tmp/cc6clGCp.s 			page 40


 1446 00bc 320D3C3D 		.word	1027345714
 1447 00c0 FC0B403D 		.word	1027607548
 1448 00c4 B10A443D 		.word	1027869361
 1449 00c8 4C09483D 		.word	1028131148
 1450 00cc CE074C3D 		.word	1028392910
 1451 00d0 3806503D 		.word	1028654648
 1452 00d4 8704543D 		.word	1028916359
 1453 00d8 BB02583D 		.word	1029178043
 1454 00dc D5005C3D 		.word	1029439701
 1455 00e0 D3FE5F3D 		.word	1029701331
 1456 00e4 B4FC633D 		.word	1029962932
 1457 00e8 7BFA673D 		.word	1030224507
 1458 00ec 23F86B3D 		.word	1030486051
 1459 00f0 AFF56F3D 		.word	1030747567
 1460 00f4 1CF3733D 		.word	1031009052
 1461 00f8 6CF0773D 		.word	1031270508
 1462 00fc 9CED7B3D 		.word	1031531932
 1463 0100 AFEA7F3D 		.word	1031793327
 1464 0104 CFF3813D 		.word	1031926735
 1465 0108 38F2833D 		.word	1032057400
 1466 010c 90F0853D 		.word	1032188048
 1467 0110 D7EE873D 		.word	1032318679
 1468 0114 0EED893D 		.word	1032449294
 1469 0118 33EB8B3D 		.word	1032579891
 1470 011c 47E98D3D 		.word	1032710471
 1471 0120 49E78F3D 		.word	1032841033
 1472 0124 3BE5913D 		.word	1032971579
 1473 0128 18E3933D 		.word	1033102104
 1474 012c E4E0953D 		.word	1033232612
 1475 0130 9DDE973D 		.word	1033363101
 1476 0134 45DC993D 		.word	1033493573
 1477 0138 D7D99B3D 		.word	1033624023
 1478 013c 58D79D3D 		.word	1033754456
 1479 0140 C4D49F3D 		.word	1033884868
 1480 0144 1DD2A13D 		.word	1034015261
 1481 0148 61CFA33D 		.word	1034145633
 1482 014c 92CCA53D 		.word	1034275986
 1483 0150 AEC9A73D 		.word	1034406318
 1484 0154 B4C6A93D 		.word	1034536628
 1485 0158 A7C3AB3D 		.word	1034666919
 1486 015c 84C0AD3D 		.word	1034797188
 1487 0160 4ABDAF3D 		.word	1034927434
 1488 0164 FCB9B13D 		.word	1035057660
 1489 0168 98B6B33D 		.word	1035187864
 1490 016c 1DB3B53D 		.word	1035318045
 1491 0170 8CAFB73D 		.word	1035448204
 1492 0174 E4ABB93D 		.word	1035578340
 1493 0178 26A8BB3D 		.word	1035708454
 1494 017c 4FA4BD3D 		.word	1035838543
 1495 0180 61A0BF3D 		.word	1035968609
 1496 0184 5D9CC13D 		.word	1036098653
 1497 0188 4098C33D 		.word	1036228672
 1498 018c 0C94C53D 		.word	1036358668
 1499 0190 BD8FC73D 		.word	1036488637
 1500 0194 578BC93D 		.word	1036618583
 1501 0198 D886CB3D 		.word	1036748504
 1502 019c 4082CD3D 		.word	1036878400
ARM GAS  /tmp/cc6clGCp.s 			page 41


 1503 01a0 907DCF3D 		.word	1037008272
 1504 01a4 C578D13D 		.word	1037138117
 1505 01a8 E073D33D 		.word	1037267936
 1506 01ac E16ED53D 		.word	1037397729
 1507 01b0 C969D73D 		.word	1037527497
 1508 01b4 9664D93D 		.word	1037657238
 1509 01b8 475FDB3D 		.word	1037786951
 1510 01bc DF59DD3D 		.word	1037916639
 1511 01c0 5A54DF3D 		.word	1038046298
 1512 01c4 BA4EE13D 		.word	1038175930
 1513 01c8 0049E33D 		.word	1038305536
 1514 01cc 2843E53D 		.word	1038435112
 1515 01d0 353DE73D 		.word	1038564661
 1516 01d4 2537E93D 		.word	1038694181
 1517 01d8 F930EB3D 		.word	1038823673
 1518 01dc B12AED3D 		.word	1038953137
 1519 01e0 4924EF3D 		.word	1039082569
 1520 01e4 C61DF13D 		.word	1039211974
 1521 01e8 2517F33D 		.word	1039341349
 1522 01ec 6710F53D 		.word	1039470695
 1523 01f0 8B09F73D 		.word	1039600011
 1524 01f4 9002F93D 		.word	1039729296
 1525 01f8 77FBFA3D 		.word	1039858551
 1526 01fc 3FF4FC3D 		.word	1039987775
 1527 0200 E8ECFE3D 		.word	1040116968
 1528 0204 BA72003E 		.word	1040216762
 1529 0208 EF6E013E 		.word	1040281327
 1530 020c 146B023E 		.word	1040345876
 1531 0210 2A67033E 		.word	1040410410
 1532 0214 3063043E 		.word	1040474928
 1533 0218 265F053E 		.word	1040539430
 1534 021c 0B5B063E 		.word	1040603915
 1535 0220 E056073E 		.word	1040668384
 1536 0224 A452083E 		.word	1040732836
 1537 0228 584E093E 		.word	1040797272
 1538 022c FC490A3E 		.word	1040861692
 1539 0230 8E450B3E 		.word	1040926094
 1540 0234 10410C3E 		.word	1040990480
 1541 0238 803C0D3E 		.word	1041054848
 1542 023c E0370E3E 		.word	1041119200
 1543 0240 2E330F3E 		.word	1041183534
 1544 0244 6A2E103E 		.word	1041247850
 1545 0248 9629113E 		.word	1041312150
 1546 024c B024123E 		.word	1041376432
 1547 0250 B81F133E 		.word	1041440696
 1548 0254 AE1A143E 		.word	1041504942
 1549 0258 9215153E 		.word	1041569170
 1550 025c 6510163E 		.word	1041633381
 1551 0260 250B173E 		.word	1041697573
 1552 0264 D305183E 		.word	1041761747
 1553 0268 6F00193E 		.word	1041825903
 1554 026c F8FA193E 		.word	1041890040
 1555 0270 6EF51A3E 		.word	1041954158
 1556 0274 D2EF1B3E 		.word	1042018258
 1557 0278 24EA1C3E 		.word	1042082340
 1558 027c 62E41D3E 		.word	1042146402
 1559 0280 8DDE1E3E 		.word	1042210445
ARM GAS  /tmp/cc6clGCp.s 			page 42


 1560 0284 A5D81F3E 		.word	1042274469
 1561 0288 AAD2203E 		.word	1042338474
 1562 028c 9CCC213E 		.word	1042402460
 1563 0290 79C6223E 		.word	1042466425
 1564 0294 44C0233E 		.word	1042530372
 1565 0298 FBB9243E 		.word	1042594299
 1566 029c 9EB3253E 		.word	1042658206
 1567 02a0 2DAD263E 		.word	1042722093
 1568 02a4 A9A6273E 		.word	1042785961
 1569 02a8 10A0283E 		.word	1042849808
 1570 02ac 6399293E 		.word	1042913635
 1571 02b0 A2922A3E 		.word	1042977442
 1572 02b4 CD8B2B3E 		.word	1043041229
 1573 02b8 E2842C3E 		.word	1043104994
 1574 02bc E47D2D3E 		.word	1043168740
 1575 02c0 D0762E3E 		.word	1043232464
 1576 02c4 A86F2F3E 		.word	1043296168
 1577 02c8 6B68303E 		.word	1043359851
 1578 02cc 1861313E 		.word	1043423512
 1579 02d0 B259323E 		.word	1043487154
 1580 02d4 3552333E 		.word	1043550773
 1581 02d8 A34A343E 		.word	1043614371
 1582 02dc FB42353E 		.word	1043677947
 1583 02e0 3F3B363E 		.word	1043741503
 1584 02e4 6C33373E 		.word	1043805036
 1585 02e8 842B383E 		.word	1043868548
 1586 02ec 8623393E 		.word	1043932038
 1587 02f0 721B3A3E 		.word	1043995506
 1588 02f4 48133B3E 		.word	1044058952
 1589 02f8 080B3C3E 		.word	1044122376
 1590 02fc B1023D3E 		.word	1044185777
 1591 0300 44FA3D3E 		.word	1044249156
 1592 0304 C1F13E3E 		.word	1044312513
 1593 0308 27E93F3E 		.word	1044375847
 1594 030c 77E0403E 		.word	1044439159
 1595 0310 AFD7413E 		.word	1044502447
 1596 0314 D1CE423E 		.word	1044565713
 1597 0318 DCC5433E 		.word	1044628956
 1598 031c D0BC443E 		.word	1044692176
 1599 0320 ACB3453E 		.word	1044755372
 1600 0324 72AA463E 		.word	1044818546
 1601 0328 20A1473E 		.word	1044881696
 1602 032c B797483E 		.word	1044944823
 1603 0330 358E493E 		.word	1045007925
 1604 0334 9D844A3E 		.word	1045071005
 1605 0338 EC7A4B3E 		.word	1045134060
 1606 033c 24714C3E 		.word	1045197092
 1607 0340 44674D3E 		.word	1045260100
 1608 0344 4C5D4E3E 		.word	1045323084
 1609 0348 3B534F3E 		.word	1045386043
 1610 034c 1349503E 		.word	1045448979
 1611 0350 D23E513E 		.word	1045511890
 1612 0354 7834523E 		.word	1045574776
 1613 0358 062A533E 		.word	1045637638
 1614 035c 7C1F543E 		.word	1045700476
 1615 0360 D814553E 		.word	1045763288
 1616 0364 1C0A563E 		.word	1045826076
ARM GAS  /tmp/cc6clGCp.s 			page 43


 1617 0368 47FF563E 		.word	1045888839
 1618 036c 59F4573E 		.word	1045951577
 1619 0370 52E9583E 		.word	1046014290
 1620 0374 32DE593E 		.word	1046076978
 1621 0378 F8D25A3E 		.word	1046139640
 1622 037c A5C75B3E 		.word	1046202277
 1623 0380 39BC5C3E 		.word	1046264889
 1624 0384 B3B05D3E 		.word	1046327475
 1625 0388 13A55E3E 		.word	1046390035
 1626 038c 5A995F3E 		.word	1046452570
 1627 0390 868D603E 		.word	1046515078
 1628 0394 9981613E 		.word	1046577561
 1629 0398 9175623E 		.word	1046640017
 1630 039c 7069633E 		.word	1046702448
 1631 03a0 355D643E 		.word	1046764853
 1632 03a4 DE50653E 		.word	1046827230
 1633 03a8 6E44663E 		.word	1046889582
 1634 03ac E337673E 		.word	1046951907
 1635 03b0 3E2B683E 		.word	1047014206
 1636 03b4 7E1E693E 		.word	1047076478
 1637 03b8 A3116A3E 		.word	1047138723
 1638 03bc AD046B3E 		.word	1047200941
 1639 03c0 9DF76B3E 		.word	1047263133
 1640 03c4 71EA6C3E 		.word	1047325297
 1641 03c8 2ADD6D3E 		.word	1047387434
 1642 03cc C8CF6E3E 		.word	1047449544
 1643 03d0 4BC26F3E 		.word	1047511627
 1644 03d4 B2B4703E 		.word	1047573682
 1645 03d8 FEA6713E 		.word	1047635710
 1646 03dc 2E99723E 		.word	1047697710
 1647 03e0 438B733E 		.word	1047759683
 1648 03e4 3C7D743E 		.word	1047821628
 1649 03e8 196F753E 		.word	1047883545
 1650 03ec DA60763E 		.word	1047945434
 1651 03f0 7F52773E 		.word	1048007295
 1652 03f4 0844783E 		.word	1048069128
 1653 03f8 7535793E 		.word	1048130933
 1654 03fc C6267A3E 		.word	1048192710
 1655 0400 FA177B3E 		.word	1048254458
 1656 0404 12097C3E 		.word	1048316178
 1657 0408 0EFA7C3E 		.word	1048377870
 1658 040c ECEA7D3E 		.word	1048439532
 1659 0410 AEDB7E3E 		.word	1048501166
 1660 0414 54CC7F3E 		.word	1048562772
 1661 0418 6E5E803E 		.word	1048600174
 1662 041c A4D6803E 		.word	1048630948
 1663 0420 CB4E813E 		.word	1048661707
 1664 0424 E4C6813E 		.word	1048692452
 1665 0428 EE3E823E 		.word	1048723182
 1666 042c EAB6823E 		.word	1048753898
 1667 0430 D72E833E 		.word	1048784599
 1668 0434 B5A6833E 		.word	1048815285
 1669 0438 841E843E 		.word	1048845956
 1670 043c 4596843E 		.word	1048876613
 1671 0440 F60D853E 		.word	1048907254
 1672 0444 9A85853E 		.word	1048937882
 1673 0448 2EFD853E 		.word	1048968494
ARM GAS  /tmp/cc6clGCp.s 			page 44


 1674 044c B374863E 		.word	1048999091
 1675 0450 28EC863E 		.word	1049029672
 1676 0454 8F63873E 		.word	1049060239
 1677 0458 E7DA873E 		.word	1049090791
 1678 045c 3052883E 		.word	1049121328
 1679 0460 6AC9883E 		.word	1049151850
 1680 0464 9440893E 		.word	1049182356
 1681 0468 B0B7893E 		.word	1049212848
 1682 046c BC2E8A3E 		.word	1049243324
 1683 0470 B8A58A3E 		.word	1049273784
 1684 0474 A61C8B3E 		.word	1049304230
 1685 0478 84938B3E 		.word	1049334660
 1686 047c 520A8C3E 		.word	1049365074
 1687 0480 11818C3E 		.word	1049395473
 1688 0484 C1F78C3E 		.word	1049425857
 1689 0488 616E8D3E 		.word	1049456225
 1690 048c F1E48D3E 		.word	1049486577
 1691 0490 725B8E3E 		.word	1049516914
 1692 0494 E3D18E3E 		.word	1049547235
 1693 0498 45488F3E 		.word	1049577541
 1694 049c 97BE8F3E 		.word	1049607831
 1695 04a0 D934903E 		.word	1049638105
 1696 04a4 0BAB903E 		.word	1049668363
 1697 04a8 2D21913E 		.word	1049698605
 1698 04ac 4097913E 		.word	1049728832
 1699 04b0 420D923E 		.word	1049759042
 1700 04b4 3583923E 		.word	1049789237
 1701 04b8 18F9923E 		.word	1049819416
 1702 04bc EB6E933E 		.word	1049849579
 1703 04c0 ADE4933E 		.word	1049879725
 1704 04c4 605A943E 		.word	1049909856
 1705 04c8 02D0943E 		.word	1049939970
 1706 04cc 9445953E 		.word	1049970068
 1707 04d0 16BB953E 		.word	1050000150
 1708 04d4 8830963E 		.word	1050030216
 1709 04d8 EAA5963E 		.word	1050060266
 1710 04dc 3B1B973E 		.word	1050090299
 1711 04e0 7C90973E 		.word	1050120316
 1712 04e4 AD05983E 		.word	1050150317
 1713 04e8 CC7A983E 		.word	1050180300
 1714 04ec DCEF983E 		.word	1050210268
 1715 04f0 DC64993E 		.word	1050240220
 1716 04f4 CAD9993E 		.word	1050270154
 1717 04f8 A84E9A3E 		.word	1050300072
 1718 04fc 76C39A3E 		.word	1050329974
 1719 0500 33389B3E 		.word	1050359859
 1720 0504 DFAC9B3E 		.word	1050389727
 1721 0508 7B219C3E 		.word	1050419579
 1722 050c 06969C3E 		.word	1050449414
 1723 0510 800A9D3E 		.word	1050479232
 1724 0514 EA7E9D3E 		.word	1050509034
 1725 0518 42F39D3E 		.word	1050538818
 1726 051c 8A679E3E 		.word	1050568586
 1727 0520 C1DB9E3E 		.word	1050598337
 1728 0524 E74F9F3E 		.word	1050628071
 1729 0528 FCC39F3E 		.word	1050657788
 1730 052c 0038A03E 		.word	1050687488
ARM GAS  /tmp/cc6clGCp.s 			page 45


 1731 0530 F3ABA03E 		.word	1050717171
 1732 0534 D61FA13E 		.word	1050746838
 1733 0538 A793A13E 		.word	1050776487
 1734 053c 6607A23E 		.word	1050806118
 1735 0540 157BA23E 		.word	1050835733
 1736 0544 B3EEA23E 		.word	1050865331
 1737 0548 3F62A33E 		.word	1050894911
 1738 054c BAD5A33E 		.word	1050924474
 1739 0550 2449A43E 		.word	1050954020
 1740 0554 7DBCA43E 		.word	1050983549
 1741 0558 C42FA53E 		.word	1051013060
 1742 055c FAA2A53E 		.word	1051042554
 1743 0560 1F16A63E 		.word	1051072031
 1744 0564 3289A63E 		.word	1051101490
 1745 0568 34FCA63E 		.word	1051130932
 1746 056c 256FA73E 		.word	1051160357
 1747 0570 03E2A73E 		.word	1051189763
 1748 0574 D154A83E 		.word	1051219153
 1749 0578 8DC7A83E 		.word	1051248525
 1750 057c 373AA93E 		.word	1051277879
 1751 0580 CFACA93E 		.word	1051307215
 1752 0584 561FAA3E 		.word	1051336534
 1753 0588 CC91AA3E 		.word	1051365836
 1754 058c 2F04AB3E 		.word	1051395119
 1755 0590 8176AB3E 		.word	1051424385
 1756 0594 C1E8AB3E 		.word	1051453633
 1757 0598 EF5AAC3E 		.word	1051482863
 1758 059c 0CCDAC3E 		.word	1051512076
 1759 05a0 173FAD3E 		.word	1051541271
 1760 05a4 0FB1AD3E 		.word	1051570447
 1761 05a8 F622AE3E 		.word	1051599606
 1762 05ac CB94AE3E 		.word	1051628747
 1763 05b0 8E06AF3E 		.word	1051657870
 1764 05b4 3F78AF3E 		.word	1051686975
 1765 05b8 DEE9AF3E 		.word	1051716062
 1766 05bc 6B5BB03E 		.word	1051745131
 1767 05c0 E6CCB03E 		.word	1051774182
 1768 05c4 4F3EB13E 		.word	1051803215
 1769 05c8 A6AFB13E 		.word	1051832230
 1770 05cc EB20B23E 		.word	1051861227
 1771 05d0 1D92B23E 		.word	1051890205
 1772 05d4 3D03B33E 		.word	1051919165
 1773 05d8 4B74B33E 		.word	1051948107
 1774 05dc 47E5B33E 		.word	1051977031
 1775 05e0 3156B43E 		.word	1052005937
 1776 05e4 08C7B43E 		.word	1052034824
 1777 05e8 CD37B53E 		.word	1052063693
 1778 05ec 7FA8B53E 		.word	1052092543
 1779 05f0 2019B63E 		.word	1052121376
 1780 05f4 AE89B63E 		.word	1052150190
 1781 05f8 29FAB63E 		.word	1052178985
 1782 05fc 926AB73E 		.word	1052207762
 1783 0600 E8DAB73E 		.word	1052236520
 1784 0604 2C4BB83E 		.word	1052265260
 1785 0608 5EBBB83E 		.word	1052293982
 1786 060c 7D2BB93E 		.word	1052322685
 1787 0610 899BB93E 		.word	1052351369
ARM GAS  /tmp/cc6clGCp.s 			page 46


 1788 0614 830BBA3E 		.word	1052380035
 1789 0618 6A7BBA3E 		.word	1052408682
 1790 061c 3FEBBA3E 		.word	1052437311
 1791 0620 015BBB3E 		.word	1052465921
 1792 0624 B0CABB3E 		.word	1052494512
 1793 0628 4C3ABC3E 		.word	1052523084
 1794 062c D6A9BC3E 		.word	1052551638
 1795 0630 4D19BD3E 		.word	1052580173
 1796 0634 B188BD3E 		.word	1052608689
 1797 0638 03F8BD3E 		.word	1052637187
 1798 063c 4267BE3E 		.word	1052665666
 1799 0640 6DD6BE3E 		.word	1052694125
 1800 0644 8645BF3E 		.word	1052722566
 1801 0648 8CB4BF3E 		.word	1052750988
 1802 064c 7F23C03E 		.word	1052779391
 1803 0650 6092C03E 		.word	1052807776
 1804 0654 2D01C13E 		.word	1052836141
 1805 0658 E76FC13E 		.word	1052864487
 1806 065c 8EDEC13E 		.word	1052892814
 1807 0660 224DC23E 		.word	1052921122
 1808 0664 A4BBC23E 		.word	1052949412
 1809 0668 122AC33E 		.word	1052977682
 1810 066c 6D98C33E 		.word	1053005933
 1811 0670 B506C43E 		.word	1053034165
 1812 0674 EA74C43E 		.word	1053062378
 1813 0678 0CE3C43E 		.word	1053090572
 1814 067c 1A51C53E 		.word	1053118746
 1815 0680 15BFC53E 		.word	1053146901
 1816 0684 FE2CC63E 		.word	1053175038
 1817 0688 D39AC63E 		.word	1053203155
 1818 068c 9508C73E 		.word	1053231253
 1819 0690 4376C73E 		.word	1053259331
 1820 0694 DEE3C73E 		.word	1053287390
 1821 0698 6651C83E 		.word	1053315430
 1822 069c DBBEC83E 		.word	1053343451
 1823 06a0 3C2CC93E 		.word	1053371452
 1824 06a4 8A99C93E 		.word	1053399434
 1825 06a8 C406CA3E 		.word	1053427396
 1826 06ac EB73CA3E 		.word	1053455339
 1827 06b0 FFE0CA3E 		.word	1053483263
 1828 06b4 FF4DCB3E 		.word	1053511167
 1829 06b8 ECBACB3E 		.word	1053539052
 1830 06bc C527CC3E 		.word	1053566917
 1831 06c0 8B94CC3E 		.word	1053594763
 1832 06c4 3E01CD3E 		.word	1053622590
 1833 06c8 DC6DCD3E 		.word	1053650396
 1834 06cc 68DACD3E 		.word	1053678184
 1835 06d0 E046CE3E 		.word	1053705952
 1836 06d4 44B3CE3E 		.word	1053733700
 1837 06d8 941FCF3E 		.word	1053761428
 1838 06dc D18BCF3E 		.word	1053789137
 1839 06e0 FAF7CF3E 		.word	1053816826
 1840 06e4 1064D03E 		.word	1053844496
 1841 06e8 12D0D03E 		.word	1053872146
 1842 06ec 013CD13E 		.word	1053899777
 1843 06f0 DBA7D13E 		.word	1053927387
 1844 06f4 A213D23E 		.word	1053954978
ARM GAS  /tmp/cc6clGCp.s 			page 47


 1845 06f8 557FD23E 		.word	1053982549
 1846 06fc F5EAD23E 		.word	1054010101
 1847 0700 8156D33E 		.word	1054037633
 1848 0704 F9C1D33E 		.word	1054065145
 1849 0708 5D2DD43E 		.word	1054092637
 1850 070c AE98D43E 		.word	1054120110
 1851 0710 EA03D53E 		.word	1054147562
 1852 0714 136FD53E 		.word	1054174995
 1853 0718 27DAD53E 		.word	1054202407
 1854 071c 2945D63E 		.word	1054229801
 1855 0720 16B0D63E 		.word	1054257174
 1856 0724 EF1AD73E 		.word	1054284527
 1857 0728 B485D73E 		.word	1054311860
 1858 072c 66F0D73E 		.word	1054339174
 1859 0730 035BD83E 		.word	1054366467
 1860 0734 8DC5D83E 		.word	1054393741
 1861 0738 0230D93E 		.word	1054420994
 1862 073c 649AD93E 		.word	1054448228
 1863 0740 B204DA3E 		.word	1054475442
 1864 0744 EB6EDA3E 		.word	1054502635
 1865 0748 11D9DA3E 		.word	1054529809
 1866 074c 2243DB3E 		.word	1054556962
 1867 0750 20ADDB3E 		.word	1054584096
 1868 0754 0917DC3E 		.word	1054611209
 1869 0758 DF80DC3E 		.word	1054638303
 1870 075c A0EADC3E 		.word	1054665376
 1871 0760 4D54DD3E 		.word	1054692429
 1872 0764 E6BDDD3E 		.word	1054719462
 1873 0768 6B27DE3E 		.word	1054746475
 1874 076c DC90DE3E 		.word	1054773468
 1875 0770 38FADE3E 		.word	1054800440
 1876 0774 8163DF3E 		.word	1054827393
 1877 0778 B5CCDF3E 		.word	1054854325
 1878 077c D535E03E 		.word	1054881237
 1879 0780 E19EE03E 		.word	1054908129
 1880 0784 D907E13E 		.word	1054935001
 1881 0788 BD70E13E 		.word	1054961853
 1882 078c 8CD9E13E 		.word	1054988684
 1883 0790 4742E23E 		.word	1055015495
 1884 0794 EEAAE23E 		.word	1055042286
 1885 0798 8013E33E 		.word	1055069056
 1886 079c FE7BE33E 		.word	1055095806
 1887 07a0 68E4E33E 		.word	1055122536
 1888 07a4 BE4CE43E 		.word	1055149246
 1889 07a8 FFB4E43E 		.word	1055175935
 1890 07ac 2C1DE53E 		.word	1055202604
 1891 07b0 4585E53E 		.word	1055229253
 1892 07b4 49EDE53E 		.word	1055255881
 1893 07b8 3955E63E 		.word	1055282489
 1894 07bc 15BDE63E 		.word	1055309077
 1895 07c0 DC24E73E 		.word	1055335644
 1896 07c4 8F8CE73E 		.word	1055362191
 1897 07c8 2DF4E73E 		.word	1055388717
 1898 07cc B75BE83E 		.word	1055415223
 1899 07d0 2DC3E83E 		.word	1055441709
 1900 07d4 8E2AE93E 		.word	1055468174
 1901 07d8 DB91E93E 		.word	1055494619
ARM GAS  /tmp/cc6clGCp.s 			page 48


 1902 07dc 14F9E93E 		.word	1055521044
 1903 07e0 3760EA3E 		.word	1055547447
 1904 07e4 47C7EA3E 		.word	1055573831
 1905 07e8 422EEB3E 		.word	1055600194
 1906 07ec 2895EB3E 		.word	1055626536
 1907 07f0 FBFBEB3E 		.word	1055652859
 1908 07f4 B862EC3E 		.word	1055679160
 1909 07f8 61C9EC3E 		.word	1055705441
 1910 07fc F62FED3E 		.word	1055731702
 1911 0800 7696ED3E 		.word	1055757942
 1912 0804 E1FCED3E 		.word	1055784161
 1913 0808 3863EE3E 		.word	1055810360
 1914 080c 7BC9EE3E 		.word	1055836539
 1915 0810 A92FEF3E 		.word	1055862697
 1916 0814 C295EF3E 		.word	1055888834
 1917 0818 C7FBEF3E 		.word	1055914951
 1918 081c B761F03E 		.word	1055941047
 1919 0820 92C7F03E 		.word	1055967122
 1920 0824 592DF13E 		.word	1055993177
 1921 0828 0C93F13E 		.word	1056019212
 1922 082c AAF8F13E 		.word	1056045226
 1923 0830 335EF23E 		.word	1056071219
 1924 0834 A7C3F23E 		.word	1056097191
 1925 0838 0729F33E 		.word	1056123143
 1926 083c 538EF33E 		.word	1056149075
 1927 0840 8AF3F33E 		.word	1056174986
 1928 0844 AC58F43E 		.word	1056200876
 1929 0848 B9BDF43E 		.word	1056226745
 1930 084c B222F53E 		.word	1056252594
 1931 0850 9687F53E 		.word	1056278422
 1932 0854 66ECF53E 		.word	1056304230
 1933 0858 2151F63E 		.word	1056330017
 1934 085c C7B5F63E 		.word	1056355783
 1935 0860 581AF73E 		.word	1056381528
 1936 0864 D57EF73E 		.word	1056407253
 1937 0868 3DE3F73E 		.word	1056432957
 1938 086c 9147F83E 		.word	1056458641
 1939 0870 CFABF83E 		.word	1056484303
 1940 0874 F90FF93E 		.word	1056509945
 1941 0878 0F74F93E 		.word	1056535567
 1942 087c 0FD8F93E 		.word	1056561167
 1943 0880 FB3BFA3E 		.word	1056586747
 1944 0884 D29FFA3E 		.word	1056612306
 1945 0888 9503FB3E 		.word	1056637845
 1946 088c 4267FB3E 		.word	1056663362
 1947 0890 DBCAFB3E 		.word	1056688859
 1948 0894 602EFC3E 		.word	1056714336
 1949 0898 CF91FC3E 		.word	1056739791
 1950 089c 2AF5FC3E 		.word	1056765226
 1951 08a0 7058FD3E 		.word	1056790640
 1952 08a4 A1BBFD3E 		.word	1056816033
 1953 08a8 BE1EFE3E 		.word	1056841406
 1954 08ac C581FE3E 		.word	1056866757
 1955 08b0 B8E4FE3E 		.word	1056892088
 1956 08b4 9647FF3E 		.word	1056917398
 1957 08b8 60AAFF3E 		.word	1056942688
 1958 08bc 8A06003F 		.word	1056966282
ARM GAS  /tmp/cc6clGCp.s 			page 49


 1959 08c0 DA37003F 		.word	1056978906
 1960 08c4 1F69003F 		.word	1056991519
 1961 08c8 5B9A003F 		.word	1057004123
 1962 08cc 8CCB003F 		.word	1057016716
 1963 08d0 B2FC003F 		.word	1057029298
 1964 08d4 CE2D013F 		.word	1057041870
 1965 08d8 DF5E013F 		.word	1057054431
 1966 08dc E68F013F 		.word	1057066982
 1967 08e0 E3C0013F 		.word	1057079523
 1968 08e4 D6F1013F 		.word	1057092054
 1969 08e8 BD22023F 		.word	1057104573
 1970 08ec 9B53023F 		.word	1057117083
 1971 08f0 6E84023F 		.word	1057129582
 1972 08f4 37B5023F 		.word	1057142071
 1973 08f8 F5E5023F 		.word	1057154549
 1974 08fc A916033F 		.word	1057167017
 1975 0900 5347033F 		.word	1057179475
 1976 0904 F277033F 		.word	1057191922
 1977 0908 87A8033F 		.word	1057204359
 1978 090c 11D9033F 		.word	1057216785
 1979 0910 9109043F 		.word	1057229201
 1980 0914 063A043F 		.word	1057241606
 1981 0918 716A043F 		.word	1057254001
 1982 091c D29A043F 		.word	1057266386
 1983 0920 28CB043F 		.word	1057278760
 1984 0924 74FB043F 		.word	1057291124
 1985 0928 B52B053F 		.word	1057303477
 1986 092c EC5B053F 		.word	1057315820
 1987 0930 198C053F 		.word	1057328153
 1988 0934 3BBC053F 		.word	1057340475
 1989 0938 53EC053F 		.word	1057352787
 1990 093c 601C063F 		.word	1057365088
 1991 0940 634C063F 		.word	1057377379
 1992 0944 5C7C063F 		.word	1057389660
 1993 0948 4AAC063F 		.word	1057401930
 1994 094c 2EDC063F 		.word	1057414190
 1995 0950 070C073F 		.word	1057426439
 1996 0954 D63B073F 		.word	1057438678
 1997 0958 9A6B073F 		.word	1057450906
 1998 095c 549B073F 		.word	1057463124
 1999 0960 04CB073F 		.word	1057475332
 2000 0964 A9FA073F 		.word	1057487529
 2001 0968 442A083F 		.word	1057499716
 2002 096c D559083F 		.word	1057511893
 2003 0970 5B89083F 		.word	1057524059
 2004 0974 D6B8083F 		.word	1057536214
 2005 0978 47E8083F 		.word	1057548359
 2006 097c AE17093F 		.word	1057560494
 2007 0980 0B47093F 		.word	1057572619
 2008 0984 5C76093F 		.word	1057584732
 2009 0988 A4A5093F 		.word	1057596836
 2010 098c E1D4093F 		.word	1057608929
 2011 0990 14040A3F 		.word	1057621012
 2012 0994 3C330A3F 		.word	1057633084
 2013 0998 5A620A3F 		.word	1057645146
 2014 099c 6E910A3F 		.word	1057657198
 2015 09a0 77C00A3F 		.word	1057669239
ARM GAS  /tmp/cc6clGCp.s 			page 50


 2016 09a4 76EF0A3F 		.word	1057681270
 2017 09a8 6A1E0B3F 		.word	1057693290
 2018 09ac 544D0B3F 		.word	1057705300
 2019 09b0 347C0B3F 		.word	1057717300
 2020 09b4 09AB0B3F 		.word	1057729289
 2021 09b8 D4D90B3F 		.word	1057741268
 2022 09bc 94080C3F 		.word	1057753236
 2023 09c0 4A370C3F 		.word	1057765194
 2024 09c4 F5650C3F 		.word	1057777141
 2025 09c8 97940C3F 		.word	1057789079
 2026 09cc 2EC30C3F 		.word	1057801006
 2027 09d0 BAF10C3F 		.word	1057812922
 2028 09d4 3C200D3F 		.word	1057824828
 2029 09d8 B44E0D3F 		.word	1057836724
 2030 09dc 217D0D3F 		.word	1057848609
 2031 09e0 84AB0D3F 		.word	1057860484
 2032 09e4 DDD90D3F 		.word	1057872349
 2033 09e8 2B080E3F 		.word	1057884203
 2034 09ec 6F360E3F 		.word	1057896047
 2035 09f0 A8640E3F 		.word	1057907880
 2036 09f4 D7920E3F 		.word	1057919703
 2037 09f8 FCC00E3F 		.word	1057931516
 2038 09fc 16EF0E3F 		.word	1057943318
 2039 0a00 261D0F3F 		.word	1057955110
 2040 0a04 2C4B0F3F 		.word	1057966892
 2041 0a08 27790F3F 		.word	1057978663
 2042 0a0c 18A70F3F 		.word	1057990424
 2043 0a10 FED40F3F 		.word	1058002174
 2044 0a14 DB02103F 		.word	1058013915
 2045 0a18 AC30103F 		.word	1058025644
 2046 0a1c 745E103F 		.word	1058037364
 2047 0a20 318C103F 		.word	1058049073
 2048 0a24 E4B9103F 		.word	1058060772
 2049 0a28 8CE7103F 		.word	1058072460
 2050 0a2c 2B15113F 		.word	1058084139
 2051 0a30 BE42113F 		.word	1058095806
 2052 0a34 4870113F 		.word	1058107464
 2053 0a38 C79D113F 		.word	1058119111
 2054 0a3c 3CCB113F 		.word	1058130748
 2055 0a40 A6F8113F 		.word	1058142374
 2056 0a44 0626123F 		.word	1058153990
 2057 0a48 5C53123F 		.word	1058165596
 2058 0a4c A880123F 		.word	1058177192
 2059 0a50 E9AD123F 		.word	1058188777
 2060 0a54 20DB123F 		.word	1058200352
 2061 0a58 4C08133F 		.word	1058211916
 2062 0a5c 6E35133F 		.word	1058223470
 2063 0a60 8662133F 		.word	1058235014
 2064 0a64 948F133F 		.word	1058246548
 2065 0a68 97BC133F 		.word	1058258071
 2066 0a6c 90E9133F 		.word	1058269584
 2067 0a70 7F16143F 		.word	1058281087
 2068 0a74 6443143F 		.word	1058292580
 2069 0a78 3E70143F 		.word	1058304062
 2070 0a7c 0E9D143F 		.word	1058315534
 2071 0a80 D3C9143F 		.word	1058326995
 2072 0a84 8FF6143F 		.word	1058338447
ARM GAS  /tmp/cc6clGCp.s 			page 51


 2073 0a88 4023153F 		.word	1058349888
 2074 0a8c E64F153F 		.word	1058361318
 2075 0a90 837C153F 		.word	1058372739
 2076 0a94 15A9153F 		.word	1058384149
 2077 0a98 9DD5153F 		.word	1058395549
 2078 0a9c 1B02163F 		.word	1058406939
 2079 0aa0 8F2E163F 		.word	1058418319
 2080 0aa4 F85A163F 		.word	1058429688
 2081 0aa8 5787163F 		.word	1058441047
 2082 0aac ABB3163F 		.word	1058452395
 2083 0ab0 F6DF163F 		.word	1058463734
 2084 0ab4 360C173F 		.word	1058475062
 2085 0ab8 6C38173F 		.word	1058486380
 2086 0abc 9864173F 		.word	1058497688
 2087 0ac0 BA90173F 		.word	1058508986
 2088 0ac4 D1BC173F 		.word	1058520273
 2089 0ac8 DEE8173F 		.word	1058531550
 2090 0acc E114183F 		.word	1058542817
 2091 0ad0 DA40183F 		.word	1058554074
 2092 0ad4 C86C183F 		.word	1058565320
 2093 0ad8 AC98183F 		.word	1058576556
 2094 0adc 87C4183F 		.word	1058587783
 2095 0ae0 56F0183F 		.word	1058598998
 2096 0ae4 1C1C193F 		.word	1058610204
 2097 0ae8 D847193F 		.word	1058621400
 2098 0aec 8973193F 		.word	1058632585
 2099 0af0 309F193F 		.word	1058643760
 2100 0af4 CDCA193F 		.word	1058654925
 2101 0af8 60F6193F 		.word	1058666080
 2102 0afc E8211A3F 		.word	1058677224
 2103 0b00 674D1A3F 		.word	1058688359
 2104 0b04 DB781A3F 		.word	1058699483
 2105 0b08 45A41A3F 		.word	1058710597
 2106 0b0c A5CF1A3F 		.word	1058721701
 2107 0b10 FBFA1A3F 		.word	1058732795
 2108 0b14 47261B3F 		.word	1058743879
 2109 0b18 88511B3F 		.word	1058754952
 2110 0b1c C07C1B3F 		.word	1058766016
 2111 0b20 EDA71B3F 		.word	1058777069
 2112 0b24 10D31B3F 		.word	1058788112
 2113 0b28 29FE1B3F 		.word	1058799145
 2114 0b2c 38291C3F 		.word	1058810168
 2115 0b30 3D541C3F 		.word	1058821181
 2116 0b34 377F1C3F 		.word	1058832183
 2117 0b38 28AA1C3F 		.word	1058843176
 2118 0b3c 0ED51C3F 		.word	1058854158
 2119 0b40 EBFF1C3F 		.word	1058865131
 2120 0b44 BD2A1D3F 		.word	1058876093
 2121 0b48 85551D3F 		.word	1058887045
 2122 0b4c 43801D3F 		.word	1058897987
 2123 0b50 F7AA1D3F 		.word	1058908919
 2124 0b54 A1D51D3F 		.word	1058919841
 2125 0b58 41001E3F 		.word	1058930753
 2126 0b5c D72A1E3F 		.word	1058941655
 2127 0b60 63551E3F 		.word	1058952547
 2128 0b64 E57F1E3F 		.word	1058963429
 2129 0b68 5CAA1E3F 		.word	1058974300
ARM GAS  /tmp/cc6clGCp.s 			page 52


 2130 0b6c CAD41E3F 		.word	1058985162
 2131 0b70 2DFF1E3F 		.word	1058996013
 2132 0b74 87291F3F 		.word	1059006855
 2133 0b78 D7531F3F 		.word	1059017687
 2134 0b7c 1C7E1F3F 		.word	1059028508
 2135 0b80 57A81F3F 		.word	1059039319
 2136 0b84 89D21F3F 		.word	1059050121
 2137 0b88 B0FC1F3F 		.word	1059060912
 2138 0b8c CE26203F 		.word	1059071694
 2139 0b90 E150203F 		.word	1059082465
 2140 0b94 EB7A203F 		.word	1059093227
 2141 0b98 EAA4203F 		.word	1059103978
 2142 0b9c E0CE203F 		.word	1059114720
 2143 0ba0 CBF8203F 		.word	1059125451
 2144 0ba4 AD22213F 		.word	1059136173
 2145 0ba8 844C213F 		.word	1059146884
 2146 0bac 5276213F 		.word	1059157586
 2147 0bb0 15A0213F 		.word	1059168277
 2148 0bb4 CFC9213F 		.word	1059178959
 2149 0bb8 7FF3213F 		.word	1059189631
 2150 0bbc 241D223F 		.word	1059200292
 2151 0bc0 C046223F 		.word	1059210944
 2152 0bc4 5270223F 		.word	1059221586
 2153 0bc8 DA99223F 		.word	1059232218
 2154 0bcc 58C3223F 		.word	1059242840
 2155 0bd0 CCEC223F 		.word	1059253452
 2156 0bd4 3716233F 		.word	1059264055
 2157 0bd8 973F233F 		.word	1059274647
 2158 0bdc ED68233F 		.word	1059285229
 2159 0be0 3A92233F 		.word	1059295802
 2160 0be4 7CBB233F 		.word	1059306364
 2161 0be8 B5E4233F 		.word	1059316917
 2162 0bec E40D243F 		.word	1059327460
 2163 0bf0 0937243F 		.word	1059337993
 2164 0bf4 2460243F 		.word	1059348516
 2165 0bf8 3589243F 		.word	1059359029
 2166 0bfc 3DB2243F 		.word	1059369533
 2167 0c00 3ADB243F 		.word	1059380026
 2168 0c04 2E04253F 		.word	1059390510
 2169 0c08 182D253F 		.word	1059400984
 2170 0c0c F855253F 		.word	1059411448
 2171 0c10 CE7E253F 		.word	1059421902
 2172 0c14 9BA7253F 		.word	1059432347
 2173 0c18 5DD0253F 		.word	1059442781
 2174 0c1c 16F9253F 		.word	1059453206
 2175 0c20 C521263F 		.word	1059463621
 2176 0c24 6A4A263F 		.word	1059474026
 2177 0c28 0573263F 		.word	1059484421
 2178 0c2c 979B263F 		.word	1059494807
 2179 0c30 1FC4263F 		.word	1059505183
 2180 0c34 9DEC263F 		.word	1059515549
 2181 0c38 1115273F 		.word	1059525905
 2182 0c3c 7B3D273F 		.word	1059536251
 2183 0c40 DC65273F 		.word	1059546588
 2184 0c44 338E273F 		.word	1059556915
 2185 0c48 80B6273F 		.word	1059567232
 2186 0c4c C4DE273F 		.word	1059577540
ARM GAS  /tmp/cc6clGCp.s 			page 53


 2187 0c50 FD06283F 		.word	1059587837
 2188 0c54 2D2F283F 		.word	1059598125
 2189 0c58 5457283F 		.word	1059608404
 2190 0c5c 707F283F 		.word	1059618672
 2191 0c60 83A7283F 		.word	1059628931
 2192 0c64 8CCF283F 		.word	1059639180
 2193 0c68 8CF7283F 		.word	1059649420
 2194 0c6c 821F293F 		.word	1059659650
 2195 0c70 6E47293F 		.word	1059669870
 2196 0c74 506F293F 		.word	1059680080
 2197 0c78 2997293F 		.word	1059690281
 2198 0c7c F8BE293F 		.word	1059700472
 2199 0c80 BDE6293F 		.word	1059710653
 2200 0c84 790E2A3F 		.word	1059720825
 2201 0c88 2B362A3F 		.word	1059730987
 2202 0c8c D45D2A3F 		.word	1059741140
 2203 0c90 72852A3F 		.word	1059751282
 2204 0c94 08AD2A3F 		.word	1059761416
 2205 0c98 93D42A3F 		.word	1059771539
 2206 0c9c 15FC2A3F 		.word	1059781653
 2207 0ca0 8D232B3F 		.word	1059791757
 2208 0ca4 FC4A2B3F 		.word	1059801852
 2209 0ca8 61722B3F 		.word	1059811937
 2210 0cac BD992B3F 		.word	1059822013
 2211 0cb0 0FC12B3F 		.word	1059832079
 2212 0cb4 57E82B3F 		.word	1059842135
 2213 0cb8 960F2C3F 		.word	1059852182
 2214 0cbc CB362C3F 		.word	1059862219
 2215 0cc0 F75D2C3F 		.word	1059872247
 2216 0cc4 19852C3F 		.word	1059882265
 2217 0cc8 32AC2C3F 		.word	1059892274
 2218 0ccc 41D32C3F 		.word	1059902273
 2219 0cd0 46FA2C3F 		.word	1059912262
 2220 0cd4 42212D3F 		.word	1059922242
 2221 0cd8 35482D3F 		.word	1059932213
 2222 0cdc 1E6F2D3F 		.word	1059942174
 2223 0ce0 FD952D3F 		.word	1059952125
 2224 0ce4 D3BC2D3F 		.word	1059962067
 2225 0ce8 A0E32D3F 		.word	1059972000
 2226 0cec 630A2E3F 		.word	1059981923
 2227 0cf0 1C312E3F 		.word	1059991836
 2228 0cf4 CC572E3F 		.word	1060001740
 2229 0cf8 737E2E3F 		.word	1060011635
 2230 0cfc 10A52E3F 		.word	1060021520
 2231 0d00 A4CB2E3F 		.word	1060031396
 2232 0d04 2EF22E3F 		.word	1060041262
 2233 0d08 AE182F3F 		.word	1060051118
 2234 0d0c 263F2F3F 		.word	1060060966
 2235 0d10 94652F3F 		.word	1060070804
 2236 0d14 F88B2F3F 		.word	1060080632
 2237 0d18 53B22F3F 		.word	1060090451
 2238 0d1c A5D82F3F 		.word	1060100261
 2239 0d20 EDFE2F3F 		.word	1060110061
 2240 0d24 2C25303F 		.word	1060119852
 2241 0d28 614B303F 		.word	1060129633
 2242 0d2c 8E71303F 		.word	1060139406
 2243 0d30 B097303F 		.word	1060149168
ARM GAS  /tmp/cc6clGCp.s 			page 54


 2244 0d34 CABD303F 		.word	1060158922
 2245 0d38 DAE3303F 		.word	1060168666
 2246 0d3c E009313F 		.word	1060178400
 2247 0d40 DE2F313F 		.word	1060188126
 2248 0d44 D255313F 		.word	1060197842
 2249 0d48 BC7B313F 		.word	1060207548
 2250 0d4c 9EA1313F 		.word	1060217246
 2251 0d50 76C7313F 		.word	1060226934
 2252 0d54 44ED313F 		.word	1060236612
 2253 0d58 0A13323F 		.word	1060246282
 2254 0d5c C638323F 		.word	1060255942
 2255 0d60 795E323F 		.word	1060265593
 2256 0d64 2284323F 		.word	1060275234
 2257 0d68 C2A9323F 		.word	1060284866
 2258 0d6c 59CF323F 		.word	1060294489
 2259 0d70 E7F4323F 		.word	1060304103
 2260 0d74 6C1A333F 		.word	1060313708
 2261 0d78 E73F333F 		.word	1060323303
 2262 0d7c 5965333F 		.word	1060332889
 2263 0d80 C28A333F 		.word	1060342466
 2264 0d84 21B0333F 		.word	1060352033
 2265 0d88 77D5333F 		.word	1060361591
 2266 0d8c C5FA333F 		.word	1060371141
 2267 0d90 0820343F 		.word	1060380680
 2268 0d94 4345343F 		.word	1060390211
 2269 0d98 756A343F 		.word	1060399733
 2270 0d9c 9D8F343F 		.word	1060409245
 2271 0da0 BCB4343F 		.word	1060418748
 2272 0da4 D2D9343F 		.word	1060428242
 2273 0da8 DFFE343F 		.word	1060437727
 2274 0dac E323353F 		.word	1060447203
 2275 0db0 DD48353F 		.word	1060456669
 2276 0db4 CF6D353F 		.word	1060466127
 2277 0db8 B792353F 		.word	1060475575
 2278 0dbc 96B7353F 		.word	1060485014
 2279 0dc0 6CDC353F 		.word	1060494444
 2280 0dc4 3901363F 		.word	1060503865
 2281 0dc8 FD25363F 		.word	1060513277
 2282 0dcc B74A363F 		.word	1060522679
 2283 0dd0 696F363F 		.word	1060532073
 2284 0dd4 1194363F 		.word	1060541457
 2285 0dd8 B1B8363F 		.word	1060550833
 2286 0ddc 47DD363F 		.word	1060560199
 2287 0de0 D501373F 		.word	1060569557
 2288 0de4 5926373F 		.word	1060578905
 2289 0de8 D44A373F 		.word	1060588244
 2290 0dec 466F373F 		.word	1060597574
 2291 0df0 B093373F 		.word	1060606896
 2292 0df4 10B8373F 		.word	1060616208
 2293 0df8 67DC373F 		.word	1060625511
 2294 0dfc B500383F 		.word	1060634805
 2295 0e00 FA24383F 		.word	1060644090
 2296 0e04 3649383F 		.word	1060653366
 2297 0e08 696D383F 		.word	1060662633
 2298 0e0c 9491383F 		.word	1060671892
 2299 0e10 B5B5383F 		.word	1060681141
 2300 0e14 CDD9383F 		.word	1060690381
ARM GAS  /tmp/cc6clGCp.s 			page 55


 2301 0e18 DCFD383F 		.word	1060699612
 2302 0e1c E321393F 		.word	1060708835
 2303 0e20 E045393F 		.word	1060718048
 2304 0e24 D569393F 		.word	1060727253
 2305 0e28 C08D393F 		.word	1060736448
 2306 0e2c A3B1393F 		.word	1060745635
 2307 0e30 7CD5393F 		.word	1060754812
 2308 0e34 4DF9393F 		.word	1060763981
 2309 0e38 151D3A3F 		.word	1060773141
 2310 0e3c D4403A3F 		.word	1060782292
 2311 0e40 8A643A3F 		.word	1060791434
 2312 0e44 38883A3F 		.word	1060800568
 2313 0e48 DCAB3A3F 		.word	1060809692
 2314 0e4c 77CF3A3F 		.word	1060818807
 2315 0e50 0AF33A3F 		.word	1060827914
 2316 0e54 94163B3F 		.word	1060837012
 2317 0e58 153A3B3F 		.word	1060846101
 2318 0e5c 8D5D3B3F 		.word	1060855181
 2319 0e60 FD803B3F 		.word	1060864253
 2320 0e64 63A43B3F 		.word	1060873315
 2321 0e68 C1C73B3F 		.word	1060882369
 2322 0e6c 16EB3B3F 		.word	1060891414
 2323 0e70 620E3C3F 		.word	1060900450
 2324 0e74 A5313C3F 		.word	1060909477
 2325 0e78 E0543C3F 		.word	1060918496
 2326 0e7c 12783C3F 		.word	1060927506
 2327 0e80 3B9B3C3F 		.word	1060936507
 2328 0e84 5BBE3C3F 		.word	1060945499
 2329 0e88 73E13C3F 		.word	1060954483
 2330 0e8c 81043D3F 		.word	1060963457
 2331 0e90 88273D3F 		.word	1060972424
 2332 0e94 854A3D3F 		.word	1060981381
 2333 0e98 7A6D3D3F 		.word	1060990330
 2334 0e9c 66903D3F 		.word	1060999270
 2335 0ea0 49B33D3F 		.word	1061008201
 2336 0ea4 23D63D3F 		.word	1061017123
 2337 0ea8 F5F83D3F 		.word	1061026037
 2338 0eac BE1B3E3F 		.word	1061034942
 2339 0eb0 7F3E3E3F 		.word	1061043839
 2340 0eb4 37613E3F 		.word	1061052727
 2341 0eb8 E6833E3F 		.word	1061061606
 2342 0ebc 8DA63E3F 		.word	1061070477
 2343 0ec0 2BC93E3F 		.word	1061079339
 2344 0ec4 C0EB3E3F 		.word	1061088192
 2345 0ec8 4C0E3F3F 		.word	1061097036
 2346 0ecc D1303F3F 		.word	1061105873
 2347 0ed0 4C533F3F 		.word	1061114700
 2348 0ed4 BF753F3F 		.word	1061123519
 2349 0ed8 29983F3F 		.word	1061132329
 2350 0edc 8BBA3F3F 		.word	1061141131
 2351 0ee0 E4DC3F3F 		.word	1061149924
 2352 0ee4 34FF3F3F 		.word	1061158708
 2353 0ee8 7C21403F 		.word	1061167484
 2354 0eec BC43403F 		.word	1061176252
 2355 0ef0 F365403F 		.word	1061185011
 2356 0ef4 2188403F 		.word	1061193761
 2357 0ef8 47AA403F 		.word	1061202503
ARM GAS  /tmp/cc6clGCp.s 			page 56


 2358 0efc 64CC403F 		.word	1061211236
 2359 0f00 79EE403F 		.word	1061219961
 2360 0f04 8510413F 		.word	1061228677
 2361 0f08 8932413F 		.word	1061237385
 2362 0f0c 8454413F 		.word	1061246084
 2363 0f10 7776413F 		.word	1061254775
 2364 0f14 6198413F 		.word	1061263457
 2365 0f18 43BA413F 		.word	1061272131
 2366 0f1c 1CDC413F 		.word	1061280796
 2367 0f20 EEFD413F 		.word	1061289454
 2368 0f24 B61F423F 		.word	1061298102
 2369 0f28 7641423F 		.word	1061306742
 2370 0f2c 2E63423F 		.word	1061315374
 2371 0f30 DD84423F 		.word	1061323997
 2372 0f34 84A6423F 		.word	1061332612
 2373 0f38 22C8423F 		.word	1061341218
 2374 0f3c B8E9423F 		.word	1061349816
 2375 0f40 460B433F 		.word	1061358406
 2376 0f44 CB2C433F 		.word	1061366987
 2377 0f48 484E433F 		.word	1061375560
 2378 0f4c BC6F433F 		.word	1061384124
 2379 0f50 2891433F 		.word	1061392680
 2380 0f54 8CB2433F 		.word	1061401228
 2381 0f58 E7D3433F 		.word	1061409767
 2382 0f5c 3AF5433F 		.word	1061418298
 2383 0f60 8516443F 		.word	1061426821
 2384 0f64 C737443F 		.word	1061435335
 2385 0f68 0159443F 		.word	1061443841
 2386 0f6c 337A443F 		.word	1061452339
 2387 0f70 5D9B443F 		.word	1061460829
 2388 0f74 7EBC443F 		.word	1061469310
 2389 0f78 97DD443F 		.word	1061477783
 2390 0f7c A8FE443F 		.word	1061486248
 2391 0f80 B01F453F 		.word	1061494704
 2392 0f84 B040453F 		.word	1061503152
 2393 0f88 A861453F 		.word	1061511592
 2394 0f8c 9882453F 		.word	1061520024
 2395 0f90 7FA3453F 		.word	1061528447
 2396 0f94 5EC4453F 		.word	1061536862
 2397 0f98 35E5453F 		.word	1061545269
 2398 0f9c 0406463F 		.word	1061553668
 2399 0fa0 CA26463F 		.word	1061562058
 2400 0fa4 8947463F 		.word	1061570441
 2401 0fa8 3F68463F 		.word	1061578815
 2402 0fac ED88463F 		.word	1061587181
 2403 0fb0 93A9463F 		.word	1061595539
 2404 0fb4 30CA463F 		.word	1061603888
 2405 0fb8 C6EA463F 		.word	1061612230
 2406 0fbc 530B473F 		.word	1061620563
 2407 0fc0 D82B473F 		.word	1061628888
 2408 0fc4 554C473F 		.word	1061637205
 2409 0fc8 CA6C473F 		.word	1061645514
 2410 0fcc 378D473F 		.word	1061653815
 2411 0fd0 9CAD473F 		.word	1061662108
 2412 0fd4 F8CD473F 		.word	1061670392
 2413 0fd8 4DEE473F 		.word	1061678669
 2414 0fdc 990E483F 		.word	1061686937
ARM GAS  /tmp/cc6clGCp.s 			page 57


 2415 0fe0 DE2E483F 		.word	1061695198
 2416 0fe4 1A4F483F 		.word	1061703450
 2417 0fe8 4E6F483F 		.word	1061711694
 2418 0fec 7A8F483F 		.word	1061719930
 2419 0ff0 9FAF483F 		.word	1061728159
 2420 0ff4 BBCF483F 		.word	1061736379
 2421 0ff8 CFEF483F 		.word	1061744591
 2422 0ffc DB0F493F 		.word	1061752795
 2423              		.text
 2424              	.Letext0:
 2425              		.file 3 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 2426              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 2427              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2428              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2429              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2430              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2431              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2432              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2433              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2434              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 2435              		.file 13 "Core/Inc/adc.h"
 2436              		.file 14 "Core/Inc/usart.h"
 2437              		.file 15 "Core/Inc/atan_lut.h"
 2438              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2439              		.file 17 "/usr/include/newlib/math.h"
 2440              		.file 18 "Core/Inc/tim.h"
 2441              		.file 19 "Core/Inc/gpio.h"
 2442              		.file 20 "<built-in>"
ARM GAS  /tmp/cc6clGCp.s 			page 58


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cc6clGCp.s:26     .text.decayAndMerge:00000000 $t
     /tmp/cc6clGCp.s:32     .text.decayAndMerge:00000000 decayAndMerge
     /tmp/cc6clGCp.s:93     .text.decayAndMerge:00000040 $d
     /tmp/cc6clGCp.s:100    .text.HallPositionOutput:00000000 $t
     /tmp/cc6clGCp.s:106    .text.HallPositionOutput:00000000 HallPositionOutput
     /tmp/cc6clGCp.s:303    .text.HallPositionOutput:000000fc $d
     /tmp/cc6clGCp.s:308    .text.HallPositionOutput_10Pair:00000000 $t
     /tmp/cc6clGCp.s:314    .text.HallPositionOutput_10Pair:00000000 HallPositionOutput_10Pair
     /tmp/cc6clGCp.s:341    .text.HallPositionOutput_10Pair:0000001e $d
     /tmp/cc6clGCp.s:377    .text.HallPositionOutput_10Pair:00000042 $t
     /tmp/cc6clGCp.s:528    .text.HallPositionOutput_10Pair:00000110 $d
     /tmp/cc6clGCp.s:534    .text.HallPositionOutput_10PairNot:00000000 $t
     /tmp/cc6clGCp.s:540    .text.HallPositionOutput_10PairNot:00000000 HallPositionOutput_10PairNot
     /tmp/cc6clGCp.s:567    .text.HallPositionOutput_10PairNot:0000001e $d
     /tmp/cc6clGCp.s:603    .text.HallPositionOutput_10PairNot:00000042 $t
     /tmp/cc6clGCp.s:754    .text.HallPositionOutput_10PairNot:00000110 $d
     /tmp/cc6clGCp.s:760    .text.HallPositionOutput_20Pair:00000000 $t
     /tmp/cc6clGCp.s:766    .text.HallPositionOutput_20Pair:00000000 HallPositionOutput_20Pair
     /tmp/cc6clGCp.s:793    .text.HallPositionOutput_20Pair:0000001e $d
     /tmp/cc6clGCp.s:811    .text.HallPositionOutput_20Pair:00000030 $t
     /tmp/cc6clGCp.s:962    .text.HallPositionOutput_20Pair:000000fc $d
     /tmp/cc6clGCp.s:968    .text.__io_putchar:00000000 $t
     /tmp/cc6clGCp.s:974    .text.__io_putchar:00000000 __io_putchar
     /tmp/cc6clGCp.s:1010   .text.__io_putchar:0000001c $d
     /tmp/cc6clGCp.s:1015   .rodata.Error_Handler.str1.4:00000000 $d
     /tmp/cc6clGCp.s:1019   .text.Error_Handler:00000000 $t
     /tmp/cc6clGCp.s:1025   .text.Error_Handler:00000000 Error_Handler
     /tmp/cc6clGCp.s:1067   .text.Error_Handler:00000014 $d
     /tmp/cc6clGCp.s:1072   .text.SystemClock_Config:00000000 $t
     /tmp/cc6clGCp.s:1078   .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/cc6clGCp.s:1207   .text.main:00000000 $t
     /tmp/cc6clGCp.s:1213   .text.main:00000000 main
     /tmp/cc6clGCp.s:1384   .text.main:000000b8 $d
     /tmp/cc6clGCp.s:1398   .rodata.ATAN_LUT:00000000 ATAN_LUT
     /tmp/cc6clGCp.s:1395   .rodata.ATAN_LUT:00000000 $d

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_dmul
__aeabi_i2f
__aeabi_fmul
__aeabi_f2d
__aeabi_dadd
__aeabi_d2iz
HAL_GPIO_WritePin
HAL_UART_Transmit
huart1
puts
HAL_Delay
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_fsub
__aeabi_fcmpeq
ARM GAS  /tmp/cc6clGCp.s 			page 59


HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_ADC2_Init
MX_USART1_UART_Init
MX_TIM2_Init
atan2f
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
hadc1
hadc2
