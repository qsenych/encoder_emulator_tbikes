ARM GAS  /tmp/ccidj5xY.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB73:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "atan_lut.h"
  25:Core/Src/main.c **** #include "math.h"
  26:Core/Src/main.c **** #include "stm32f1xx_hal_gpio.h"
  27:Core/Src/main.c **** #include <stdio.h>
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/ccidj5xY.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** #define SIN_PERIODS_PER_REV 1
  38:Core/Src/main.c **** #define HALL_PERIODS_PER_REV 20
  39:Core/Src/main.c **** #define OFFSET 0
  40:Core/Src/main.c **** #define LUT_SIZE 1024
  41:Core/Src/main.c **** #define ADC_MAX 4012.855
  42:Core/Src/main.c **** #define ADC_MIN 880.87
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/main.c **** /* USER CODE BEGIN PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  53:Core/Src/main.c **** ADC_HandleTypeDef hadc2;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** UART_HandleTypeDef huart1;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE BEGIN PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PV */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  62:Core/Src/main.c **** void SystemClock_Config(void);
  63:Core/Src/main.c **** static void MX_GPIO_Init(void);
  64:Core/Src/main.c **** static void MX_ADC1_Init(void);
  65:Core/Src/main.c **** static void MX_ADC2_Init(void);
  66:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  67:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  68:Core/Src/main.c **** static float fast_atan(uint16_t ADC_C, uint16_t ADC_S);
  69:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  70:Core/Src/main.c **** /* USER CODE END PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  73:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /**
  78:Core/Src/main.c ****  * @brief  The application entry point.
  79:Core/Src/main.c ****  * @retval int
  80:Core/Src/main.c ****  */
  81:Core/Src/main.c **** int main(void) {
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   uint16_t sin_adc;
  86:Core/Src/main.c ****   uint16_t cos_adc;
  87:Core/Src/main.c ****   float theta_rad;
  88:Core/Src/main.c ****   uint16_t theta_deg; // only for debugging
  89:Core/Src/main.c ****   /* USER CODE END 1 */
  90:Core/Src/main.c **** 
ARM GAS  /tmp/ccidj5xY.s 			page 3


  91:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick.
  94:Core/Src/main.c ****    */
  95:Core/Src/main.c ****   HAL_Init();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END Init */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Configure the system clock */
 102:Core/Src/main.c ****   SystemClock_Config();
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE END SysInit */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Initialize all configured peripherals */
 109:Core/Src/main.c ****   MX_GPIO_Init();
 110:Core/Src/main.c ****   MX_ADC1_Init();
 111:Core/Src/main.c ****   MX_ADC2_Init();
 112:Core/Src/main.c ****   MX_USART1_UART_Init();
 113:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END 2 */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Infinite loop */
 118:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 119:Core/Src/main.c ****   while (1) {
 120:Core/Src/main.c ****     HAL_ADC_Start(&hadc1); // Needs to be called every time
 121:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 122:Core/Src/main.c ****     sin_adc = HAL_ADC_GetValue(&hadc1);
 123:Core/Src/main.c ****     HAL_ADC_Start(&hadc1); // Needs to be called every time
 124:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 125:Core/Src/main.c ****     cos_adc = HAL_ADC_GetValue(&hadc1);
 126:Core/Src/main.c ****     theta_rad = fast_atan(cos_adc, sin_adc);
 127:Core/Src/main.c ****     theta_deg = 180.0 / M_PI * theta_rad;
 128:Core/Src/main.c ****     if (cos_adc > 180) {
 129:Core/Src/main.c ****       HAL_GPIO_WritePin(DEBUG_LED_GPIO_Port, DEBUG_LED_Pin, GPIO_PIN_SET);
 130:Core/Src/main.c ****     } else {
 131:Core/Src/main.c ****       HAL_GPIO_WritePin(DEBUG_LED_GPIO_Port, DEBUG_LED_Pin, GPIO_PIN_RESET);
 132:Core/Src/main.c ****     }
 133:Core/Src/main.c ****     /* USER CODE END WHILE */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 136:Core/Src/main.c ****   }
 137:Core/Src/main.c ****   /* USER CODE END 3 */
 138:Core/Src/main.c **** }
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** /**
 141:Core/Src/main.c ****  * @brief System Clock Configuration
 142:Core/Src/main.c ****  * @retval None
 143:Core/Src/main.c ****  */
 144:Core/Src/main.c **** void SystemClock_Config(void) {
 145:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 146:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 147:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
ARM GAS  /tmp/ccidj5xY.s 			page 4


 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 150:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 151:Core/Src/main.c ****    */
 152:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 156:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 157:Core/Src/main.c ****     Error_Handler();
 158:Core/Src/main.c ****   }
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 161:Core/Src/main.c ****    */
 162:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 163:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK) {
 170:Core/Src/main.c ****     Error_Handler();
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 173:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 174:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 175:Core/Src/main.c ****     Error_Handler();
 176:Core/Src/main.c ****   }
 177:Core/Src/main.c **** }
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /**
 180:Core/Src/main.c ****  * @brief ADC1 Initialization Function
 181:Core/Src/main.c ****  * @param None
 182:Core/Src/main.c ****  * @retval None
 183:Core/Src/main.c ****  */
 184:Core/Src/main.c **** static void MX_ADC1_Init(void) {
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /** Common config
 197:Core/Src/main.c ****    */
 198:Core/Src/main.c ****   hadc1.Instance = ADC1;
 199:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 200:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 201:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 202:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 203:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 204:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
ARM GAS  /tmp/ccidj5xY.s 			page 5


 205:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK) {
 206:Core/Src/main.c ****     Error_Handler();
 207:Core/Src/main.c ****   }
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /** Configure Regular Channel
 210:Core/Src/main.c ****    */
 211:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;
 212:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 213:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 214:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 215:Core/Src/main.c ****     Error_Handler();
 216:Core/Src/main.c ****   }
 217:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 220:Core/Src/main.c **** }
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** /**
 223:Core/Src/main.c ****  * @brief ADC2 Initialization Function
 224:Core/Src/main.c ****  * @param None
 225:Core/Src/main.c ****  * @retval None
 226:Core/Src/main.c ****  */
 227:Core/Src/main.c **** static void MX_ADC2_Init(void) {
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 0 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE END ADC2_Init 0 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 1 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE END ADC2_Init 1 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /** Common config
 240:Core/Src/main.c ****    */
 241:Core/Src/main.c ****   hadc2.Instance = ADC2;
 242:Core/Src/main.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 243:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 244:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 245:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 246:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 247:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 248:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK) {
 249:Core/Src/main.c ****     Error_Handler();
 250:Core/Src/main.c ****   }
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /** Configure Regular Channel
 253:Core/Src/main.c ****    */
 254:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_6;
 255:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 256:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 257:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK) {
 258:Core/Src/main.c ****     Error_Handler();
 259:Core/Src/main.c ****   }
 260:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 2 */
 261:Core/Src/main.c **** 
ARM GAS  /tmp/ccidj5xY.s 			page 6


 262:Core/Src/main.c ****   /* USER CODE END ADC2_Init 2 */
 263:Core/Src/main.c **** }
 264:Core/Src/main.c **** 
 265:Core/Src/main.c **** /**
 266:Core/Src/main.c ****  * @brief USART1 Initialization Function
 267:Core/Src/main.c ****  * @param None
 268:Core/Src/main.c ****  * @retval None
 269:Core/Src/main.c ****  */
 270:Core/Src/main.c **** static void MX_USART1_UART_Init(void) {
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 279:Core/Src/main.c ****   huart1.Instance = USART1;
 280:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 281:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 282:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 283:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 284:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 285:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 286:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 287:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK) {
 288:Core/Src/main.c ****     Error_Handler();
 289:Core/Src/main.c ****   }
 290:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 293:Core/Src/main.c **** }
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** /**
 296:Core/Src/main.c ****  * @brief GPIO Initialization Function
 297:Core/Src/main.c ****  * @param None
 298:Core/Src/main.c ****  * @retval None
 299:Core/Src/main.c ****  */
 300:Core/Src/main.c **** static void MX_GPIO_Init(void) {
  26              		.loc 1 300 32 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 86B0     		sub	sp, sp, #24
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
 301:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 301 3 view .LVU1
  41              		.loc 1 301 20 is_stmt 0 view .LVU2
  42 0004 02AD     		add	r5, sp, #8
ARM GAS  /tmp/ccidj5xY.s 			page 7


  43 0006 0024     		movs	r4, #0
  44 0008 0294     		str	r4, [sp, #8]
  45 000a 0394     		str	r4, [sp, #12]
  46 000c 0494     		str	r4, [sp, #16]
  47 000e 0594     		str	r4, [sp, #20]
 302:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 303:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 306:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  48              		.loc 1 306 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 306 3 view .LVU4
  51              		.loc 1 306 3 view .LVU5
  52 0010 0F4B     		ldr	r3, .L3
  53 0012 9A69     		ldr	r2, [r3, #24]
  54 0014 42F00402 		orr	r2, r2, #4
  55 0018 9A61     		str	r2, [r3, #24]
  56              		.loc 1 306 3 view .LVU6
  57 001a 9B69     		ldr	r3, [r3, #24]
  58 001c 03F00403 		and	r3, r3, #4
  59 0020 0193     		str	r3, [sp, #4]
  60              		.loc 1 306 3 view .LVU7
  61 0022 019B     		ldr	r3, [sp, #4]
  62              	.LBE4:
  63              		.loc 1 306 3 view .LVU8
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 309:Core/Src/main.c ****   HAL_GPIO_WritePin(DEBUG_LED_GPIO_Port, DEBUG_LED_Pin, GPIO_PIN_RESET);
  64              		.loc 1 309 3 view .LVU9
  65 0024 0B4E     		ldr	r6, .L3+4
  66 0026 2246     		mov	r2, r4
  67 0028 4FF40051 		mov	r1, #8192
  68 002c 3046     		mov	r0, r6
  69 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
  70              	.LVL0:
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /*Configure GPIO pin : DEBUG_LED_Pin */
 312:Core/Src/main.c ****   GPIO_InitStruct.Pin = DEBUG_LED_Pin;
  71              		.loc 1 312 3 view .LVU10
  72              		.loc 1 312 23 is_stmt 0 view .LVU11
  73 0032 4FF40053 		mov	r3, #8192
  74 0036 0293     		str	r3, [sp, #8]
 313:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  75              		.loc 1 313 3 is_stmt 1 view .LVU12
  76              		.loc 1 313 24 is_stmt 0 view .LVU13
  77 0038 0123     		movs	r3, #1
  78 003a 0393     		str	r3, [sp, #12]
 314:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  79              		.loc 1 314 3 is_stmt 1 view .LVU14
  80              		.loc 1 314 24 is_stmt 0 view .LVU15
  81 003c 0494     		str	r4, [sp, #16]
 315:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  82              		.loc 1 315 3 is_stmt 1 view .LVU16
  83              		.loc 1 315 25 is_stmt 0 view .LVU17
  84 003e 0223     		movs	r3, #2
  85 0040 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/ccidj5xY.s 			page 8


 316:Core/Src/main.c ****   HAL_GPIO_Init(DEBUG_LED_GPIO_Port, &GPIO_InitStruct);
  86              		.loc 1 316 3 is_stmt 1 view .LVU18
  87 0042 2946     		mov	r1, r5
  88 0044 3046     		mov	r0, r6
  89 0046 FFF7FEFF 		bl	HAL_GPIO_Init
  90              	.LVL1:
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 319:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 320:Core/Src/main.c **** }
  91              		.loc 1 320 1 is_stmt 0 view .LVU19
  92 004a 06B0     		add	sp, sp, #24
  93              	.LCFI2:
  94              		.cfi_def_cfa_offset 16
  95              		@ sp needed
  96 004c 70BD     		pop	{r4, r5, r6, pc}
  97              	.L4:
  98 004e 00BF     		.align	2
  99              	.L3:
 100 0050 00100240 		.word	1073876992
 101 0054 00080140 		.word	1073809408
 102              		.cfi_endproc
 103              	.LFE73:
 105              		.section	.text.__io_putchar,"ax",%progbits
 106              		.align	1
 107              		.global	__io_putchar
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 112              	__io_putchar:
 113              	.LVL2:
 114              	.LFB75:
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c **** static float fast_atan(uint16_t ADC_C, uint16_t ADC_S) {
 325:Core/Src/main.c ****   const float midpoint = (ADC_MAX + ADC_MIN) / 2.0f;
 326:Core/Src/main.c ****   float num = ADC_C - midpoint;
 327:Core/Src/main.c ****   float den = ADC_S - midpoint;
 328:Core/Src/main.c ****   if (den == 0)
 329:Core/Src/main.c ****     return (num >= 0) ? 0 : M_PI;
 330:Core/Src/main.c ****   float r = fabs(num / den);
 331:Core/Src/main.c ****   int index = (int)(r * 1023.0f);
 332:Core/Src/main.c ****   float theta = ATAN_LUT[index];
 333:Core/Src/main.c ****   float next_theta = ATAN_LUT[index + 1];
 334:Core/Src/main.c ****   theta += (r - (index / 1023.0f)) * (next_theta - theta);
 335:Core/Src/main.c ****   if (num > den)
 336:Core/Src/main.c ****     theta = M_PI_2 - theta;
 337:Core/Src/main.c ****   if (num < 0 && den > 0)
 338:Core/Src/main.c ****     return M_PI + theta;
 339:Core/Src/main.c ****   if (den < 0)
 340:Core/Src/main.c ****     return M_PI - theta;
 341:Core/Src/main.c ****   return theta;
 342:Core/Src/main.c **** }
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** /**
 345:Core/Src/main.c ****  * @brief  Retargets the C library printf function to the USART.
ARM GAS  /tmp/ccidj5xY.s 			page 9


 346:Core/Src/main.c ****  * @retval None
 347:Core/Src/main.c ****  */
 348:Core/Src/main.c **** PUTCHAR_PROTOTYPE {
 115              		.loc 1 348 19 is_stmt 1 view -0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 8
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		.loc 1 348 19 is_stmt 0 view .LVU21
 120 0000 00B5     		push	{lr}
 121              	.LCFI3:
 122              		.cfi_def_cfa_offset 4
 123              		.cfi_offset 14, -4
 124 0002 83B0     		sub	sp, sp, #12
 125              	.LCFI4:
 126              		.cfi_def_cfa_offset 16
 127 0004 0190     		str	r0, [sp, #4]
 349:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xFFFF);
 128              		.loc 1 349 3 is_stmt 1 view .LVU22
 129 0006 4FF6FF73 		movw	r3, #65535
 130 000a 0122     		movs	r2, #1
 131 000c 01A9     		add	r1, sp, #4
 132 000e 0348     		ldr	r0, .L7
 133              	.LVL3:
 134              		.loc 1 349 3 is_stmt 0 view .LVU23
 135 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 136              	.LVL4:
 350:Core/Src/main.c ****   return ch;
 137              		.loc 1 350 3 is_stmt 1 view .LVU24
 351:Core/Src/main.c **** }
 138              		.loc 1 351 1 is_stmt 0 view .LVU25
 139 0014 0198     		ldr	r0, [sp, #4]
 140 0016 03B0     		add	sp, sp, #12
 141              	.LCFI5:
 142              		.cfi_def_cfa_offset 4
 143              		@ sp needed
 144 0018 5DF804FB 		ldr	pc, [sp], #4
 145              	.L8:
 146              		.align	2
 147              	.L7:
 148 001c 00000000 		.word	huart1
 149              		.cfi_endproc
 150              	.LFE75:
 152              		.section	.text.Error_Handler,"ax",%progbits
 153              		.align	1
 154              		.global	Error_Handler
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 159              	Error_Handler:
 160              	.LFB76:
 352:Core/Src/main.c **** /* USER CODE END 4 */
 353:Core/Src/main.c **** 
 354:Core/Src/main.c **** /**
 355:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 356:Core/Src/main.c ****  * @retval None
 357:Core/Src/main.c ****  */
 358:Core/Src/main.c **** void Error_Handler(void) {
ARM GAS  /tmp/ccidj5xY.s 			page 10


 161              		.loc 1 358 26 is_stmt 1 view -0
 162              		.cfi_startproc
 163              		@ Volatile: function does not return.
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 359:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 360:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 361:Core/Src/main.c ****   __disable_irq();
 167              		.loc 1 361 3 view .LVU27
 168              	.LBB5:
 169              	.LBI5:
 170              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
ARM GAS  /tmp/ccidj5xY.s 			page 11


  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccidj5xY.s 			page 12


 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 171              		.loc 2 140 27 view .LVU28
 172              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 173              		.loc 2 142 3 view .LVU29
 174              		.syntax unified
 175              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 176 0000 72B6     		cpsid i
 177              	@ 0 "" 2
 178              		.thumb
 179              		.syntax unified
 180              	.L10:
 181              	.LBE6:
 182              	.LBE5:
 362:Core/Src/main.c ****   while (1) {
 183              		.loc 1 362 3 view .LVU30
 363:Core/Src/main.c ****   }
 184              		.loc 1 363 3 view .LVU31
ARM GAS  /tmp/ccidj5xY.s 			page 13


 362:Core/Src/main.c ****   while (1) {
 185              		.loc 1 362 9 view .LVU32
 186 0002 FEE7     		b	.L10
 187              		.cfi_endproc
 188              	.LFE76:
 190              		.section	.text.MX_ADC1_Init,"ax",%progbits
 191              		.align	1
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	MX_ADC1_Init:
 197              	.LFB70:
 184:Core/Src/main.c **** 
 198              		.loc 1 184 32 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 16
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202 0000 00B5     		push	{lr}
 203              	.LCFI6:
 204              		.cfi_def_cfa_offset 4
 205              		.cfi_offset 14, -4
 206 0002 85B0     		sub	sp, sp, #20
 207              	.LCFI7:
 208              		.cfi_def_cfa_offset 24
 190:Core/Src/main.c **** 
 209              		.loc 1 190 3 view .LVU34
 190:Core/Src/main.c **** 
 210              		.loc 1 190 26 is_stmt 0 view .LVU35
 211 0004 0023     		movs	r3, #0
 212 0006 0193     		str	r3, [sp, #4]
 213 0008 0293     		str	r3, [sp, #8]
 214 000a 0393     		str	r3, [sp, #12]
 198:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 215              		.loc 1 198 3 is_stmt 1 view .LVU36
 198:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 216              		.loc 1 198 18 is_stmt 0 view .LVU37
 217 000c 1048     		ldr	r0, .L17
 218 000e 114A     		ldr	r2, .L17+4
 219 0010 0260     		str	r2, [r0]
 199:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 220              		.loc 1 199 3 is_stmt 1 view .LVU38
 199:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 221              		.loc 1 199 27 is_stmt 0 view .LVU39
 222 0012 8360     		str	r3, [r0, #8]
 200:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 223              		.loc 1 200 3 is_stmt 1 view .LVU40
 200:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 224              		.loc 1 200 33 is_stmt 0 view .LVU41
 225 0014 0373     		strb	r3, [r0, #12]
 201:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 226              		.loc 1 201 3 is_stmt 1 view .LVU42
 201:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 227              		.loc 1 201 36 is_stmt 0 view .LVU43
 228 0016 0375     		strb	r3, [r0, #20]
 202:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 229              		.loc 1 202 3 is_stmt 1 view .LVU44
 202:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
ARM GAS  /tmp/ccidj5xY.s 			page 14


 230              		.loc 1 202 31 is_stmt 0 view .LVU45
 231 0018 4FF46022 		mov	r2, #917504
 232 001c C261     		str	r2, [r0, #28]
 203:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 233              		.loc 1 203 3 is_stmt 1 view .LVU46
 203:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 234              		.loc 1 203 24 is_stmt 0 view .LVU47
 235 001e 4360     		str	r3, [r0, #4]
 204:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK) {
 236              		.loc 1 204 3 is_stmt 1 view .LVU48
 204:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK) {
 237              		.loc 1 204 30 is_stmt 0 view .LVU49
 238 0020 0123     		movs	r3, #1
 239 0022 0361     		str	r3, [r0, #16]
 205:Core/Src/main.c ****     Error_Handler();
 240              		.loc 1 205 3 is_stmt 1 view .LVU50
 205:Core/Src/main.c ****     Error_Handler();
 241              		.loc 1 205 7 is_stmt 0 view .LVU51
 242 0024 FFF7FEFF 		bl	HAL_ADC_Init
 243              	.LVL5:
 205:Core/Src/main.c ****     Error_Handler();
 244              		.loc 1 205 6 discriminator 1 view .LVU52
 245 0028 68B9     		cbnz	r0, .L15
 211:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 246              		.loc 1 211 3 is_stmt 1 view .LVU53
 211:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 247              		.loc 1 211 19 is_stmt 0 view .LVU54
 248 002a 0523     		movs	r3, #5
 249 002c 0193     		str	r3, [sp, #4]
 212:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 250              		.loc 1 212 3 is_stmt 1 view .LVU55
 212:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 251              		.loc 1 212 16 is_stmt 0 view .LVU56
 252 002e 0123     		movs	r3, #1
 253 0030 0293     		str	r3, [sp, #8]
 213:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 254              		.loc 1 213 3 is_stmt 1 view .LVU57
 213:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 255              		.loc 1 213 24 is_stmt 0 view .LVU58
 256 0032 0023     		movs	r3, #0
 257 0034 0393     		str	r3, [sp, #12]
 214:Core/Src/main.c ****     Error_Handler();
 258              		.loc 1 214 3 is_stmt 1 view .LVU59
 214:Core/Src/main.c ****     Error_Handler();
 259              		.loc 1 214 7 is_stmt 0 view .LVU60
 260 0036 01A9     		add	r1, sp, #4
 261 0038 0548     		ldr	r0, .L17
 262 003a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 263              	.LVL6:
 214:Core/Src/main.c ****     Error_Handler();
 264              		.loc 1 214 6 discriminator 1 view .LVU61
 265 003e 20B9     		cbnz	r0, .L16
 220:Core/Src/main.c **** 
 266              		.loc 1 220 1 view .LVU62
 267 0040 05B0     		add	sp, sp, #20
 268              	.LCFI8:
 269              		.cfi_remember_state
ARM GAS  /tmp/ccidj5xY.s 			page 15


 270              		.cfi_def_cfa_offset 4
 271              		@ sp needed
 272 0042 5DF804FB 		ldr	pc, [sp], #4
 273              	.L15:
 274              	.LCFI9:
 275              		.cfi_restore_state
 206:Core/Src/main.c ****   }
 276              		.loc 1 206 5 is_stmt 1 view .LVU63
 277 0046 FFF7FEFF 		bl	Error_Handler
 278              	.LVL7:
 279              	.L16:
 215:Core/Src/main.c ****   }
 280              		.loc 1 215 5 view .LVU64
 281 004a FFF7FEFF 		bl	Error_Handler
 282              	.LVL8:
 283              	.L18:
 284 004e 00BF     		.align	2
 285              	.L17:
 286 0050 00000000 		.word	hadc1
 287 0054 00240140 		.word	1073816576
 288              		.cfi_endproc
 289              	.LFE70:
 291              		.section	.text.MX_ADC2_Init,"ax",%progbits
 292              		.align	1
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 297              	MX_ADC2_Init:
 298              	.LFB71:
 227:Core/Src/main.c **** 
 299              		.loc 1 227 32 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 16
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303 0000 00B5     		push	{lr}
 304              	.LCFI10:
 305              		.cfi_def_cfa_offset 4
 306              		.cfi_offset 14, -4
 307 0002 85B0     		sub	sp, sp, #20
 308              	.LCFI11:
 309              		.cfi_def_cfa_offset 24
 233:Core/Src/main.c **** 
 310              		.loc 1 233 3 view .LVU66
 233:Core/Src/main.c **** 
 311              		.loc 1 233 26 is_stmt 0 view .LVU67
 312 0004 0023     		movs	r3, #0
 313 0006 0193     		str	r3, [sp, #4]
 314 0008 0293     		str	r3, [sp, #8]
 315 000a 0393     		str	r3, [sp, #12]
 241:Core/Src/main.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 316              		.loc 1 241 3 is_stmt 1 view .LVU68
 241:Core/Src/main.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 317              		.loc 1 241 18 is_stmt 0 view .LVU69
 318 000c 1048     		ldr	r0, .L25
 319 000e 114A     		ldr	r2, .L25+4
 320 0010 0260     		str	r2, [r0]
 242:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
ARM GAS  /tmp/ccidj5xY.s 			page 16


 321              		.loc 1 242 3 is_stmt 1 view .LVU70
 242:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 322              		.loc 1 242 27 is_stmt 0 view .LVU71
 323 0012 8360     		str	r3, [r0, #8]
 243:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 324              		.loc 1 243 3 is_stmt 1 view .LVU72
 243:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 325              		.loc 1 243 33 is_stmt 0 view .LVU73
 326 0014 0373     		strb	r3, [r0, #12]
 244:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 327              		.loc 1 244 3 is_stmt 1 view .LVU74
 244:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 328              		.loc 1 244 36 is_stmt 0 view .LVU75
 329 0016 0375     		strb	r3, [r0, #20]
 245:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 330              		.loc 1 245 3 is_stmt 1 view .LVU76
 245:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 331              		.loc 1 245 31 is_stmt 0 view .LVU77
 332 0018 4FF46022 		mov	r2, #917504
 333 001c C261     		str	r2, [r0, #28]
 246:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 334              		.loc 1 246 3 is_stmt 1 view .LVU78
 246:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 335              		.loc 1 246 24 is_stmt 0 view .LVU79
 336 001e 4360     		str	r3, [r0, #4]
 247:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK) {
 337              		.loc 1 247 3 is_stmt 1 view .LVU80
 247:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK) {
 338              		.loc 1 247 30 is_stmt 0 view .LVU81
 339 0020 0123     		movs	r3, #1
 340 0022 0361     		str	r3, [r0, #16]
 248:Core/Src/main.c ****     Error_Handler();
 341              		.loc 1 248 3 is_stmt 1 view .LVU82
 248:Core/Src/main.c ****     Error_Handler();
 342              		.loc 1 248 7 is_stmt 0 view .LVU83
 343 0024 FFF7FEFF 		bl	HAL_ADC_Init
 344              	.LVL9:
 248:Core/Src/main.c ****     Error_Handler();
 345              		.loc 1 248 6 discriminator 1 view .LVU84
 346 0028 68B9     		cbnz	r0, .L23
 254:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 347              		.loc 1 254 3 is_stmt 1 view .LVU85
 254:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 348              		.loc 1 254 19 is_stmt 0 view .LVU86
 349 002a 0623     		movs	r3, #6
 350 002c 0193     		str	r3, [sp, #4]
 255:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 351              		.loc 1 255 3 is_stmt 1 view .LVU87
 255:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 352              		.loc 1 255 16 is_stmt 0 view .LVU88
 353 002e 0123     		movs	r3, #1
 354 0030 0293     		str	r3, [sp, #8]
 256:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK) {
 355              		.loc 1 256 3 is_stmt 1 view .LVU89
 256:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK) {
 356              		.loc 1 256 24 is_stmt 0 view .LVU90
 357 0032 0023     		movs	r3, #0
ARM GAS  /tmp/ccidj5xY.s 			page 17


 358 0034 0393     		str	r3, [sp, #12]
 257:Core/Src/main.c ****     Error_Handler();
 359              		.loc 1 257 3 is_stmt 1 view .LVU91
 257:Core/Src/main.c ****     Error_Handler();
 360              		.loc 1 257 7 is_stmt 0 view .LVU92
 361 0036 01A9     		add	r1, sp, #4
 362 0038 0548     		ldr	r0, .L25
 363 003a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 364              	.LVL10:
 257:Core/Src/main.c ****     Error_Handler();
 365              		.loc 1 257 6 discriminator 1 view .LVU93
 366 003e 20B9     		cbnz	r0, .L24
 263:Core/Src/main.c **** 
 367              		.loc 1 263 1 view .LVU94
 368 0040 05B0     		add	sp, sp, #20
 369              	.LCFI12:
 370              		.cfi_remember_state
 371              		.cfi_def_cfa_offset 4
 372              		@ sp needed
 373 0042 5DF804FB 		ldr	pc, [sp], #4
 374              	.L23:
 375              	.LCFI13:
 376              		.cfi_restore_state
 249:Core/Src/main.c ****   }
 377              		.loc 1 249 5 is_stmt 1 view .LVU95
 378 0046 FFF7FEFF 		bl	Error_Handler
 379              	.LVL11:
 380              	.L24:
 258:Core/Src/main.c ****   }
 381              		.loc 1 258 5 view .LVU96
 382 004a FFF7FEFF 		bl	Error_Handler
 383              	.LVL12:
 384              	.L26:
 385 004e 00BF     		.align	2
 386              	.L25:
 387 0050 00000000 		.word	hadc2
 388 0054 00280140 		.word	1073817600
 389              		.cfi_endproc
 390              	.LFE71:
 392              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 393              		.align	1
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 398              	MX_USART1_UART_Init:
 399              	.LFB72:
 270:Core/Src/main.c **** 
 400              		.loc 1 270 39 view -0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404 0000 08B5     		push	{r3, lr}
 405              	.LCFI14:
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 3, -8
 408              		.cfi_offset 14, -4
 279:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
ARM GAS  /tmp/ccidj5xY.s 			page 18


 409              		.loc 1 279 3 view .LVU98
 279:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 410              		.loc 1 279 19 is_stmt 0 view .LVU99
 411 0002 0A48     		ldr	r0, .L31
 412 0004 0A4B     		ldr	r3, .L31+4
 413 0006 0360     		str	r3, [r0]
 280:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 414              		.loc 1 280 3 is_stmt 1 view .LVU100
 280:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 415              		.loc 1 280 24 is_stmt 0 view .LVU101
 416 0008 4FF4E133 		mov	r3, #115200
 417 000c 4360     		str	r3, [r0, #4]
 281:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 418              		.loc 1 281 3 is_stmt 1 view .LVU102
 281:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 419              		.loc 1 281 26 is_stmt 0 view .LVU103
 420 000e 0023     		movs	r3, #0
 421 0010 8360     		str	r3, [r0, #8]
 282:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 422              		.loc 1 282 3 is_stmt 1 view .LVU104
 282:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 423              		.loc 1 282 24 is_stmt 0 view .LVU105
 424 0012 C360     		str	r3, [r0, #12]
 283:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 425              		.loc 1 283 3 is_stmt 1 view .LVU106
 283:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 426              		.loc 1 283 22 is_stmt 0 view .LVU107
 427 0014 0361     		str	r3, [r0, #16]
 284:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 428              		.loc 1 284 3 is_stmt 1 view .LVU108
 284:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 429              		.loc 1 284 20 is_stmt 0 view .LVU109
 430 0016 0C22     		movs	r2, #12
 431 0018 4261     		str	r2, [r0, #20]
 285:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 432              		.loc 1 285 3 is_stmt 1 view .LVU110
 285:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 433              		.loc 1 285 25 is_stmt 0 view .LVU111
 434 001a 8361     		str	r3, [r0, #24]
 286:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK) {
 435              		.loc 1 286 3 is_stmt 1 view .LVU112
 286:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK) {
 436              		.loc 1 286 28 is_stmt 0 view .LVU113
 437 001c C361     		str	r3, [r0, #28]
 287:Core/Src/main.c ****     Error_Handler();
 438              		.loc 1 287 3 is_stmt 1 view .LVU114
 287:Core/Src/main.c ****     Error_Handler();
 439              		.loc 1 287 7 is_stmt 0 view .LVU115
 440 001e FFF7FEFF 		bl	HAL_UART_Init
 441              	.LVL13:
 287:Core/Src/main.c ****     Error_Handler();
 442              		.loc 1 287 6 discriminator 1 view .LVU116
 443 0022 00B9     		cbnz	r0, .L30
 293:Core/Src/main.c **** 
 444              		.loc 1 293 1 view .LVU117
 445 0024 08BD     		pop	{r3, pc}
 446              	.L30:
ARM GAS  /tmp/ccidj5xY.s 			page 19


 288:Core/Src/main.c ****   }
 447              		.loc 1 288 5 is_stmt 1 view .LVU118
 448 0026 FFF7FEFF 		bl	Error_Handler
 449              	.LVL14:
 450              	.L32:
 451 002a 00BF     		.align	2
 452              	.L31:
 453 002c 00000000 		.word	huart1
 454 0030 00380140 		.word	1073821696
 455              		.cfi_endproc
 456              	.LFE72:
 458              		.section	.text.SystemClock_Config,"ax",%progbits
 459              		.align	1
 460              		.global	SystemClock_Config
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 465              	SystemClock_Config:
 466              	.LFB69:
 144:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 467              		.loc 1 144 31 view -0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 80
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471 0000 10B5     		push	{r4, lr}
 472              	.LCFI15:
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 4, -8
 475              		.cfi_offset 14, -4
 476 0002 94B0     		sub	sp, sp, #80
 477              	.LCFI16:
 478              		.cfi_def_cfa_offset 88
 145:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 479              		.loc 1 145 3 view .LVU120
 145:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 480              		.loc 1 145 22 is_stmt 0 view .LVU121
 481 0004 0AAC     		add	r4, sp, #40
 482 0006 2822     		movs	r2, #40
 483 0008 0021     		movs	r1, #0
 484 000a 2046     		mov	r0, r4
 485 000c FFF7FEFF 		bl	memset
 486              	.LVL15:
 146:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 487              		.loc 1 146 3 is_stmt 1 view .LVU122
 146:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 488              		.loc 1 146 22 is_stmt 0 view .LVU123
 489 0010 0023     		movs	r3, #0
 490 0012 0593     		str	r3, [sp, #20]
 491 0014 0693     		str	r3, [sp, #24]
 492 0016 0793     		str	r3, [sp, #28]
 493 0018 0893     		str	r3, [sp, #32]
 494 001a 0993     		str	r3, [sp, #36]
 147:Core/Src/main.c **** 
 495              		.loc 1 147 3 is_stmt 1 view .LVU124
 147:Core/Src/main.c **** 
 496              		.loc 1 147 28 is_stmt 0 view .LVU125
 497 001c 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccidj5xY.s 			page 20


 498 001e 0293     		str	r3, [sp, #8]
 499 0020 0393     		str	r3, [sp, #12]
 500 0022 0493     		str	r3, [sp, #16]
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 501              		.loc 1 152 3 is_stmt 1 view .LVU126
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 502              		.loc 1 152 36 is_stmt 0 view .LVU127
 503 0024 0223     		movs	r3, #2
 504 0026 0A93     		str	r3, [sp, #40]
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 505              		.loc 1 153 3 is_stmt 1 view .LVU128
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 506              		.loc 1 153 30 is_stmt 0 view .LVU129
 507 0028 0123     		movs	r3, #1
 508 002a 0E93     		str	r3, [sp, #56]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 509              		.loc 1 154 3 is_stmt 1 view .LVU130
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 510              		.loc 1 154 41 is_stmt 0 view .LVU131
 511 002c 1023     		movs	r3, #16
 512 002e 0F93     		str	r3, [sp, #60]
 155:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 513              		.loc 1 155 3 is_stmt 1 view .LVU132
 156:Core/Src/main.c ****     Error_Handler();
 514              		.loc 1 156 3 view .LVU133
 156:Core/Src/main.c ****     Error_Handler();
 515              		.loc 1 156 7 is_stmt 0 view .LVU134
 516 0030 2046     		mov	r0, r4
 517 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 518              	.LVL16:
 156:Core/Src/main.c ****     Error_Handler();
 519              		.loc 1 156 6 discriminator 1 view .LVU135
 520 0036 A0B9     		cbnz	r0, .L38
 162:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 521              		.loc 1 162 3 is_stmt 1 view .LVU136
 162:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 522              		.loc 1 162 31 is_stmt 0 view .LVU137
 523 0038 0F23     		movs	r3, #15
 524 003a 0593     		str	r3, [sp, #20]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 525              		.loc 1 164 3 is_stmt 1 view .LVU138
 164:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 526              		.loc 1 164 34 is_stmt 0 view .LVU139
 527 003c 0021     		movs	r1, #0
 528 003e 0691     		str	r1, [sp, #24]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 529              		.loc 1 165 3 is_stmt 1 view .LVU140
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 530              		.loc 1 165 35 is_stmt 0 view .LVU141
 531 0040 0791     		str	r1, [sp, #28]
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 532              		.loc 1 166 3 is_stmt 1 view .LVU142
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 533              		.loc 1 166 36 is_stmt 0 view .LVU143
 534 0042 0891     		str	r1, [sp, #32]
 167:Core/Src/main.c **** 
 535              		.loc 1 167 3 is_stmt 1 view .LVU144
ARM GAS  /tmp/ccidj5xY.s 			page 21


 167:Core/Src/main.c **** 
 536              		.loc 1 167 36 is_stmt 0 view .LVU145
 537 0044 0991     		str	r1, [sp, #36]
 169:Core/Src/main.c ****     Error_Handler();
 538              		.loc 1 169 3 is_stmt 1 view .LVU146
 169:Core/Src/main.c ****     Error_Handler();
 539              		.loc 1 169 7 is_stmt 0 view .LVU147
 540 0046 05A8     		add	r0, sp, #20
 541 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 542              	.LVL17:
 169:Core/Src/main.c ****     Error_Handler();
 543              		.loc 1 169 6 discriminator 1 view .LVU148
 544 004c 58B9     		cbnz	r0, .L39
 172:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 545              		.loc 1 172 3 is_stmt 1 view .LVU149
 172:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 546              		.loc 1 172 38 is_stmt 0 view .LVU150
 547 004e 0223     		movs	r3, #2
 548 0050 0193     		str	r3, [sp, #4]
 173:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 549              		.loc 1 173 3 is_stmt 1 view .LVU151
 173:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 550              		.loc 1 173 35 is_stmt 0 view .LVU152
 551 0052 0023     		movs	r3, #0
 552 0054 0393     		str	r3, [sp, #12]
 174:Core/Src/main.c ****     Error_Handler();
 553              		.loc 1 174 3 is_stmt 1 view .LVU153
 174:Core/Src/main.c ****     Error_Handler();
 554              		.loc 1 174 7 is_stmt 0 view .LVU154
 555 0056 01A8     		add	r0, sp, #4
 556 0058 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 557              	.LVL18:
 174:Core/Src/main.c ****     Error_Handler();
 558              		.loc 1 174 6 discriminator 1 view .LVU155
 559 005c 28B9     		cbnz	r0, .L40
 177:Core/Src/main.c **** 
 560              		.loc 1 177 1 view .LVU156
 561 005e 14B0     		add	sp, sp, #80
 562              	.LCFI17:
 563              		.cfi_remember_state
 564              		.cfi_def_cfa_offset 8
 565              		@ sp needed
 566 0060 10BD     		pop	{r4, pc}
 567              	.L38:
 568              	.LCFI18:
 569              		.cfi_restore_state
 157:Core/Src/main.c ****   }
 570              		.loc 1 157 5 is_stmt 1 view .LVU157
 571 0062 FFF7FEFF 		bl	Error_Handler
 572              	.LVL19:
 573              	.L39:
 170:Core/Src/main.c ****   }
 574              		.loc 1 170 5 view .LVU158
 575 0066 FFF7FEFF 		bl	Error_Handler
 576              	.LVL20:
 577              	.L40:
 175:Core/Src/main.c ****   }
ARM GAS  /tmp/ccidj5xY.s 			page 22


 578              		.loc 1 175 5 view .LVU159
 579 006a FFF7FEFF 		bl	Error_Handler
 580              	.LVL21:
 581              		.cfi_endproc
 582              	.LFE69:
 584              		.section	.text.main,"ax",%progbits
 585              		.align	1
 586              		.global	main
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 591              	main:
 592              	.LFB68:
  81:Core/Src/main.c **** 
 593              		.loc 1 81 16 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597 0000 10B5     		push	{r4, lr}
 598              	.LCFI19:
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 4, -8
 601              		.cfi_offset 14, -4
  85:Core/Src/main.c ****   uint16_t cos_adc;
 602              		.loc 1 85 3 view .LVU161
  86:Core/Src/main.c ****   float theta_rad;
 603              		.loc 1 86 3 view .LVU162
  87:Core/Src/main.c ****   uint16_t theta_deg; // only for debugging
 604              		.loc 1 87 3 view .LVU163
  88:Core/Src/main.c ****   /* USER CODE END 1 */
 605              		.loc 1 88 3 view .LVU164
  95:Core/Src/main.c **** 
 606              		.loc 1 95 3 view .LVU165
 607 0002 FFF7FEFF 		bl	HAL_Init
 608              	.LVL22:
 102:Core/Src/main.c **** 
 609              		.loc 1 102 3 view .LVU166
 610 0006 FFF7FEFF 		bl	SystemClock_Config
 611              	.LVL23:
 109:Core/Src/main.c ****   MX_ADC1_Init();
 612              		.loc 1 109 3 view .LVU167
 613 000a FFF7FEFF 		bl	MX_GPIO_Init
 614              	.LVL24:
 110:Core/Src/main.c ****   MX_ADC2_Init();
 615              		.loc 1 110 3 view .LVU168
 616 000e FFF7FEFF 		bl	MX_ADC1_Init
 617              	.LVL25:
 111:Core/Src/main.c ****   MX_USART1_UART_Init();
 618              		.loc 1 111 3 view .LVU169
 619 0012 FFF7FEFF 		bl	MX_ADC2_Init
 620              	.LVL26:
 112:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 621              		.loc 1 112 3 view .LVU170
 622 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 623              	.LVL27:
 624 001a 05E0     		b	.L42
 625              	.LVL28:
ARM GAS  /tmp/ccidj5xY.s 			page 23


 626              	.L46:
 129:Core/Src/main.c ****     } else {
 627              		.loc 1 129 7 view .LVU171
 628 001c 0122     		movs	r2, #1
 629 001e 4FF40051 		mov	r1, #8192
 630 0022 1248     		ldr	r0, .L47
 631              	.LVL29:
 129:Core/Src/main.c ****     } else {
 632              		.loc 1 129 7 is_stmt 0 view .LVU172
 633 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 634              	.LVL30:
 635              	.L42:
 119:Core/Src/main.c ****     HAL_ADC_Start(&hadc1); // Needs to be called every time
 636              		.loc 1 119 3 is_stmt 1 view .LVU173
 120:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 637              		.loc 1 120 5 view .LVU174
 638 0028 114C     		ldr	r4, .L47+4
 639 002a 2046     		mov	r0, r4
 640 002c FFF7FEFF 		bl	HAL_ADC_Start
 641              	.LVL31:
 121:Core/Src/main.c ****     sin_adc = HAL_ADC_GetValue(&hadc1);
 642              		.loc 1 121 5 view .LVU175
 643 0030 4FF0FF31 		mov	r1, #-1
 644 0034 2046     		mov	r0, r4
 645 0036 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 646              	.LVL32:
 122:Core/Src/main.c ****     HAL_ADC_Start(&hadc1); // Needs to be called every time
 647              		.loc 1 122 5 view .LVU176
 122:Core/Src/main.c ****     HAL_ADC_Start(&hadc1); // Needs to be called every time
 648              		.loc 1 122 15 is_stmt 0 view .LVU177
 649 003a 2046     		mov	r0, r4
 650 003c FFF7FEFF 		bl	HAL_ADC_GetValue
 651              	.LVL33:
 123:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 652              		.loc 1 123 5 is_stmt 1 view .LVU178
 653 0040 2046     		mov	r0, r4
 654 0042 FFF7FEFF 		bl	HAL_ADC_Start
 655              	.LVL34:
 124:Core/Src/main.c ****     cos_adc = HAL_ADC_GetValue(&hadc1);
 656              		.loc 1 124 5 view .LVU179
 657 0046 4FF0FF31 		mov	r1, #-1
 658 004a 2046     		mov	r0, r4
 659 004c FFF7FEFF 		bl	HAL_ADC_PollForConversion
 660              	.LVL35:
 125:Core/Src/main.c ****     theta_rad = fast_atan(cos_adc, sin_adc);
 661              		.loc 1 125 5 view .LVU180
 125:Core/Src/main.c ****     theta_rad = fast_atan(cos_adc, sin_adc);
 662              		.loc 1 125 15 is_stmt 0 view .LVU181
 663 0050 2046     		mov	r0, r4
 664 0052 FFF7FEFF 		bl	HAL_ADC_GetValue
 665              	.LVL36:
 125:Core/Src/main.c ****     theta_rad = fast_atan(cos_adc, sin_adc);
 666              		.loc 1 125 13 discriminator 1 view .LVU182
 667 0056 80B2     		uxth	r0, r0
 668              	.LVL37:
 126:Core/Src/main.c ****     theta_deg = 180.0 / M_PI * theta_rad;
 669              		.loc 1 126 5 is_stmt 1 view .LVU183
ARM GAS  /tmp/ccidj5xY.s 			page 24


 127:Core/Src/main.c ****     if (cos_adc > 180) {
 670              		.loc 1 127 5 view .LVU184
 128:Core/Src/main.c ****       HAL_GPIO_WritePin(DEBUG_LED_GPIO_Port, DEBUG_LED_Pin, GPIO_PIN_SET);
 671              		.loc 1 128 5 view .LVU185
 128:Core/Src/main.c ****       HAL_GPIO_WritePin(DEBUG_LED_GPIO_Port, DEBUG_LED_Pin, GPIO_PIN_SET);
 672              		.loc 1 128 8 is_stmt 0 view .LVU186
 673 0058 B428     		cmp	r0, #180
 674 005a DFD8     		bhi	.L46
 131:Core/Src/main.c ****     }
 675              		.loc 1 131 7 is_stmt 1 view .LVU187
 676 005c 0022     		movs	r2, #0
 677 005e 4FF40051 		mov	r1, #8192
 678 0062 0248     		ldr	r0, .L47
 679              	.LVL38:
 131:Core/Src/main.c ****     }
 680              		.loc 1 131 7 is_stmt 0 view .LVU188
 681 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 682              	.LVL39:
 683 0068 DEE7     		b	.L42
 684              	.L48:
 685 006a 00BF     		.align	2
 686              	.L47:
 687 006c 00080140 		.word	1073809408
 688 0070 00000000 		.word	hadc1
 689              		.cfi_endproc
 690              	.LFE68:
 692              		.global	huart1
 693              		.section	.bss.huart1,"aw",%nobits
 694              		.align	2
 697              	huart1:
 698 0000 00000000 		.space	72
 698      00000000 
 698      00000000 
 698      00000000 
 698      00000000 
 699              		.global	hadc2
 700              		.section	.bss.hadc2,"aw",%nobits
 701              		.align	2
 704              	hadc2:
 705 0000 00000000 		.space	48
 705      00000000 
 705      00000000 
 705      00000000 
 705      00000000 
 706              		.global	hadc1
 707              		.section	.bss.hadc1,"aw",%nobits
 708              		.align	2
 711              	hadc1:
 712 0000 00000000 		.space	48
 712      00000000 
 712      00000000 
 712      00000000 
 712      00000000 
 713              		.global	ATAN_LUT
 714              		.section	.rodata.ATAN_LUT,"a"
 715              		.align	2
 718              	ATAN_LUT:
ARM GAS  /tmp/ccidj5xY.s 			page 25


 719 0000 00000000 		.word	0
 720 0004 2120803A 		.word	981475361
 721 0008 F61F003B 		.word	989863926
 722 000c DB2F403B 		.word	994062299
 723 0010 E01F803B 		.word	998252512
 724 0014 BE27A03B 		.word	1000351678
 725 0018 852FC03B 		.word	1002450821
 726 001c 2237E03B 		.word	1004549922
 727 0020 601F003C 		.word	1006640992
 728 0024 1923103C 		.word	1007690521
 729 0028 BC26203C 		.word	1008740028
 730 002c 4A2A303C 		.word	1009789514
 731 0030 CD2D403C 		.word	1010838989
 732 0034 3031503C 		.word	1011888432
 733 0038 7E34603C 		.word	1012937854
 734 003c AB37703C 		.word	1013987243
 735 0040 5C1D803C 		.word	1015029084
 736 0044 D31E883C 		.word	1015553747
 737 0048 3920903C 		.word	1016078393
 738 004c 8F21983C 		.word	1016603023
 739 0050 D022A03C 		.word	1017127632
 740 0054 0124A83C 		.word	1017652225
 741 0058 1725B03C 		.word	1018176791
 742 005c 1C26B83C 		.word	1018701340
 743 0060 0727C03C 		.word	1019225863
 744 0064 D727C83C 		.word	1019750359
 745 0068 9228D03C 		.word	1020274834
 746 006c 3729D83C 		.word	1020799287
 747 0070 BC29E03C 		.word	1021323708
 748 0074 262AE83C 		.word	1021848102
 749 0078 702AF03C 		.word	1022372464
 750 007c 9F2AF83C 		.word	1022896799
 751 0080 5715003D 		.word	1023415639
 752 0084 4E15043D 		.word	1023677774
 753 0088 3515083D 		.word	1023939893
 754 008c 0C150C3D 		.word	1024201996
 755 0090 D014103D 		.word	1024464080
 756 0094 8214143D 		.word	1024726146
 757 0098 2314183D 		.word	1024988195
 758 009c AF131C3D 		.word	1025250223
 759 00a0 2B13203D 		.word	1025512235
 760 00a4 8F12243D 		.word	1025774223
 761 00a8 DF11283D 		.word	1026036191
 762 00ac 1E112C3D 		.word	1026298142
 763 00b0 4310303D 		.word	1026560067
 764 00b4 540F343D 		.word	1026821972
 765 00b8 4F0E383D 		.word	1027083855
 766 00bc 320D3C3D 		.word	1027345714
 767 00c0 FC0B403D 		.word	1027607548
 768 00c4 B10A443D 		.word	1027869361
 769 00c8 4C09483D 		.word	1028131148
 770 00cc CE074C3D 		.word	1028392910
 771 00d0 3806503D 		.word	1028654648
 772 00d4 8704543D 		.word	1028916359
 773 00d8 BB02583D 		.word	1029178043
 774 00dc D5005C3D 		.word	1029439701
 775 00e0 D3FE5F3D 		.word	1029701331
ARM GAS  /tmp/ccidj5xY.s 			page 26


 776 00e4 B4FC633D 		.word	1029962932
 777 00e8 7BFA673D 		.word	1030224507
 778 00ec 23F86B3D 		.word	1030486051
 779 00f0 AFF56F3D 		.word	1030747567
 780 00f4 1CF3733D 		.word	1031009052
 781 00f8 6CF0773D 		.word	1031270508
 782 00fc 9CED7B3D 		.word	1031531932
 783 0100 AFEA7F3D 		.word	1031793327
 784 0104 CFF3813D 		.word	1031926735
 785 0108 38F2833D 		.word	1032057400
 786 010c 90F0853D 		.word	1032188048
 787 0110 D7EE873D 		.word	1032318679
 788 0114 0EED893D 		.word	1032449294
 789 0118 33EB8B3D 		.word	1032579891
 790 011c 47E98D3D 		.word	1032710471
 791 0120 49E78F3D 		.word	1032841033
 792 0124 3BE5913D 		.word	1032971579
 793 0128 18E3933D 		.word	1033102104
 794 012c E4E0953D 		.word	1033232612
 795 0130 9DDE973D 		.word	1033363101
 796 0134 45DC993D 		.word	1033493573
 797 0138 D7D99B3D 		.word	1033624023
 798 013c 58D79D3D 		.word	1033754456
 799 0140 C4D49F3D 		.word	1033884868
 800 0144 1DD2A13D 		.word	1034015261
 801 0148 61CFA33D 		.word	1034145633
 802 014c 92CCA53D 		.word	1034275986
 803 0150 AEC9A73D 		.word	1034406318
 804 0154 B4C6A93D 		.word	1034536628
 805 0158 A7C3AB3D 		.word	1034666919
 806 015c 84C0AD3D 		.word	1034797188
 807 0160 4ABDAF3D 		.word	1034927434
 808 0164 FCB9B13D 		.word	1035057660
 809 0168 98B6B33D 		.word	1035187864
 810 016c 1DB3B53D 		.word	1035318045
 811 0170 8CAFB73D 		.word	1035448204
 812 0174 E4ABB93D 		.word	1035578340
 813 0178 26A8BB3D 		.word	1035708454
 814 017c 4FA4BD3D 		.word	1035838543
 815 0180 61A0BF3D 		.word	1035968609
 816 0184 5D9CC13D 		.word	1036098653
 817 0188 4098C33D 		.word	1036228672
 818 018c 0C94C53D 		.word	1036358668
 819 0190 BD8FC73D 		.word	1036488637
 820 0194 578BC93D 		.word	1036618583
 821 0198 D886CB3D 		.word	1036748504
 822 019c 4082CD3D 		.word	1036878400
 823 01a0 907DCF3D 		.word	1037008272
 824 01a4 C578D13D 		.word	1037138117
 825 01a8 E073D33D 		.word	1037267936
 826 01ac E16ED53D 		.word	1037397729
 827 01b0 C969D73D 		.word	1037527497
 828 01b4 9664D93D 		.word	1037657238
 829 01b8 475FDB3D 		.word	1037786951
 830 01bc DF59DD3D 		.word	1037916639
 831 01c0 5A54DF3D 		.word	1038046298
 832 01c4 BA4EE13D 		.word	1038175930
ARM GAS  /tmp/ccidj5xY.s 			page 27


 833 01c8 0049E33D 		.word	1038305536
 834 01cc 2843E53D 		.word	1038435112
 835 01d0 353DE73D 		.word	1038564661
 836 01d4 2537E93D 		.word	1038694181
 837 01d8 F930EB3D 		.word	1038823673
 838 01dc B12AED3D 		.word	1038953137
 839 01e0 4924EF3D 		.word	1039082569
 840 01e4 C61DF13D 		.word	1039211974
 841 01e8 2517F33D 		.word	1039341349
 842 01ec 6710F53D 		.word	1039470695
 843 01f0 8B09F73D 		.word	1039600011
 844 01f4 9002F93D 		.word	1039729296
 845 01f8 77FBFA3D 		.word	1039858551
 846 01fc 3FF4FC3D 		.word	1039987775
 847 0200 E8ECFE3D 		.word	1040116968
 848 0204 BA72003E 		.word	1040216762
 849 0208 EF6E013E 		.word	1040281327
 850 020c 146B023E 		.word	1040345876
 851 0210 2A67033E 		.word	1040410410
 852 0214 3063043E 		.word	1040474928
 853 0218 265F053E 		.word	1040539430
 854 021c 0B5B063E 		.word	1040603915
 855 0220 E056073E 		.word	1040668384
 856 0224 A452083E 		.word	1040732836
 857 0228 584E093E 		.word	1040797272
 858 022c FC490A3E 		.word	1040861692
 859 0230 8E450B3E 		.word	1040926094
 860 0234 10410C3E 		.word	1040990480
 861 0238 803C0D3E 		.word	1041054848
 862 023c E0370E3E 		.word	1041119200
 863 0240 2E330F3E 		.word	1041183534
 864 0244 6A2E103E 		.word	1041247850
 865 0248 9629113E 		.word	1041312150
 866 024c B024123E 		.word	1041376432
 867 0250 B81F133E 		.word	1041440696
 868 0254 AE1A143E 		.word	1041504942
 869 0258 9215153E 		.word	1041569170
 870 025c 6510163E 		.word	1041633381
 871 0260 250B173E 		.word	1041697573
 872 0264 D305183E 		.word	1041761747
 873 0268 6F00193E 		.word	1041825903
 874 026c F8FA193E 		.word	1041890040
 875 0270 6EF51A3E 		.word	1041954158
 876 0274 D2EF1B3E 		.word	1042018258
 877 0278 24EA1C3E 		.word	1042082340
 878 027c 62E41D3E 		.word	1042146402
 879 0280 8DDE1E3E 		.word	1042210445
 880 0284 A5D81F3E 		.word	1042274469
 881 0288 AAD2203E 		.word	1042338474
 882 028c 9CCC213E 		.word	1042402460
 883 0290 79C6223E 		.word	1042466425
 884 0294 44C0233E 		.word	1042530372
 885 0298 FBB9243E 		.word	1042594299
 886 029c 9EB3253E 		.word	1042658206
 887 02a0 2DAD263E 		.word	1042722093
 888 02a4 A9A6273E 		.word	1042785961
 889 02a8 10A0283E 		.word	1042849808
ARM GAS  /tmp/ccidj5xY.s 			page 28


 890 02ac 6399293E 		.word	1042913635
 891 02b0 A2922A3E 		.word	1042977442
 892 02b4 CD8B2B3E 		.word	1043041229
 893 02b8 E2842C3E 		.word	1043104994
 894 02bc E47D2D3E 		.word	1043168740
 895 02c0 D0762E3E 		.word	1043232464
 896 02c4 A86F2F3E 		.word	1043296168
 897 02c8 6B68303E 		.word	1043359851
 898 02cc 1861313E 		.word	1043423512
 899 02d0 B259323E 		.word	1043487154
 900 02d4 3552333E 		.word	1043550773
 901 02d8 A34A343E 		.word	1043614371
 902 02dc FB42353E 		.word	1043677947
 903 02e0 3F3B363E 		.word	1043741503
 904 02e4 6C33373E 		.word	1043805036
 905 02e8 842B383E 		.word	1043868548
 906 02ec 8623393E 		.word	1043932038
 907 02f0 721B3A3E 		.word	1043995506
 908 02f4 48133B3E 		.word	1044058952
 909 02f8 080B3C3E 		.word	1044122376
 910 02fc B1023D3E 		.word	1044185777
 911 0300 44FA3D3E 		.word	1044249156
 912 0304 C1F13E3E 		.word	1044312513
 913 0308 27E93F3E 		.word	1044375847
 914 030c 77E0403E 		.word	1044439159
 915 0310 AFD7413E 		.word	1044502447
 916 0314 D1CE423E 		.word	1044565713
 917 0318 DCC5433E 		.word	1044628956
 918 031c D0BC443E 		.word	1044692176
 919 0320 ACB3453E 		.word	1044755372
 920 0324 72AA463E 		.word	1044818546
 921 0328 20A1473E 		.word	1044881696
 922 032c B797483E 		.word	1044944823
 923 0330 358E493E 		.word	1045007925
 924 0334 9D844A3E 		.word	1045071005
 925 0338 EC7A4B3E 		.word	1045134060
 926 033c 24714C3E 		.word	1045197092
 927 0340 44674D3E 		.word	1045260100
 928 0344 4C5D4E3E 		.word	1045323084
 929 0348 3B534F3E 		.word	1045386043
 930 034c 1349503E 		.word	1045448979
 931 0350 D23E513E 		.word	1045511890
 932 0354 7834523E 		.word	1045574776
 933 0358 062A533E 		.word	1045637638
 934 035c 7C1F543E 		.word	1045700476
 935 0360 D814553E 		.word	1045763288
 936 0364 1C0A563E 		.word	1045826076
 937 0368 47FF563E 		.word	1045888839
 938 036c 59F4573E 		.word	1045951577
 939 0370 52E9583E 		.word	1046014290
 940 0374 32DE593E 		.word	1046076978
 941 0378 F8D25A3E 		.word	1046139640
 942 037c A5C75B3E 		.word	1046202277
 943 0380 39BC5C3E 		.word	1046264889
 944 0384 B3B05D3E 		.word	1046327475
 945 0388 13A55E3E 		.word	1046390035
 946 038c 5A995F3E 		.word	1046452570
ARM GAS  /tmp/ccidj5xY.s 			page 29


 947 0390 868D603E 		.word	1046515078
 948 0394 9981613E 		.word	1046577561
 949 0398 9175623E 		.word	1046640017
 950 039c 7069633E 		.word	1046702448
 951 03a0 355D643E 		.word	1046764853
 952 03a4 DE50653E 		.word	1046827230
 953 03a8 6E44663E 		.word	1046889582
 954 03ac E337673E 		.word	1046951907
 955 03b0 3E2B683E 		.word	1047014206
 956 03b4 7E1E693E 		.word	1047076478
 957 03b8 A3116A3E 		.word	1047138723
 958 03bc AD046B3E 		.word	1047200941
 959 03c0 9DF76B3E 		.word	1047263133
 960 03c4 71EA6C3E 		.word	1047325297
 961 03c8 2ADD6D3E 		.word	1047387434
 962 03cc C8CF6E3E 		.word	1047449544
 963 03d0 4BC26F3E 		.word	1047511627
 964 03d4 B2B4703E 		.word	1047573682
 965 03d8 FEA6713E 		.word	1047635710
 966 03dc 2E99723E 		.word	1047697710
 967 03e0 438B733E 		.word	1047759683
 968 03e4 3C7D743E 		.word	1047821628
 969 03e8 196F753E 		.word	1047883545
 970 03ec DA60763E 		.word	1047945434
 971 03f0 7F52773E 		.word	1048007295
 972 03f4 0844783E 		.word	1048069128
 973 03f8 7535793E 		.word	1048130933
 974 03fc C6267A3E 		.word	1048192710
 975 0400 FA177B3E 		.word	1048254458
 976 0404 12097C3E 		.word	1048316178
 977 0408 0EFA7C3E 		.word	1048377870
 978 040c ECEA7D3E 		.word	1048439532
 979 0410 AEDB7E3E 		.word	1048501166
 980 0414 54CC7F3E 		.word	1048562772
 981 0418 6E5E803E 		.word	1048600174
 982 041c A4D6803E 		.word	1048630948
 983 0420 CB4E813E 		.word	1048661707
 984 0424 E4C6813E 		.word	1048692452
 985 0428 EE3E823E 		.word	1048723182
 986 042c EAB6823E 		.word	1048753898
 987 0430 D72E833E 		.word	1048784599
 988 0434 B5A6833E 		.word	1048815285
 989 0438 841E843E 		.word	1048845956
 990 043c 4596843E 		.word	1048876613
 991 0440 F60D853E 		.word	1048907254
 992 0444 9A85853E 		.word	1048937882
 993 0448 2EFD853E 		.word	1048968494
 994 044c B374863E 		.word	1048999091
 995 0450 28EC863E 		.word	1049029672
 996 0454 8F63873E 		.word	1049060239
 997 0458 E7DA873E 		.word	1049090791
 998 045c 3052883E 		.word	1049121328
 999 0460 6AC9883E 		.word	1049151850
 1000 0464 9440893E 		.word	1049182356
 1001 0468 B0B7893E 		.word	1049212848
 1002 046c BC2E8A3E 		.word	1049243324
 1003 0470 B8A58A3E 		.word	1049273784
ARM GAS  /tmp/ccidj5xY.s 			page 30


 1004 0474 A61C8B3E 		.word	1049304230
 1005 0478 84938B3E 		.word	1049334660
 1006 047c 520A8C3E 		.word	1049365074
 1007 0480 11818C3E 		.word	1049395473
 1008 0484 C1F78C3E 		.word	1049425857
 1009 0488 616E8D3E 		.word	1049456225
 1010 048c F1E48D3E 		.word	1049486577
 1011 0490 725B8E3E 		.word	1049516914
 1012 0494 E3D18E3E 		.word	1049547235
 1013 0498 45488F3E 		.word	1049577541
 1014 049c 97BE8F3E 		.word	1049607831
 1015 04a0 D934903E 		.word	1049638105
 1016 04a4 0BAB903E 		.word	1049668363
 1017 04a8 2D21913E 		.word	1049698605
 1018 04ac 4097913E 		.word	1049728832
 1019 04b0 420D923E 		.word	1049759042
 1020 04b4 3583923E 		.word	1049789237
 1021 04b8 18F9923E 		.word	1049819416
 1022 04bc EB6E933E 		.word	1049849579
 1023 04c0 ADE4933E 		.word	1049879725
 1024 04c4 605A943E 		.word	1049909856
 1025 04c8 02D0943E 		.word	1049939970
 1026 04cc 9445953E 		.word	1049970068
 1027 04d0 16BB953E 		.word	1050000150
 1028 04d4 8830963E 		.word	1050030216
 1029 04d8 EAA5963E 		.word	1050060266
 1030 04dc 3B1B973E 		.word	1050090299
 1031 04e0 7C90973E 		.word	1050120316
 1032 04e4 AD05983E 		.word	1050150317
 1033 04e8 CC7A983E 		.word	1050180300
 1034 04ec DCEF983E 		.word	1050210268
 1035 04f0 DC64993E 		.word	1050240220
 1036 04f4 CAD9993E 		.word	1050270154
 1037 04f8 A84E9A3E 		.word	1050300072
 1038 04fc 76C39A3E 		.word	1050329974
 1039 0500 33389B3E 		.word	1050359859
 1040 0504 DFAC9B3E 		.word	1050389727
 1041 0508 7B219C3E 		.word	1050419579
 1042 050c 06969C3E 		.word	1050449414
 1043 0510 800A9D3E 		.word	1050479232
 1044 0514 EA7E9D3E 		.word	1050509034
 1045 0518 42F39D3E 		.word	1050538818
 1046 051c 8A679E3E 		.word	1050568586
 1047 0520 C1DB9E3E 		.word	1050598337
 1048 0524 E74F9F3E 		.word	1050628071
 1049 0528 FCC39F3E 		.word	1050657788
 1050 052c 0038A03E 		.word	1050687488
 1051 0530 F3ABA03E 		.word	1050717171
 1052 0534 D61FA13E 		.word	1050746838
 1053 0538 A793A13E 		.word	1050776487
 1054 053c 6607A23E 		.word	1050806118
 1055 0540 157BA23E 		.word	1050835733
 1056 0544 B3EEA23E 		.word	1050865331
 1057 0548 3F62A33E 		.word	1050894911
 1058 054c BAD5A33E 		.word	1050924474
 1059 0550 2449A43E 		.word	1050954020
 1060 0554 7DBCA43E 		.word	1050983549
ARM GAS  /tmp/ccidj5xY.s 			page 31


 1061 0558 C42FA53E 		.word	1051013060
 1062 055c FAA2A53E 		.word	1051042554
 1063 0560 1F16A63E 		.word	1051072031
 1064 0564 3289A63E 		.word	1051101490
 1065 0568 34FCA63E 		.word	1051130932
 1066 056c 256FA73E 		.word	1051160357
 1067 0570 03E2A73E 		.word	1051189763
 1068 0574 D154A83E 		.word	1051219153
 1069 0578 8DC7A83E 		.word	1051248525
 1070 057c 373AA93E 		.word	1051277879
 1071 0580 CFACA93E 		.word	1051307215
 1072 0584 561FAA3E 		.word	1051336534
 1073 0588 CC91AA3E 		.word	1051365836
 1074 058c 2F04AB3E 		.word	1051395119
 1075 0590 8176AB3E 		.word	1051424385
 1076 0594 C1E8AB3E 		.word	1051453633
 1077 0598 EF5AAC3E 		.word	1051482863
 1078 059c 0CCDAC3E 		.word	1051512076
 1079 05a0 173FAD3E 		.word	1051541271
 1080 05a4 0FB1AD3E 		.word	1051570447
 1081 05a8 F622AE3E 		.word	1051599606
 1082 05ac CB94AE3E 		.word	1051628747
 1083 05b0 8E06AF3E 		.word	1051657870
 1084 05b4 3F78AF3E 		.word	1051686975
 1085 05b8 DEE9AF3E 		.word	1051716062
 1086 05bc 6B5BB03E 		.word	1051745131
 1087 05c0 E6CCB03E 		.word	1051774182
 1088 05c4 4F3EB13E 		.word	1051803215
 1089 05c8 A6AFB13E 		.word	1051832230
 1090 05cc EB20B23E 		.word	1051861227
 1091 05d0 1D92B23E 		.word	1051890205
 1092 05d4 3D03B33E 		.word	1051919165
 1093 05d8 4B74B33E 		.word	1051948107
 1094 05dc 47E5B33E 		.word	1051977031
 1095 05e0 3156B43E 		.word	1052005937
 1096 05e4 08C7B43E 		.word	1052034824
 1097 05e8 CD37B53E 		.word	1052063693
 1098 05ec 7FA8B53E 		.word	1052092543
 1099 05f0 2019B63E 		.word	1052121376
 1100 05f4 AE89B63E 		.word	1052150190
 1101 05f8 29FAB63E 		.word	1052178985
 1102 05fc 926AB73E 		.word	1052207762
 1103 0600 E8DAB73E 		.word	1052236520
 1104 0604 2C4BB83E 		.word	1052265260
 1105 0608 5EBBB83E 		.word	1052293982
 1106 060c 7D2BB93E 		.word	1052322685
 1107 0610 899BB93E 		.word	1052351369
 1108 0614 830BBA3E 		.word	1052380035
 1109 0618 6A7BBA3E 		.word	1052408682
 1110 061c 3FEBBA3E 		.word	1052437311
 1111 0620 015BBB3E 		.word	1052465921
 1112 0624 B0CABB3E 		.word	1052494512
 1113 0628 4C3ABC3E 		.word	1052523084
 1114 062c D6A9BC3E 		.word	1052551638
 1115 0630 4D19BD3E 		.word	1052580173
 1116 0634 B188BD3E 		.word	1052608689
 1117 0638 03F8BD3E 		.word	1052637187
ARM GAS  /tmp/ccidj5xY.s 			page 32


 1118 063c 4267BE3E 		.word	1052665666
 1119 0640 6DD6BE3E 		.word	1052694125
 1120 0644 8645BF3E 		.word	1052722566
 1121 0648 8CB4BF3E 		.word	1052750988
 1122 064c 7F23C03E 		.word	1052779391
 1123 0650 6092C03E 		.word	1052807776
 1124 0654 2D01C13E 		.word	1052836141
 1125 0658 E76FC13E 		.word	1052864487
 1126 065c 8EDEC13E 		.word	1052892814
 1127 0660 224DC23E 		.word	1052921122
 1128 0664 A4BBC23E 		.word	1052949412
 1129 0668 122AC33E 		.word	1052977682
 1130 066c 6D98C33E 		.word	1053005933
 1131 0670 B506C43E 		.word	1053034165
 1132 0674 EA74C43E 		.word	1053062378
 1133 0678 0CE3C43E 		.word	1053090572
 1134 067c 1A51C53E 		.word	1053118746
 1135 0680 15BFC53E 		.word	1053146901
 1136 0684 FE2CC63E 		.word	1053175038
 1137 0688 D39AC63E 		.word	1053203155
 1138 068c 9508C73E 		.word	1053231253
 1139 0690 4376C73E 		.word	1053259331
 1140 0694 DEE3C73E 		.word	1053287390
 1141 0698 6651C83E 		.word	1053315430
 1142 069c DBBEC83E 		.word	1053343451
 1143 06a0 3C2CC93E 		.word	1053371452
 1144 06a4 8A99C93E 		.word	1053399434
 1145 06a8 C406CA3E 		.word	1053427396
 1146 06ac EB73CA3E 		.word	1053455339
 1147 06b0 FFE0CA3E 		.word	1053483263
 1148 06b4 FF4DCB3E 		.word	1053511167
 1149 06b8 ECBACB3E 		.word	1053539052
 1150 06bc C527CC3E 		.word	1053566917
 1151 06c0 8B94CC3E 		.word	1053594763
 1152 06c4 3E01CD3E 		.word	1053622590
 1153 06c8 DC6DCD3E 		.word	1053650396
 1154 06cc 68DACD3E 		.word	1053678184
 1155 06d0 E046CE3E 		.word	1053705952
 1156 06d4 44B3CE3E 		.word	1053733700
 1157 06d8 941FCF3E 		.word	1053761428
 1158 06dc D18BCF3E 		.word	1053789137
 1159 06e0 FAF7CF3E 		.word	1053816826
 1160 06e4 1064D03E 		.word	1053844496
 1161 06e8 12D0D03E 		.word	1053872146
 1162 06ec 013CD13E 		.word	1053899777
 1163 06f0 DBA7D13E 		.word	1053927387
 1164 06f4 A213D23E 		.word	1053954978
 1165 06f8 557FD23E 		.word	1053982549
 1166 06fc F5EAD23E 		.word	1054010101
 1167 0700 8156D33E 		.word	1054037633
 1168 0704 F9C1D33E 		.word	1054065145
 1169 0708 5D2DD43E 		.word	1054092637
 1170 070c AE98D43E 		.word	1054120110
 1171 0710 EA03D53E 		.word	1054147562
 1172 0714 136FD53E 		.word	1054174995
 1173 0718 27DAD53E 		.word	1054202407
 1174 071c 2945D63E 		.word	1054229801
ARM GAS  /tmp/ccidj5xY.s 			page 33


 1175 0720 16B0D63E 		.word	1054257174
 1176 0724 EF1AD73E 		.word	1054284527
 1177 0728 B485D73E 		.word	1054311860
 1178 072c 66F0D73E 		.word	1054339174
 1179 0730 035BD83E 		.word	1054366467
 1180 0734 8DC5D83E 		.word	1054393741
 1181 0738 0230D93E 		.word	1054420994
 1182 073c 649AD93E 		.word	1054448228
 1183 0740 B204DA3E 		.word	1054475442
 1184 0744 EB6EDA3E 		.word	1054502635
 1185 0748 11D9DA3E 		.word	1054529809
 1186 074c 2243DB3E 		.word	1054556962
 1187 0750 20ADDB3E 		.word	1054584096
 1188 0754 0917DC3E 		.word	1054611209
 1189 0758 DF80DC3E 		.word	1054638303
 1190 075c A0EADC3E 		.word	1054665376
 1191 0760 4D54DD3E 		.word	1054692429
 1192 0764 E6BDDD3E 		.word	1054719462
 1193 0768 6B27DE3E 		.word	1054746475
 1194 076c DC90DE3E 		.word	1054773468
 1195 0770 38FADE3E 		.word	1054800440
 1196 0774 8163DF3E 		.word	1054827393
 1197 0778 B5CCDF3E 		.word	1054854325
 1198 077c D535E03E 		.word	1054881237
 1199 0780 E19EE03E 		.word	1054908129
 1200 0784 D907E13E 		.word	1054935001
 1201 0788 BD70E13E 		.word	1054961853
 1202 078c 8CD9E13E 		.word	1054988684
 1203 0790 4742E23E 		.word	1055015495
 1204 0794 EEAAE23E 		.word	1055042286
 1205 0798 8013E33E 		.word	1055069056
 1206 079c FE7BE33E 		.word	1055095806
 1207 07a0 68E4E33E 		.word	1055122536
 1208 07a4 BE4CE43E 		.word	1055149246
 1209 07a8 FFB4E43E 		.word	1055175935
 1210 07ac 2C1DE53E 		.word	1055202604
 1211 07b0 4585E53E 		.word	1055229253
 1212 07b4 49EDE53E 		.word	1055255881
 1213 07b8 3955E63E 		.word	1055282489
 1214 07bc 15BDE63E 		.word	1055309077
 1215 07c0 DC24E73E 		.word	1055335644
 1216 07c4 8F8CE73E 		.word	1055362191
 1217 07c8 2DF4E73E 		.word	1055388717
 1218 07cc B75BE83E 		.word	1055415223
 1219 07d0 2DC3E83E 		.word	1055441709
 1220 07d4 8E2AE93E 		.word	1055468174
 1221 07d8 DB91E93E 		.word	1055494619
 1222 07dc 14F9E93E 		.word	1055521044
 1223 07e0 3760EA3E 		.word	1055547447
 1224 07e4 47C7EA3E 		.word	1055573831
 1225 07e8 422EEB3E 		.word	1055600194
 1226 07ec 2895EB3E 		.word	1055626536
 1227 07f0 FBFBEB3E 		.word	1055652859
 1228 07f4 B862EC3E 		.word	1055679160
 1229 07f8 61C9EC3E 		.word	1055705441
 1230 07fc F62FED3E 		.word	1055731702
 1231 0800 7696ED3E 		.word	1055757942
ARM GAS  /tmp/ccidj5xY.s 			page 34


 1232 0804 E1FCED3E 		.word	1055784161
 1233 0808 3863EE3E 		.word	1055810360
 1234 080c 7BC9EE3E 		.word	1055836539
 1235 0810 A92FEF3E 		.word	1055862697
 1236 0814 C295EF3E 		.word	1055888834
 1237 0818 C7FBEF3E 		.word	1055914951
 1238 081c B761F03E 		.word	1055941047
 1239 0820 92C7F03E 		.word	1055967122
 1240 0824 592DF13E 		.word	1055993177
 1241 0828 0C93F13E 		.word	1056019212
 1242 082c AAF8F13E 		.word	1056045226
 1243 0830 335EF23E 		.word	1056071219
 1244 0834 A7C3F23E 		.word	1056097191
 1245 0838 0729F33E 		.word	1056123143
 1246 083c 538EF33E 		.word	1056149075
 1247 0840 8AF3F33E 		.word	1056174986
 1248 0844 AC58F43E 		.word	1056200876
 1249 0848 B9BDF43E 		.word	1056226745
 1250 084c B222F53E 		.word	1056252594
 1251 0850 9687F53E 		.word	1056278422
 1252 0854 66ECF53E 		.word	1056304230
 1253 0858 2151F63E 		.word	1056330017
 1254 085c C7B5F63E 		.word	1056355783
 1255 0860 581AF73E 		.word	1056381528
 1256 0864 D57EF73E 		.word	1056407253
 1257 0868 3DE3F73E 		.word	1056432957
 1258 086c 9147F83E 		.word	1056458641
 1259 0870 CFABF83E 		.word	1056484303
 1260 0874 F90FF93E 		.word	1056509945
 1261 0878 0F74F93E 		.word	1056535567
 1262 087c 0FD8F93E 		.word	1056561167
 1263 0880 FB3BFA3E 		.word	1056586747
 1264 0884 D29FFA3E 		.word	1056612306
 1265 0888 9503FB3E 		.word	1056637845
 1266 088c 4267FB3E 		.word	1056663362
 1267 0890 DBCAFB3E 		.word	1056688859
 1268 0894 602EFC3E 		.word	1056714336
 1269 0898 CF91FC3E 		.word	1056739791
 1270 089c 2AF5FC3E 		.word	1056765226
 1271 08a0 7058FD3E 		.word	1056790640
 1272 08a4 A1BBFD3E 		.word	1056816033
 1273 08a8 BE1EFE3E 		.word	1056841406
 1274 08ac C581FE3E 		.word	1056866757
 1275 08b0 B8E4FE3E 		.word	1056892088
 1276 08b4 9647FF3E 		.word	1056917398
 1277 08b8 60AAFF3E 		.word	1056942688
 1278 08bc 8A06003F 		.word	1056966282
 1279 08c0 DA37003F 		.word	1056978906
 1280 08c4 1F69003F 		.word	1056991519
 1281 08c8 5B9A003F 		.word	1057004123
 1282 08cc 8CCB003F 		.word	1057016716
 1283 08d0 B2FC003F 		.word	1057029298
 1284 08d4 CE2D013F 		.word	1057041870
 1285 08d8 DF5E013F 		.word	1057054431
 1286 08dc E68F013F 		.word	1057066982
 1287 08e0 E3C0013F 		.word	1057079523
 1288 08e4 D6F1013F 		.word	1057092054
ARM GAS  /tmp/ccidj5xY.s 			page 35


 1289 08e8 BD22023F 		.word	1057104573
 1290 08ec 9B53023F 		.word	1057117083
 1291 08f0 6E84023F 		.word	1057129582
 1292 08f4 37B5023F 		.word	1057142071
 1293 08f8 F5E5023F 		.word	1057154549
 1294 08fc A916033F 		.word	1057167017
 1295 0900 5347033F 		.word	1057179475
 1296 0904 F277033F 		.word	1057191922
 1297 0908 87A8033F 		.word	1057204359
 1298 090c 11D9033F 		.word	1057216785
 1299 0910 9109043F 		.word	1057229201
 1300 0914 063A043F 		.word	1057241606
 1301 0918 716A043F 		.word	1057254001
 1302 091c D29A043F 		.word	1057266386
 1303 0920 28CB043F 		.word	1057278760
 1304 0924 74FB043F 		.word	1057291124
 1305 0928 B52B053F 		.word	1057303477
 1306 092c EC5B053F 		.word	1057315820
 1307 0930 198C053F 		.word	1057328153
 1308 0934 3BBC053F 		.word	1057340475
 1309 0938 53EC053F 		.word	1057352787
 1310 093c 601C063F 		.word	1057365088
 1311 0940 634C063F 		.word	1057377379
 1312 0944 5C7C063F 		.word	1057389660
 1313 0948 4AAC063F 		.word	1057401930
 1314 094c 2EDC063F 		.word	1057414190
 1315 0950 070C073F 		.word	1057426439
 1316 0954 D63B073F 		.word	1057438678
 1317 0958 9A6B073F 		.word	1057450906
 1318 095c 549B073F 		.word	1057463124
 1319 0960 04CB073F 		.word	1057475332
 1320 0964 A9FA073F 		.word	1057487529
 1321 0968 442A083F 		.word	1057499716
 1322 096c D559083F 		.word	1057511893
 1323 0970 5B89083F 		.word	1057524059
 1324 0974 D6B8083F 		.word	1057536214
 1325 0978 47E8083F 		.word	1057548359
 1326 097c AE17093F 		.word	1057560494
 1327 0980 0B47093F 		.word	1057572619
 1328 0984 5C76093F 		.word	1057584732
 1329 0988 A4A5093F 		.word	1057596836
 1330 098c E1D4093F 		.word	1057608929
 1331 0990 14040A3F 		.word	1057621012
 1332 0994 3C330A3F 		.word	1057633084
 1333 0998 5A620A3F 		.word	1057645146
 1334 099c 6E910A3F 		.word	1057657198
 1335 09a0 77C00A3F 		.word	1057669239
 1336 09a4 76EF0A3F 		.word	1057681270
 1337 09a8 6A1E0B3F 		.word	1057693290
 1338 09ac 544D0B3F 		.word	1057705300
 1339 09b0 347C0B3F 		.word	1057717300
 1340 09b4 09AB0B3F 		.word	1057729289
 1341 09b8 D4D90B3F 		.word	1057741268
 1342 09bc 94080C3F 		.word	1057753236
 1343 09c0 4A370C3F 		.word	1057765194
 1344 09c4 F5650C3F 		.word	1057777141
 1345 09c8 97940C3F 		.word	1057789079
ARM GAS  /tmp/ccidj5xY.s 			page 36


 1346 09cc 2EC30C3F 		.word	1057801006
 1347 09d0 BAF10C3F 		.word	1057812922
 1348 09d4 3C200D3F 		.word	1057824828
 1349 09d8 B44E0D3F 		.word	1057836724
 1350 09dc 217D0D3F 		.word	1057848609
 1351 09e0 84AB0D3F 		.word	1057860484
 1352 09e4 DDD90D3F 		.word	1057872349
 1353 09e8 2B080E3F 		.word	1057884203
 1354 09ec 6F360E3F 		.word	1057896047
 1355 09f0 A8640E3F 		.word	1057907880
 1356 09f4 D7920E3F 		.word	1057919703
 1357 09f8 FCC00E3F 		.word	1057931516
 1358 09fc 16EF0E3F 		.word	1057943318
 1359 0a00 261D0F3F 		.word	1057955110
 1360 0a04 2C4B0F3F 		.word	1057966892
 1361 0a08 27790F3F 		.word	1057978663
 1362 0a0c 18A70F3F 		.word	1057990424
 1363 0a10 FED40F3F 		.word	1058002174
 1364 0a14 DB02103F 		.word	1058013915
 1365 0a18 AC30103F 		.word	1058025644
 1366 0a1c 745E103F 		.word	1058037364
 1367 0a20 318C103F 		.word	1058049073
 1368 0a24 E4B9103F 		.word	1058060772
 1369 0a28 8CE7103F 		.word	1058072460
 1370 0a2c 2B15113F 		.word	1058084139
 1371 0a30 BE42113F 		.word	1058095806
 1372 0a34 4870113F 		.word	1058107464
 1373 0a38 C79D113F 		.word	1058119111
 1374 0a3c 3CCB113F 		.word	1058130748
 1375 0a40 A6F8113F 		.word	1058142374
 1376 0a44 0626123F 		.word	1058153990
 1377 0a48 5C53123F 		.word	1058165596
 1378 0a4c A880123F 		.word	1058177192
 1379 0a50 E9AD123F 		.word	1058188777
 1380 0a54 20DB123F 		.word	1058200352
 1381 0a58 4C08133F 		.word	1058211916
 1382 0a5c 6E35133F 		.word	1058223470
 1383 0a60 8662133F 		.word	1058235014
 1384 0a64 948F133F 		.word	1058246548
 1385 0a68 97BC133F 		.word	1058258071
 1386 0a6c 90E9133F 		.word	1058269584
 1387 0a70 7F16143F 		.word	1058281087
 1388 0a74 6443143F 		.word	1058292580
 1389 0a78 3E70143F 		.word	1058304062
 1390 0a7c 0E9D143F 		.word	1058315534
 1391 0a80 D3C9143F 		.word	1058326995
 1392 0a84 8FF6143F 		.word	1058338447
 1393 0a88 4023153F 		.word	1058349888
 1394 0a8c E64F153F 		.word	1058361318
 1395 0a90 837C153F 		.word	1058372739
 1396 0a94 15A9153F 		.word	1058384149
 1397 0a98 9DD5153F 		.word	1058395549
 1398 0a9c 1B02163F 		.word	1058406939
 1399 0aa0 8F2E163F 		.word	1058418319
 1400 0aa4 F85A163F 		.word	1058429688
 1401 0aa8 5787163F 		.word	1058441047
 1402 0aac ABB3163F 		.word	1058452395
ARM GAS  /tmp/ccidj5xY.s 			page 37


 1403 0ab0 F6DF163F 		.word	1058463734
 1404 0ab4 360C173F 		.word	1058475062
 1405 0ab8 6C38173F 		.word	1058486380
 1406 0abc 9864173F 		.word	1058497688
 1407 0ac0 BA90173F 		.word	1058508986
 1408 0ac4 D1BC173F 		.word	1058520273
 1409 0ac8 DEE8173F 		.word	1058531550
 1410 0acc E114183F 		.word	1058542817
 1411 0ad0 DA40183F 		.word	1058554074
 1412 0ad4 C86C183F 		.word	1058565320
 1413 0ad8 AC98183F 		.word	1058576556
 1414 0adc 87C4183F 		.word	1058587783
 1415 0ae0 56F0183F 		.word	1058598998
 1416 0ae4 1C1C193F 		.word	1058610204
 1417 0ae8 D847193F 		.word	1058621400
 1418 0aec 8973193F 		.word	1058632585
 1419 0af0 309F193F 		.word	1058643760
 1420 0af4 CDCA193F 		.word	1058654925
 1421 0af8 60F6193F 		.word	1058666080
 1422 0afc E8211A3F 		.word	1058677224
 1423 0b00 674D1A3F 		.word	1058688359
 1424 0b04 DB781A3F 		.word	1058699483
 1425 0b08 45A41A3F 		.word	1058710597
 1426 0b0c A5CF1A3F 		.word	1058721701
 1427 0b10 FBFA1A3F 		.word	1058732795
 1428 0b14 47261B3F 		.word	1058743879
 1429 0b18 88511B3F 		.word	1058754952
 1430 0b1c C07C1B3F 		.word	1058766016
 1431 0b20 EDA71B3F 		.word	1058777069
 1432 0b24 10D31B3F 		.word	1058788112
 1433 0b28 29FE1B3F 		.word	1058799145
 1434 0b2c 38291C3F 		.word	1058810168
 1435 0b30 3D541C3F 		.word	1058821181
 1436 0b34 377F1C3F 		.word	1058832183
 1437 0b38 28AA1C3F 		.word	1058843176
 1438 0b3c 0ED51C3F 		.word	1058854158
 1439 0b40 EBFF1C3F 		.word	1058865131
 1440 0b44 BD2A1D3F 		.word	1058876093
 1441 0b48 85551D3F 		.word	1058887045
 1442 0b4c 43801D3F 		.word	1058897987
 1443 0b50 F7AA1D3F 		.word	1058908919
 1444 0b54 A1D51D3F 		.word	1058919841
 1445 0b58 41001E3F 		.word	1058930753
 1446 0b5c D72A1E3F 		.word	1058941655
 1447 0b60 63551E3F 		.word	1058952547
 1448 0b64 E57F1E3F 		.word	1058963429
 1449 0b68 5CAA1E3F 		.word	1058974300
 1450 0b6c CAD41E3F 		.word	1058985162
 1451 0b70 2DFF1E3F 		.word	1058996013
 1452 0b74 87291F3F 		.word	1059006855
 1453 0b78 D7531F3F 		.word	1059017687
 1454 0b7c 1C7E1F3F 		.word	1059028508
 1455 0b80 57A81F3F 		.word	1059039319
 1456 0b84 89D21F3F 		.word	1059050121
 1457 0b88 B0FC1F3F 		.word	1059060912
 1458 0b8c CE26203F 		.word	1059071694
 1459 0b90 E150203F 		.word	1059082465
ARM GAS  /tmp/ccidj5xY.s 			page 38


 1460 0b94 EB7A203F 		.word	1059093227
 1461 0b98 EAA4203F 		.word	1059103978
 1462 0b9c E0CE203F 		.word	1059114720
 1463 0ba0 CBF8203F 		.word	1059125451
 1464 0ba4 AD22213F 		.word	1059136173
 1465 0ba8 844C213F 		.word	1059146884
 1466 0bac 5276213F 		.word	1059157586
 1467 0bb0 15A0213F 		.word	1059168277
 1468 0bb4 CFC9213F 		.word	1059178959
 1469 0bb8 7FF3213F 		.word	1059189631
 1470 0bbc 241D223F 		.word	1059200292
 1471 0bc0 C046223F 		.word	1059210944
 1472 0bc4 5270223F 		.word	1059221586
 1473 0bc8 DA99223F 		.word	1059232218
 1474 0bcc 58C3223F 		.word	1059242840
 1475 0bd0 CCEC223F 		.word	1059253452
 1476 0bd4 3716233F 		.word	1059264055
 1477 0bd8 973F233F 		.word	1059274647
 1478 0bdc ED68233F 		.word	1059285229
 1479 0be0 3A92233F 		.word	1059295802
 1480 0be4 7CBB233F 		.word	1059306364
 1481 0be8 B5E4233F 		.word	1059316917
 1482 0bec E40D243F 		.word	1059327460
 1483 0bf0 0937243F 		.word	1059337993
 1484 0bf4 2460243F 		.word	1059348516
 1485 0bf8 3589243F 		.word	1059359029
 1486 0bfc 3DB2243F 		.word	1059369533
 1487 0c00 3ADB243F 		.word	1059380026
 1488 0c04 2E04253F 		.word	1059390510
 1489 0c08 182D253F 		.word	1059400984
 1490 0c0c F855253F 		.word	1059411448
 1491 0c10 CE7E253F 		.word	1059421902
 1492 0c14 9BA7253F 		.word	1059432347
 1493 0c18 5DD0253F 		.word	1059442781
 1494 0c1c 16F9253F 		.word	1059453206
 1495 0c20 C521263F 		.word	1059463621
 1496 0c24 6A4A263F 		.word	1059474026
 1497 0c28 0573263F 		.word	1059484421
 1498 0c2c 979B263F 		.word	1059494807
 1499 0c30 1FC4263F 		.word	1059505183
 1500 0c34 9DEC263F 		.word	1059515549
 1501 0c38 1115273F 		.word	1059525905
 1502 0c3c 7B3D273F 		.word	1059536251
 1503 0c40 DC65273F 		.word	1059546588
 1504 0c44 338E273F 		.word	1059556915
 1505 0c48 80B6273F 		.word	1059567232
 1506 0c4c C4DE273F 		.word	1059577540
 1507 0c50 FD06283F 		.word	1059587837
 1508 0c54 2D2F283F 		.word	1059598125
 1509 0c58 5457283F 		.word	1059608404
 1510 0c5c 707F283F 		.word	1059618672
 1511 0c60 83A7283F 		.word	1059628931
 1512 0c64 8CCF283F 		.word	1059639180
 1513 0c68 8CF7283F 		.word	1059649420
 1514 0c6c 821F293F 		.word	1059659650
 1515 0c70 6E47293F 		.word	1059669870
 1516 0c74 506F293F 		.word	1059680080
ARM GAS  /tmp/ccidj5xY.s 			page 39


 1517 0c78 2997293F 		.word	1059690281
 1518 0c7c F8BE293F 		.word	1059700472
 1519 0c80 BDE6293F 		.word	1059710653
 1520 0c84 790E2A3F 		.word	1059720825
 1521 0c88 2B362A3F 		.word	1059730987
 1522 0c8c D45D2A3F 		.word	1059741140
 1523 0c90 72852A3F 		.word	1059751282
 1524 0c94 08AD2A3F 		.word	1059761416
 1525 0c98 93D42A3F 		.word	1059771539
 1526 0c9c 15FC2A3F 		.word	1059781653
 1527 0ca0 8D232B3F 		.word	1059791757
 1528 0ca4 FC4A2B3F 		.word	1059801852
 1529 0ca8 61722B3F 		.word	1059811937
 1530 0cac BD992B3F 		.word	1059822013
 1531 0cb0 0FC12B3F 		.word	1059832079
 1532 0cb4 57E82B3F 		.word	1059842135
 1533 0cb8 960F2C3F 		.word	1059852182
 1534 0cbc CB362C3F 		.word	1059862219
 1535 0cc0 F75D2C3F 		.word	1059872247
 1536 0cc4 19852C3F 		.word	1059882265
 1537 0cc8 32AC2C3F 		.word	1059892274
 1538 0ccc 41D32C3F 		.word	1059902273
 1539 0cd0 46FA2C3F 		.word	1059912262
 1540 0cd4 42212D3F 		.word	1059922242
 1541 0cd8 35482D3F 		.word	1059932213
 1542 0cdc 1E6F2D3F 		.word	1059942174
 1543 0ce0 FD952D3F 		.word	1059952125
 1544 0ce4 D3BC2D3F 		.word	1059962067
 1545 0ce8 A0E32D3F 		.word	1059972000
 1546 0cec 630A2E3F 		.word	1059981923
 1547 0cf0 1C312E3F 		.word	1059991836
 1548 0cf4 CC572E3F 		.word	1060001740
 1549 0cf8 737E2E3F 		.word	1060011635
 1550 0cfc 10A52E3F 		.word	1060021520
 1551 0d00 A4CB2E3F 		.word	1060031396
 1552 0d04 2EF22E3F 		.word	1060041262
 1553 0d08 AE182F3F 		.word	1060051118
 1554 0d0c 263F2F3F 		.word	1060060966
 1555 0d10 94652F3F 		.word	1060070804
 1556 0d14 F88B2F3F 		.word	1060080632
 1557 0d18 53B22F3F 		.word	1060090451
 1558 0d1c A5D82F3F 		.word	1060100261
 1559 0d20 EDFE2F3F 		.word	1060110061
 1560 0d24 2C25303F 		.word	1060119852
 1561 0d28 614B303F 		.word	1060129633
 1562 0d2c 8E71303F 		.word	1060139406
 1563 0d30 B097303F 		.word	1060149168
 1564 0d34 CABD303F 		.word	1060158922
 1565 0d38 DAE3303F 		.word	1060168666
 1566 0d3c E009313F 		.word	1060178400
 1567 0d40 DE2F313F 		.word	1060188126
 1568 0d44 D255313F 		.word	1060197842
 1569 0d48 BC7B313F 		.word	1060207548
 1570 0d4c 9EA1313F 		.word	1060217246
 1571 0d50 76C7313F 		.word	1060226934
 1572 0d54 44ED313F 		.word	1060236612
 1573 0d58 0A13323F 		.word	1060246282
ARM GAS  /tmp/ccidj5xY.s 			page 40


 1574 0d5c C638323F 		.word	1060255942
 1575 0d60 795E323F 		.word	1060265593
 1576 0d64 2284323F 		.word	1060275234
 1577 0d68 C2A9323F 		.word	1060284866
 1578 0d6c 59CF323F 		.word	1060294489
 1579 0d70 E7F4323F 		.word	1060304103
 1580 0d74 6C1A333F 		.word	1060313708
 1581 0d78 E73F333F 		.word	1060323303
 1582 0d7c 5965333F 		.word	1060332889
 1583 0d80 C28A333F 		.word	1060342466
 1584 0d84 21B0333F 		.word	1060352033
 1585 0d88 77D5333F 		.word	1060361591
 1586 0d8c C5FA333F 		.word	1060371141
 1587 0d90 0820343F 		.word	1060380680
 1588 0d94 4345343F 		.word	1060390211
 1589 0d98 756A343F 		.word	1060399733
 1590 0d9c 9D8F343F 		.word	1060409245
 1591 0da0 BCB4343F 		.word	1060418748
 1592 0da4 D2D9343F 		.word	1060428242
 1593 0da8 DFFE343F 		.word	1060437727
 1594 0dac E323353F 		.word	1060447203
 1595 0db0 DD48353F 		.word	1060456669
 1596 0db4 CF6D353F 		.word	1060466127
 1597 0db8 B792353F 		.word	1060475575
 1598 0dbc 96B7353F 		.word	1060485014
 1599 0dc0 6CDC353F 		.word	1060494444
 1600 0dc4 3901363F 		.word	1060503865
 1601 0dc8 FD25363F 		.word	1060513277
 1602 0dcc B74A363F 		.word	1060522679
 1603 0dd0 696F363F 		.word	1060532073
 1604 0dd4 1194363F 		.word	1060541457
 1605 0dd8 B1B8363F 		.word	1060550833
 1606 0ddc 47DD363F 		.word	1060560199
 1607 0de0 D501373F 		.word	1060569557
 1608 0de4 5926373F 		.word	1060578905
 1609 0de8 D44A373F 		.word	1060588244
 1610 0dec 466F373F 		.word	1060597574
 1611 0df0 B093373F 		.word	1060606896
 1612 0df4 10B8373F 		.word	1060616208
 1613 0df8 67DC373F 		.word	1060625511
 1614 0dfc B500383F 		.word	1060634805
 1615 0e00 FA24383F 		.word	1060644090
 1616 0e04 3649383F 		.word	1060653366
 1617 0e08 696D383F 		.word	1060662633
 1618 0e0c 9491383F 		.word	1060671892
 1619 0e10 B5B5383F 		.word	1060681141
 1620 0e14 CDD9383F 		.word	1060690381
 1621 0e18 DCFD383F 		.word	1060699612
 1622 0e1c E321393F 		.word	1060708835
 1623 0e20 E045393F 		.word	1060718048
 1624 0e24 D569393F 		.word	1060727253
 1625 0e28 C08D393F 		.word	1060736448
 1626 0e2c A3B1393F 		.word	1060745635
 1627 0e30 7CD5393F 		.word	1060754812
 1628 0e34 4DF9393F 		.word	1060763981
 1629 0e38 151D3A3F 		.word	1060773141
 1630 0e3c D4403A3F 		.word	1060782292
ARM GAS  /tmp/ccidj5xY.s 			page 41


 1631 0e40 8A643A3F 		.word	1060791434
 1632 0e44 38883A3F 		.word	1060800568
 1633 0e48 DCAB3A3F 		.word	1060809692
 1634 0e4c 77CF3A3F 		.word	1060818807
 1635 0e50 0AF33A3F 		.word	1060827914
 1636 0e54 94163B3F 		.word	1060837012
 1637 0e58 153A3B3F 		.word	1060846101
 1638 0e5c 8D5D3B3F 		.word	1060855181
 1639 0e60 FD803B3F 		.word	1060864253
 1640 0e64 63A43B3F 		.word	1060873315
 1641 0e68 C1C73B3F 		.word	1060882369
 1642 0e6c 16EB3B3F 		.word	1060891414
 1643 0e70 620E3C3F 		.word	1060900450
 1644 0e74 A5313C3F 		.word	1060909477
 1645 0e78 E0543C3F 		.word	1060918496
 1646 0e7c 12783C3F 		.word	1060927506
 1647 0e80 3B9B3C3F 		.word	1060936507
 1648 0e84 5BBE3C3F 		.word	1060945499
 1649 0e88 73E13C3F 		.word	1060954483
 1650 0e8c 81043D3F 		.word	1060963457
 1651 0e90 88273D3F 		.word	1060972424
 1652 0e94 854A3D3F 		.word	1060981381
 1653 0e98 7A6D3D3F 		.word	1060990330
 1654 0e9c 66903D3F 		.word	1060999270
 1655 0ea0 49B33D3F 		.word	1061008201
 1656 0ea4 23D63D3F 		.word	1061017123
 1657 0ea8 F5F83D3F 		.word	1061026037
 1658 0eac BE1B3E3F 		.word	1061034942
 1659 0eb0 7F3E3E3F 		.word	1061043839
 1660 0eb4 37613E3F 		.word	1061052727
 1661 0eb8 E6833E3F 		.word	1061061606
 1662 0ebc 8DA63E3F 		.word	1061070477
 1663 0ec0 2BC93E3F 		.word	1061079339
 1664 0ec4 C0EB3E3F 		.word	1061088192
 1665 0ec8 4C0E3F3F 		.word	1061097036
 1666 0ecc D1303F3F 		.word	1061105873
 1667 0ed0 4C533F3F 		.word	1061114700
 1668 0ed4 BF753F3F 		.word	1061123519
 1669 0ed8 29983F3F 		.word	1061132329
 1670 0edc 8BBA3F3F 		.word	1061141131
 1671 0ee0 E4DC3F3F 		.word	1061149924
 1672 0ee4 34FF3F3F 		.word	1061158708
 1673 0ee8 7C21403F 		.word	1061167484
 1674 0eec BC43403F 		.word	1061176252
 1675 0ef0 F365403F 		.word	1061185011
 1676 0ef4 2188403F 		.word	1061193761
 1677 0ef8 47AA403F 		.word	1061202503
 1678 0efc 64CC403F 		.word	1061211236
 1679 0f00 79EE403F 		.word	1061219961
 1680 0f04 8510413F 		.word	1061228677
 1681 0f08 8932413F 		.word	1061237385
 1682 0f0c 8454413F 		.word	1061246084
 1683 0f10 7776413F 		.word	1061254775
 1684 0f14 6198413F 		.word	1061263457
 1685 0f18 43BA413F 		.word	1061272131
 1686 0f1c 1CDC413F 		.word	1061280796
 1687 0f20 EEFD413F 		.word	1061289454
ARM GAS  /tmp/ccidj5xY.s 			page 42


 1688 0f24 B61F423F 		.word	1061298102
 1689 0f28 7641423F 		.word	1061306742
 1690 0f2c 2E63423F 		.word	1061315374
 1691 0f30 DD84423F 		.word	1061323997
 1692 0f34 84A6423F 		.word	1061332612
 1693 0f38 22C8423F 		.word	1061341218
 1694 0f3c B8E9423F 		.word	1061349816
 1695 0f40 460B433F 		.word	1061358406
 1696 0f44 CB2C433F 		.word	1061366987
 1697 0f48 484E433F 		.word	1061375560
 1698 0f4c BC6F433F 		.word	1061384124
 1699 0f50 2891433F 		.word	1061392680
 1700 0f54 8CB2433F 		.word	1061401228
 1701 0f58 E7D3433F 		.word	1061409767
 1702 0f5c 3AF5433F 		.word	1061418298
 1703 0f60 8516443F 		.word	1061426821
 1704 0f64 C737443F 		.word	1061435335
 1705 0f68 0159443F 		.word	1061443841
 1706 0f6c 337A443F 		.word	1061452339
 1707 0f70 5D9B443F 		.word	1061460829
 1708 0f74 7EBC443F 		.word	1061469310
 1709 0f78 97DD443F 		.word	1061477783
 1710 0f7c A8FE443F 		.word	1061486248
 1711 0f80 B01F453F 		.word	1061494704
 1712 0f84 B040453F 		.word	1061503152
 1713 0f88 A861453F 		.word	1061511592
 1714 0f8c 9882453F 		.word	1061520024
 1715 0f90 7FA3453F 		.word	1061528447
 1716 0f94 5EC4453F 		.word	1061536862
 1717 0f98 35E5453F 		.word	1061545269
 1718 0f9c 0406463F 		.word	1061553668
 1719 0fa0 CA26463F 		.word	1061562058
 1720 0fa4 8947463F 		.word	1061570441
 1721 0fa8 3F68463F 		.word	1061578815
 1722 0fac ED88463F 		.word	1061587181
 1723 0fb0 93A9463F 		.word	1061595539
 1724 0fb4 30CA463F 		.word	1061603888
 1725 0fb8 C6EA463F 		.word	1061612230
 1726 0fbc 530B473F 		.word	1061620563
 1727 0fc0 D82B473F 		.word	1061628888
 1728 0fc4 554C473F 		.word	1061637205
 1729 0fc8 CA6C473F 		.word	1061645514
 1730 0fcc 378D473F 		.word	1061653815
 1731 0fd0 9CAD473F 		.word	1061662108
 1732 0fd4 F8CD473F 		.word	1061670392
 1733 0fd8 4DEE473F 		.word	1061678669
 1734 0fdc 990E483F 		.word	1061686937
 1735 0fe0 DE2E483F 		.word	1061695198
 1736 0fe4 1A4F483F 		.word	1061703450
 1737 0fe8 4E6F483F 		.word	1061711694
 1738 0fec 7A8F483F 		.word	1061719930
 1739 0ff0 9FAF483F 		.word	1061728159
 1740 0ff4 BBCF483F 		.word	1061736379
 1741 0ff8 CFEF483F 		.word	1061744591
 1742 0ffc DB0F493F 		.word	1061752795
 1743              		.text
 1744              	.Letext0:
ARM GAS  /tmp/ccidj5xY.s 			page 43


 1745              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1746              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1747              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 1748              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1749              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1750              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1751              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1752              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1753              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1754              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1755              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1756              		.file 14 "Core/Inc/atan_lut.h"
 1757              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1758              		.file 16 "<built-in>"
ARM GAS  /tmp/ccidj5xY.s 			page 44


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccidj5xY.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccidj5xY.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccidj5xY.s:100    .text.MX_GPIO_Init:00000050 $d
     /tmp/ccidj5xY.s:106    .text.__io_putchar:00000000 $t
     /tmp/ccidj5xY.s:112    .text.__io_putchar:00000000 __io_putchar
     /tmp/ccidj5xY.s:148    .text.__io_putchar:0000001c $d
     /tmp/ccidj5xY.s:697    .bss.huart1:00000000 huart1
     /tmp/ccidj5xY.s:153    .text.Error_Handler:00000000 $t
     /tmp/ccidj5xY.s:159    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccidj5xY.s:191    .text.MX_ADC1_Init:00000000 $t
     /tmp/ccidj5xY.s:196    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
     /tmp/ccidj5xY.s:286    .text.MX_ADC1_Init:00000050 $d
     /tmp/ccidj5xY.s:711    .bss.hadc1:00000000 hadc1
     /tmp/ccidj5xY.s:292    .text.MX_ADC2_Init:00000000 $t
     /tmp/ccidj5xY.s:297    .text.MX_ADC2_Init:00000000 MX_ADC2_Init
     /tmp/ccidj5xY.s:387    .text.MX_ADC2_Init:00000050 $d
     /tmp/ccidj5xY.s:704    .bss.hadc2:00000000 hadc2
     /tmp/ccidj5xY.s:393    .text.MX_USART1_UART_Init:00000000 $t
     /tmp/ccidj5xY.s:398    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
     /tmp/ccidj5xY.s:453    .text.MX_USART1_UART_Init:0000002c $d
     /tmp/ccidj5xY.s:459    .text.SystemClock_Config:00000000 $t
     /tmp/ccidj5xY.s:465    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccidj5xY.s:585    .text.main:00000000 $t
     /tmp/ccidj5xY.s:591    .text.main:00000000 main
     /tmp/ccidj5xY.s:687    .text.main:0000006c $d
     /tmp/ccidj5xY.s:694    .bss.huart1:00000000 $d
     /tmp/ccidj5xY.s:701    .bss.hadc2:00000000 $d
     /tmp/ccidj5xY.s:708    .bss.hadc1:00000000 $d
     /tmp/ccidj5xY.s:718    .rodata.ATAN_LUT:00000000 ATAN_LUT
     /tmp/ccidj5xY.s:715    .rodata.ATAN_LUT:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Transmit
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
